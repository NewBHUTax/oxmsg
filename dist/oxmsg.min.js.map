{"version":3,"file":"oxmsg.min.js","sources":["../node_modules/cfb/cfb.js","../lib/cfb_storage.js","../lib/enums.js","../lib/property_tags.js","../lib/utils/time.js","../node_modules/long/dist/long.js","../node_modules/bytebuffer/dist/bytebuffer-node.js","../lib/utils/lcid.js","../lib/utils/utils.js","../node_modules/uuid/dist/esm-node/rng.js","../node_modules/uuid/dist/esm-node/regex.js","../node_modules/uuid/dist/esm-node/stringify.js","../node_modules/uuid/dist/esm-node/validate.js","../node_modules/uuid/dist/esm-node/v4.js","../lib/property.js","../lib/properties.js","../lib/streams/top_level_properties.js","../lib/streams/entry_stream.js","../lib/streams/guid_stream.js","../lib/streams/string_stream.js","../lib/streams/named_properties.js","../lib/address/address.js","../lib/utils/mapi.js","../lib/streams/recipient_properties.js","../lib/address/recipients.js","../node_modules/safer-buffer/safer.js","../node_modules/email-addresses/lib/email-addresses.js","../node_modules/address-rfc2822/index.js","../node_modules/iconv-lite/lib/bom-handling.js","../node_modules/iconv-lite/encodings/internal.js","../node_modules/iconv-lite/encodings/utf32.js","../node_modules/iconv-lite/encodings/utf16.js","../node_modules/iconv-lite/encodings/utf7.js","../node_modules/iconv-lite/encodings/sbcs-codec.js","../node_modules/iconv-lite/encodings/dbcs-codec.js","../node_modules/iconv-lite/encodings/sbcs-data.js","../node_modules/iconv-lite/encodings/sbcs-data-generated.js","../node_modules/iconv-lite/encodings/dbcs-data.js","../node_modules/iconv-lite/encodings/index.js","../node_modules/iconv-lite/lib/streams.js","../node_modules/iconv-lite/lib/index.js","../lib/mime/header/rfc2047.js","../lib/address/one_off_entry_id.js","../lib/address/sender.js","../lib/streams/attachment_properties.js","../lib/utils/mime.js","../lib/attachment.js","../lib/attachments.js","../lib/structures/report_tag.js","../lib/helpers/crc32.js","../lib/helpers/rtf_compressor.js","../lib/email.js","../lib/message.js","../lib/helpers/strings.js"],"sourcesContent":["/* cfb.js (C) 2013-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*jshint eqnull:true */\n/*exported CFB */\n/*global module, require:false, process:false, Buffer:false, Uint8Array:false, Uint16Array:false */\n\nvar Base64 = (function make_b64(){\n\tvar map = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\treturn {\n\t\tencode: function(input) {\n\t\t\tvar o = \"\";\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n\t\t\tfor(var i = 0; i < input.length; ) {\n\t\t\t\tc1 = input.charCodeAt(i++);\n\t\t\t\te1 = (c1 >> 2);\n\n\t\t\t\tc2 = input.charCodeAt(i++);\n\t\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\n\n\t\t\t\tc3 = input.charCodeAt(i++);\n\t\t\t\te3 = ((c2 & 15) << 2) | (c3 >> 6);\n\t\t\t\te4 = (c3 & 63);\n\t\t\t\tif (isNaN(c2)) { e3 = e4 = 64; }\n\t\t\t\telse if (isNaN(c3)) { e4 = 64; }\n\t\t\t\to += map.charAt(e1) + map.charAt(e2) + map.charAt(e3) + map.charAt(e4);\n\t\t\t}\n\t\t\treturn o;\n\t\t},\n\t\tdecode: function b64_decode(input) {\n\t\t\tvar o = \"\";\n\t\t\tvar c1=0, c2=0, c3=0, e1=0, e2=0, e3=0, e4=0;\n\t\t\tinput = input.replace(/[^\\w\\+\\/\\=]/g, \"\");\n\t\t\tfor(var i = 0; i < input.length;) {\n\t\t\t\te1 = map.indexOf(input.charAt(i++));\n\t\t\t\te2 = map.indexOf(input.charAt(i++));\n\t\t\t\tc1 = (e1 << 2) | (e2 >> 4);\n\t\t\t\to += String.fromCharCode(c1);\n\n\t\t\t\te3 = map.indexOf(input.charAt(i++));\n\t\t\t\tc2 = ((e2 & 15) << 4) | (e3 >> 2);\n\t\t\t\tif (e3 !== 64) { o += String.fromCharCode(c2); }\n\n\t\t\t\te4 = map.indexOf(input.charAt(i++));\n\t\t\t\tc3 = ((e3 & 3) << 6) | e4;\n\t\t\t\tif (e4 !== 64) { o += String.fromCharCode(c3); }\n\t\t\t}\n\t\t\treturn o;\n\t\t}\n\t};\n})();\nvar has_buf = (typeof Buffer !== 'undefined' && typeof process !== 'undefined' && typeof process.versions !== 'undefined' && process.versions.node);\n\nvar Buffer_from = function(){};\n\nif(typeof Buffer !== 'undefined') {\n\tvar nbfs = !Buffer.from;\n\tif(!nbfs) try { Buffer.from(\"foo\", \"utf8\"); } catch(e) { nbfs = true; }\n\tBuffer_from = nbfs ? function(buf, enc) { return (enc) ? new Buffer(buf, enc) : new Buffer(buf); } : Buffer.from.bind(Buffer);\n\t// $FlowIgnore\n\tif(!Buffer.alloc) Buffer.alloc = function(n) { return new Buffer(n); };\n\t// $FlowIgnore\n\tif(!Buffer.allocUnsafe) Buffer.allocUnsafe = function(n) { return new Buffer(n); };\n}\n\nfunction new_raw_buf(len) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.alloc(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nfunction new_unsafe_buf(len) {\n\t/* jshint -W056 */\n\treturn has_buf ? Buffer.allocUnsafe(len) : new Array(len);\n\t/* jshint +W056 */\n}\n\nvar s2a = function s2a(s) {\n\tif(has_buf) return Buffer_from(s, \"binary\");\n\treturn s.split(\"\").map(function(x){ return x.charCodeAt(0) & 0xff; });\n};\n\nvar chr0 = /\\u0000/g, chr1 = /[\\u0001-\\u0006]/g;\nvar __toBuffer = function(bufs) { var x = []; for(var i = 0; i < bufs[0].length; ++i) { x.push.apply(x, bufs[0][i]); } return x; };\nvar ___toBuffer = __toBuffer;\nvar __utf16le = function(b,s,e) { var ss=[]; for(var i=s; i<e; i+=2) ss.push(String.fromCharCode(__readUInt16LE(b,i))); return ss.join(\"\").replace(chr0,''); };\nvar ___utf16le = __utf16le;\nvar __hexlify = function(b,s,l) { var ss=[]; for(var i=s; i<s+l; ++i) ss.push((\"0\" + b[i].toString(16)).slice(-2)); return ss.join(\"\"); };\nvar ___hexlify = __hexlify;\nvar __bconcat = function(bufs) {\n\tif(Array.isArray(bufs[0])) return [].concat.apply([], bufs);\n\tvar maxlen = 0, i = 0;\n\tfor(i = 0; i < bufs.length; ++i) maxlen += bufs[i].length;\n\tvar o = new Uint8Array(maxlen);\n\tfor(i = 0, maxlen = 0; i < bufs.length; maxlen += bufs[i].length, ++i) o.set(bufs[i], maxlen);\n\treturn o;\n};\nvar bconcat = __bconcat;\n\n\nif(has_buf) {\n\t__utf16le = function(b,s,e) {\n\t\tif(!Buffer.isBuffer(b)) return ___utf16le(b,s,e);\n\t\treturn b.toString('utf16le',s,e).replace(chr0,'')/*.replace(chr1,'!')*/;\n\t};\n\t__hexlify = function(b,s,l) { return Buffer.isBuffer(b) ? b.toString('hex',s,s+l) : ___hexlify(b,s,l); };\n\t__toBuffer = function(bufs) { return (bufs[0].length > 0 && Buffer.isBuffer(bufs[0][0])) ? Buffer.concat((bufs[0])) : ___toBuffer(bufs);};\n\ts2a = function(s) { return Buffer_from(s, \"binary\"); };\n\tbconcat = function(bufs) { return Buffer.isBuffer(bufs[0]) ? Buffer.concat(bufs) : __bconcat(bufs); };\n}\n\n\nvar __readUInt8 = function(b, idx) { return b[idx]; };\nvar __readUInt16LE = function(b, idx) { return b[idx+1]*(1<<8)+b[idx]; };\nvar __readInt16LE = function(b, idx) { var u = b[idx+1]*(1<<8)+b[idx]; return (u < 0x8000) ? u : (0xffff - u + 1) * -1; };\nvar __readUInt32LE = function(b, idx) { return b[idx+3]*(1<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\nvar __readInt32LE = function(b, idx) { return (b[idx+3]<<24)+(b[idx+2]<<16)+(b[idx+1]<<8)+b[idx]; };\n\nfunction ReadShift(size, t) {\n\tvar oI, oS, type = 0;\n\tswitch(size) {\n\t\tcase 1: oI = __readUInt8(this, this.l); break;\n\t\tcase 2: oI = (t !== 'i' ? __readUInt16LE : __readInt16LE)(this, this.l); break;\n\t\tcase 4: oI = __readInt32LE(this, this.l); break;\n\t\tcase 16: type = 2; oS = __hexlify(this, this.l, size);\n\t}\n\tthis.l += size; if(type === 0) return oI; return oS;\n}\n\nvar __writeUInt32LE = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >>> 8) & 0xFF); b[idx+2] = ((val >>> 16) & 0xFF); b[idx+3] = ((val >>> 24) & 0xFF); };\nvar __writeInt32LE  = function(b, val, idx) { b[idx] = (val & 0xFF); b[idx+1] = ((val >> 8) & 0xFF); b[idx+2] = ((val >> 16) & 0xFF); b[idx+3] = ((val >> 24) & 0xFF); };\n\nfunction WriteShift(t, val, f) {\n\tvar size = 0, i = 0;\n\tswitch(f) {\n\t\tcase \"hex\": for(; i < t; ++i) {\nthis[this.l++] = parseInt(val.slice(2*i, 2*i+2), 16)||0;\n\t\t} return this;\n\t\tcase \"utf16le\":\nvar end = this.l + t;\n\t\t\tfor(i = 0; i < Math.min(val.length, t); ++i) {\n\t\t\t\tvar cc = val.charCodeAt(i);\n\t\t\t\tthis[this.l++] = cc & 0xff;\n\t\t\t\tthis[this.l++] = cc >> 8;\n\t\t\t}\n\t\t\twhile(this.l < end) this[this.l++] = 0;\n\t\t\treturn this;\n\t}\nswitch(t) {\n\t\tcase  1: size = 1; this[this.l] = val&0xFF; break;\n\t\tcase  2: size = 2; this[this.l] = val&0xFF; val >>>= 8; this[this.l+1] = val&0xFF; break;\n\t\tcase  4: size = 4; __writeUInt32LE(this, val, this.l); break;\n\t\tcase -4: size = 4; __writeInt32LE(this, val, this.l); break;\n\t}\n\tthis.l += size; return this;\n}\n\nfunction CheckField(hexstr, fld) {\n\tvar m = __hexlify(this,this.l,hexstr.length>>1);\n\tif(m !== hexstr) throw new Error(fld + 'Expected ' + hexstr + ' saw ' + m);\n\tthis.l += hexstr.length>>1;\n}\n\nfunction prep_blob(blob, pos) {\n\tblob.l = pos;\n\tblob.read_shift = ReadShift;\n\tblob.chk = CheckField;\n\tblob.write_shift = WriteShift;\n}\n\nfunction new_buf(sz) {\n\tvar o = (new_raw_buf(sz));\n\tprep_blob(o, 0);\n\treturn o;\n}\n\n/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tfactory(CRC32 = {});\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.0';\n/* see perf/crc32table.js */\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T = signed_crc_table();\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1, L = bstr.length - 1;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t\tC = (C>>>8) ^ T[(C^bstr.charCodeAt(i++))&0xFF];\n\t}\n\tif(i === L) C = (C>>>8) ^ T[(C ^ bstr.charCodeAt(i))&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf(buf, seed) {\n\tif(buf.length > 10000) return crc32_buf_8(buf, seed);\n\tvar C = seed ^ -1, L = buf.length - 3;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+3) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_buf_8(buf, seed) {\n\tvar C = seed ^ -1, L = buf.length - 7;\n\tfor(var i = 0; i < L;) {\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t\tC = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\t}\n\twhile(i < L+7) C = (C>>>8) ^ T[(C^buf[i++])&0xFF];\n\treturn C ^ -1;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L=str.length, c, d; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T[(C ^ c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn C ^ -1;\n}\nCRC32.table = T;\nCRC32.bstr = crc32_bstr;\nCRC32.buf = crc32_buf;\nCRC32.str = crc32_str;\n}));\n/* [MS-CFB] v20171201 */\nvar CFB = (function _CFB(){\nvar exports = {};\nexports.version = '1.2.0';\n/* [MS-CFB] 2.6.4 */\nfunction namecmp(l, r) {\n\tvar L = l.split(\"/\"), R = r.split(\"/\");\n\tfor(var i = 0, c = 0, Z = Math.min(L.length, R.length); i < Z; ++i) {\n\t\tif((c = L[i].length - R[i].length)) return c;\n\t\tif(L[i] != R[i]) return L[i] < R[i] ? -1 : 1;\n\t}\n\treturn L.length - R.length;\n}\nfunction dirname(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return (p.slice(0,-1).indexOf(\"/\") === -1) ? p : dirname(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(0, c+1);\n}\n\nfunction filename(p) {\n\tif(p.charAt(p.length - 1) == \"/\") return filename(p.slice(0, -1));\n\tvar c = p.lastIndexOf(\"/\");\n\treturn (c === -1) ? p : p.slice(c+1);\n}\n/* -------------------------------------------------------------------------- */\n/* DOS Date format:\n   high|YYYYYYYm.mmmddddd.HHHHHMMM.MMMSSSSS|low\n   add 1980 to stored year\n   stored second should be doubled\n*/\n\n/* write JS date to buf as a DOS date */\nfunction write_dos_date(buf, date) {\n\tif(typeof date === \"string\") date = new Date(date);\n\tvar hms = date.getHours();\n\thms = hms << 6 | date.getMinutes();\n\thms = hms << 5 | (date.getSeconds()>>>1);\n\tbuf.write_shift(2, hms);\n\tvar ymd = (date.getFullYear() - 1980);\n\tymd = ymd << 4 | (date.getMonth()+1);\n\tymd = ymd << 5 | date.getDate();\n\tbuf.write_shift(2, ymd);\n}\n\n/* read four bytes from buf and interpret as a DOS date */\nfunction parse_dos_date(buf) {\n\tvar hms = buf.read_shift(2) & 0xFFFF;\n\tvar ymd = buf.read_shift(2) & 0xFFFF;\n\tvar val = new Date();\n\tvar d = ymd & 0x1F; ymd >>>= 5;\n\tvar m = ymd & 0x0F; ymd >>>= 4;\n\tval.setMilliseconds(0);\n\tval.setFullYear(ymd + 1980);\n\tval.setMonth(m-1);\n\tval.setDate(d);\n\tvar S = hms & 0x1F; hms >>>= 5;\n\tvar M = hms & 0x3F; hms >>>= 6;\n\tval.setHours(hms);\n\tval.setMinutes(M);\n\tval.setSeconds(S<<1);\n\treturn val;\n}\nfunction parse_extra_field(blob) {\n\tprep_blob(blob, 0);\n\tvar o = {};\n\tvar flags = 0;\n\twhile(blob.l <= blob.length - 4) {\n\t\tvar type = blob.read_shift(2);\n\t\tvar sz = blob.read_shift(2), tgt = blob.l + sz;\n\t\tvar p = {};\n\t\tswitch(type) {\n\t\t\t/* UNIX-style Timestamps */\n\t\t\tcase 0x5455: {\n\t\t\t\tflags = blob.read_shift(1);\n\t\t\t\tif(flags & 1) p.mtime = blob.read_shift(4);\n\t\t\t\t/* for some reason, CD flag corresponds to LFH */\n\t\t\t\tif(sz > 5) {\n\t\t\t\t\tif(flags & 2) p.atime = blob.read_shift(4);\n\t\t\t\t\tif(flags & 4) p.ctime = blob.read_shift(4);\n\t\t\t\t}\n\t\t\t\tif(p.mtime) p.mt = new Date(p.mtime*1000);\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t\tblob.l = tgt;\n\t\to[type] = p;\n\t}\n\treturn o;\n}\nvar fs;\nfunction get_fs() { return fs || (fs = require('fs')); }\nfunction parse(file, options) {\nif(file[0] == 0x50 && file[1] == 0x4b) return parse_zip(file, options);\nif((file[0] | 0x20) == 0x6d && (file[1]|0x20) == 0x69) return parse_mad(file, options);\nif(file.length < 512) throw new Error(\"CFB file size \" + file.length + \" < 512\");\nvar mver = 3;\nvar ssz = 512;\nvar nmfs = 0; // number of mini FAT sectors\nvar difat_sec_cnt = 0;\nvar dir_start = 0;\nvar minifat_start = 0;\nvar difat_start = 0;\n\nvar fat_addrs = []; // locations of FAT sectors\n\n/* [MS-CFB] 2.2 Compound File Header */\nvar blob = file.slice(0,512);\nprep_blob(blob, 0);\n\n/* major version */\nvar mv = check_get_mver(blob);\nmver = mv[0];\nswitch(mver) {\n\tcase 3: ssz = 512; break; case 4: ssz = 4096; break;\n\tcase 0: if(mv[1] == 0) return parse_zip(file, options);\n\t/* falls through */\n\tdefault: throw new Error(\"Major Version: Expected 3 or 4 saw \" + mver);\n}\n\n/* reprocess header */\nif(ssz !== 512) { blob = file.slice(0,ssz); prep_blob(blob, 28 /* blob.l */); }\n/* Save header for final object */\nvar header = file.slice(0,ssz);\n\ncheck_shifts(blob, mver);\n\n// Number of Directory Sectors\nvar dir_cnt = blob.read_shift(4, 'i');\nif(mver === 3 && dir_cnt !== 0) throw new Error('# Directory Sectors: Expected 0 saw ' + dir_cnt);\n\n// Number of FAT Sectors\nblob.l += 4;\n\n// First Directory Sector Location\ndir_start = blob.read_shift(4, 'i');\n\n// Transaction Signature\nblob.l += 4;\n\n// Mini Stream Cutoff Size\nblob.chk('00100000', 'Mini Stream Cutoff Size: ');\n\n// First Mini FAT Sector Location\nminifat_start = blob.read_shift(4, 'i');\n\n// Number of Mini FAT Sectors\nnmfs = blob.read_shift(4, 'i');\n\n// First DIFAT sector location\ndifat_start = blob.read_shift(4, 'i');\n\n// Number of DIFAT Sectors\ndifat_sec_cnt = blob.read_shift(4, 'i');\n\n// Grab FAT Sector Locations\nfor(var q = -1, j = 0; j < 109; ++j) { /* 109 = (512 - blob.l)>>>2; */\n\tq = blob.read_shift(4, 'i');\n\tif(q<0) break;\n\tfat_addrs[j] = q;\n}\n\n/** Break the file up into sectors */\nvar sectors = sectorify(file, ssz);\n\nsleuth_fat(difat_start, difat_sec_cnt, sectors, ssz, fat_addrs);\n\n/** Chains */\nvar sector_list = make_sector_list(sectors, dir_start, fat_addrs, ssz);\n\nsector_list[dir_start].name = \"!Directory\";\nif(nmfs > 0 && minifat_start !== ENDOFCHAIN) sector_list[minifat_start].name = \"!MiniFAT\";\nsector_list[fat_addrs[0]].name = \"!FAT\";\nsector_list.fat_addrs = fat_addrs;\nsector_list.ssz = ssz;\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nvar files = {}, Paths = [], FileIndex = [], FullPaths = [];\nread_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, minifat_start);\n\nbuild_full_paths(FileIndex, FullPaths, Paths);\nPaths.shift();\n\nvar o = {\n\tFileIndex: FileIndex,\n\tFullPaths: FullPaths\n};\n\n// $FlowIgnore\nif(options && options.raw) o.raw = {header: header, sectors: sectors};\nreturn o;\n} // parse\n\n/* [MS-CFB] 2.2 Compound File Header -- read up to major version */\nfunction check_get_mver(blob) {\n\tif(blob[blob.l] == 0x50 && blob[blob.l + 1] == 0x4b) return [0, 0];\n\t// header signature 8\n\tblob.chk(HEADER_SIGNATURE, 'Header Signature: ');\n\n\t// clsid 16\n\t//blob.chk(HEADER_CLSID, 'CLSID: ');\n\tblob.l += 16;\n\n\t// minor version 2\n\tvar mver = blob.read_shift(2, 'u');\n\n\treturn [blob.read_shift(2,'u'), mver];\n}\nfunction check_shifts(blob, mver) {\n\tvar shift = 0x09;\n\n\t// Byte Order\n\t//blob.chk('feff', 'Byte Order: '); // note: some writers put 0xffff\n\tblob.l += 2;\n\n\t// Sector Shift\n\tswitch((shift = blob.read_shift(2))) {\n\t\tcase 0x09: if(mver != 3) throw new Error('Sector Shift: Expected 9 saw ' + shift); break;\n\t\tcase 0x0c: if(mver != 4) throw new Error('Sector Shift: Expected 12 saw ' + shift); break;\n\t\tdefault: throw new Error('Sector Shift: Expected 9 or 12 saw ' + shift);\n\t}\n\n\t// Mini Sector Shift\n\tblob.chk('0600', 'Mini Sector Shift: ');\n\n\t// Reserved\n\tblob.chk('000000000000', 'Reserved: ');\n}\n\n/** Break the file up into sectors */\nfunction sectorify(file, ssz) {\n\tvar nsectors = Math.ceil(file.length/ssz)-1;\n\tvar sectors = [];\n\tfor(var i=1; i < nsectors; ++i) sectors[i-1] = file.slice(i*ssz,(i+1)*ssz);\n\tsectors[nsectors-1] = file.slice(nsectors*ssz);\n\treturn sectors;\n}\n\n/* [MS-CFB] 2.6.4 Red-Black Tree */\nfunction build_full_paths(FI, FP, Paths) {\n\tvar i = 0, L = 0, R = 0, C = 0, j = 0, pl = Paths.length;\n\tvar dad = [], q = [];\n\n\tfor(; i < pl; ++i) { dad[i]=q[i]=i; FP[i]=Paths[i]; }\n\n\tfor(; j < q.length; ++j) {\n\t\ti = q[j];\n\t\tL = FI[i].L; R = FI[i].R; C = FI[i].C;\n\t\tif(dad[i] === i) {\n\t\t\tif(L !== -1 /*NOSTREAM*/ && dad[L] !== L) dad[i] = dad[L];\n\t\t\tif(R !== -1 && dad[R] !== R) dad[i] = dad[R];\n\t\t}\n\t\tif(C !== -1 /*NOSTREAM*/) dad[C] = i;\n\t\tif(L !== -1 && i != dad[i]) { dad[L] = dad[i]; if(q.lastIndexOf(L) < j) q.push(L); }\n\t\tif(R !== -1 && i != dad[i]) { dad[R] = dad[i]; if(q.lastIndexOf(R) < j) q.push(R); }\n\t}\n\tfor(i=1; i < pl; ++i) if(dad[i] === i) {\n\t\tif(R !== -1 /*NOSTREAM*/ && dad[R] !== R) dad[i] = dad[R];\n\t\telse if(L !== -1 && dad[L] !== L) dad[i] = dad[L];\n\t}\n\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type === 0 /* unknown */) continue;\n\t\tj = i;\n\t\tif(j != dad[j]) do {\n\t\t\tj = dad[j];\n\t\t\tFP[i] = FP[j] + \"/\" + FP[i];\n\t\t} while (j !== 0 && -1 !== dad[j] && j != dad[j]);\n\t\tdad[i] = -1;\n\t}\n\n\tFP[0] += \"/\";\n\tfor(i=1; i < pl; ++i) {\n\t\tif(FI[i].type !== 2 /* stream */) FP[i] += \"/\";\n\t}\n}\n\nfunction get_mfat_entry(entry, payload, mini) {\n\tvar start = entry.start, size = entry.size;\n\t//return (payload.slice(start*MSSZ, start*MSSZ + size));\n\tvar o = [];\n\tvar idx = start;\n\twhile(mini && size > 0 && idx >= 0) {\n\t\to.push(payload.slice(idx * MSSZ, idx * MSSZ + MSSZ));\n\t\tsize -= MSSZ;\n\t\tidx = __readInt32LE(mini, idx * 4);\n\t}\n\tif(o.length === 0) return (new_buf(0));\n\treturn (bconcat(o).slice(0, entry.size));\n}\n\n/** Chase down the rest of the DIFAT chain to build a comprehensive list\n    DIFAT chains by storing the next sector number as the last 32 bits */\nfunction sleuth_fat(idx, cnt, sectors, ssz, fat_addrs) {\n\tvar q = ENDOFCHAIN;\n\tif(idx === ENDOFCHAIN) {\n\t\tif(cnt !== 0) throw new Error(\"DIFAT chain shorter than expected\");\n\t} else if(idx !== -1 /*FREESECT*/) {\n\t\tvar sector = sectors[idx], m = (ssz>>>2)-1;\n\t\tif(!sector) return;\n\t\tfor(var i = 0; i < m; ++i) {\n\t\t\tif((q = __readInt32LE(sector,i*4)) === ENDOFCHAIN) break;\n\t\t\tfat_addrs.push(q);\n\t\t}\n\t\tsleuth_fat(__readInt32LE(sector,ssz-4),cnt - 1, sectors, ssz, fat_addrs);\n\t}\n}\n\n/** Follow the linked list of sectors for a given starting point */\nfunction get_sector_list(sectors, start, fat_addrs, ssz, chkd) {\n\tvar buf = [], buf_chain = [];\n\tif(!chkd) chkd = [];\n\tvar modulus = ssz - 1, j = 0, jj = 0;\n\tfor(j=start; j>=0;) {\n\t\tchkd[j] = true;\n\t\tbuf[buf.length] = j;\n\t\tbuf_chain.push(sectors[j]);\n\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\tjj = ((j*4) & modulus);\n\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\tif(!sectors[addr]) break;\n\t\tj = __readInt32LE(sectors[addr], jj);\n\t}\n\treturn {nodes: buf, data:__toBuffer([buf_chain])};\n}\n\n/** Chase down the sector linked lists */\nfunction make_sector_list(sectors, dir_start, fat_addrs, ssz) {\n\tvar sl = sectors.length, sector_list = ([]);\n\tvar chkd = [], buf = [], buf_chain = [];\n\tvar modulus = ssz - 1, i=0, j=0, k=0, jj=0;\n\tfor(i=0; i < sl; ++i) {\n\t\tbuf = ([]);\n\t\tk = (i + dir_start); if(k >= sl) k-=sl;\n\t\tif(chkd[k]) continue;\n\t\tbuf_chain = [];\n\t\tvar seen = [];\n\t\tfor(j=k; j>=0;) {\n\t\t\tseen[j] = true;\n\t\t\tchkd[j] = true;\n\t\t\tbuf[buf.length] = j;\n\t\t\tbuf_chain.push(sectors[j]);\n\t\t\tvar addr = fat_addrs[Math.floor(j*4/ssz)];\n\t\t\tjj = ((j*4) & modulus);\n\t\t\tif(ssz < 4 + jj) throw new Error(\"FAT boundary crossed: \" + j + \" 4 \"+ssz);\n\t\t\tif(!sectors[addr]) break;\n\t\t\tj = __readInt32LE(sectors[addr], jj);\n\t\t\tif(seen[j]) break;\n\t\t}\n\t\tsector_list[k] = ({nodes: buf, data:__toBuffer([buf_chain])});\n\t}\n\treturn sector_list;\n}\n\n/* [MS-CFB] 2.6.1 Compound File Directory Entry */\nfunction read_directory(dir_start, sector_list, sectors, Paths, nmfs, files, FileIndex, mini) {\n\tvar minifat_store = 0, pl = (Paths.length?2:0);\n\tvar sector = sector_list[dir_start].data;\n\tvar i = 0, namelen = 0, name;\n\tfor(; i < sector.length; i+= 128) {\n\t\tvar blob = sector.slice(i, i+128);\n\t\tprep_blob(blob, 64);\n\t\tnamelen = blob.read_shift(2);\n\t\tname = __utf16le(blob,0,namelen-pl);\n\t\tPaths.push(name);\n\t\tvar o = ({\n\t\t\tname:  name,\n\t\t\ttype:  blob.read_shift(1),\n\t\t\tcolor: blob.read_shift(1),\n\t\t\tL:     blob.read_shift(4, 'i'),\n\t\t\tR:     blob.read_shift(4, 'i'),\n\t\t\tC:     blob.read_shift(4, 'i'),\n\t\t\tclsid: blob.read_shift(16),\n\t\t\tstate: blob.read_shift(4, 'i'),\n\t\t\tstart: 0,\n\t\t\tsize: 0\n\t\t});\n\t\tvar ctime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(ctime !== 0) o.ct = read_date(blob, blob.l-8);\n\t\tvar mtime = blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2) + blob.read_shift(2);\n\t\tif(mtime !== 0) o.mt = read_date(blob, blob.l-8);\n\t\to.start = blob.read_shift(4, 'i');\n\t\to.size = blob.read_shift(4, 'i');\n\t\tif(o.size < 0 && o.start < 0) { o.size = o.type = 0; o.start = ENDOFCHAIN; o.name = \"\"; }\n\t\tif(o.type === 5) { /* root */\n\t\t\tminifat_store = o.start;\n\t\t\tif(nmfs > 0 && minifat_store !== ENDOFCHAIN) sector_list[minifat_store].name = \"!StreamData\";\n\t\t\t/*minifat_size = o.size;*/\n\t\t} else if(o.size >= 4096 /* MSCSZ */) {\n\t\t\to.storage = 'fat';\n\t\t\tif(sector_list[o.start] === undefined) sector_list[o.start] = get_sector_list(sectors, o.start, sector_list.fat_addrs, sector_list.ssz);\n\t\t\tsector_list[o.start].name = o.name;\n\t\t\to.content = (sector_list[o.start].data.slice(0,o.size));\n\t\t} else {\n\t\t\to.storage = 'minifat';\n\t\t\tif(o.size < 0) o.size = 0;\n\t\t\telse if(minifat_store !== ENDOFCHAIN && o.start !== ENDOFCHAIN && sector_list[minifat_store]) {\n\t\t\t\to.content = get_mfat_entry(o, sector_list[minifat_store].data, (sector_list[mini]||{}).data);\n\t\t\t}\n\t\t}\n\t\tif(o.content) prep_blob(o.content, 0);\n\t\tfiles[name] = o;\n\t\tFileIndex.push(o);\n\t}\n}\n\nfunction read_date(blob, offset) {\n\treturn new Date(( ( (__readUInt32LE(blob,offset+4)/1e7)*Math.pow(2,32)+__readUInt32LE(blob,offset)/1e7 ) - 11644473600)*1000);\n}\n\nfunction read_file(filename, options) {\n\tget_fs();\n\treturn parse(fs.readFileSync(filename), options);\n}\n\nfunction read(blob, options) {\n\tswitch(options && options.type || \"base64\") {\n\t\tcase \"file\": return read_file(blob, options);\n\t\tcase \"base64\": return parse(s2a(Base64.decode(blob)), options);\n\t\tcase \"binary\": return parse(s2a(blob), options);\n\t}\n\treturn parse(blob, options);\n}\n\nfunction init_cfb(cfb, opts) {\n\tvar o = opts || {}, root = o.root || \"Root Entry\";\n\tif(!cfb.FullPaths) cfb.FullPaths = [];\n\tif(!cfb.FileIndex) cfb.FileIndex = [];\n\tif(cfb.FullPaths.length !== cfb.FileIndex.length) throw new Error(\"inconsistent CFB structure\");\n\tif(cfb.FullPaths.length === 0) {\n\t\tcfb.FullPaths[0] = root + \"/\";\n\t\tcfb.FileIndex[0] = ({ name: root, type: 5 });\n\t}\n\tif(o.CLSID) cfb.FileIndex[0].clsid = o.CLSID;\n\tseed_cfb(cfb);\n}\nfunction seed_cfb(cfb) {\n\tvar nm = \"\\u0001Sh33tJ5\";\n\tif(CFB.find(cfb, \"/\" + nm)) return;\n\tvar p = new_buf(4); p[0] = 55; p[1] = p[3] = 50; p[2] = 54;\n\tcfb.FileIndex.push(({ name: nm, type: 2, content:p, size:4, L:69, R:69, C:69 }));\n\tcfb.FullPaths.push(cfb.FullPaths[0] + nm);\n\trebuild_cfb(cfb);\n}\nfunction rebuild_cfb(cfb, f) {\n\tinit_cfb(cfb);\n\tvar gc = false, s = false;\n\tfor(var i = cfb.FullPaths.length - 1; i >= 0; --i) {\n\t\tvar _file = cfb.FileIndex[i];\n\t\tswitch(_file.type) {\n\t\t\tcase 0:\n\t\t\t\tif(s) gc = true;\n\t\t\t\telse { cfb.FileIndex.pop(); cfb.FullPaths.pop(); }\n\t\t\t\tbreak;\n\t\t\tcase 1: case 2: case 5:\n\t\t\t\ts = true;\n\t\t\t\tif(isNaN(_file.R * _file.L * _file.C)) gc = true;\n\t\t\t\tif(_file.R > -1 && _file.L > -1 && _file.R == _file.L) gc = true;\n\t\t\t\tbreak;\n\t\t\tdefault: gc = true; break;\n\t\t}\n\t}\n\tif(!gc && !f) return;\n\n\tvar now = new Date(1987, 1, 19), j = 0;\n\tvar data = [];\n\tfor(i = 0; i < cfb.FullPaths.length; ++i) {\n\t\tif(cfb.FileIndex[i].type === 0) continue;\n\t\tdata.push([cfb.FullPaths[i], cfb.FileIndex[i]]);\n\t}\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar dad = dirname(data[i][0]);\n\t\ts = false;\n\t\tfor(j = 0; j < data.length; ++j) if(data[j][0] === dad) s = true;\n\t\tif(!s) data.push([dad, ({\n\t\t\tname: filename(dad).replace(\"/\",\"\"),\n\t\t\ttype: 1,\n\t\t\tclsid: HEADER_CLSID,\n\t\t\tct: now, mt: now,\n\t\t\tcontent: null\n\t\t})]);\n\t}\n\n\tdata.sort(function(x,y) { return namecmp(x[0], y[0]); });\n\tcfb.FullPaths = []; cfb.FileIndex = [];\n\tfor(i = 0; i < data.length; ++i) { cfb.FullPaths[i] = data[i][0]; cfb.FileIndex[i] = data[i][1]; }\n\tfor(i = 0; i < data.length; ++i) {\n\t\tvar elt = cfb.FileIndex[i];\n\t\tvar nm = cfb.FullPaths[i];\n\n\t\telt.name =  filename(nm).replace(\"/\",\"\");\n\t\telt.L = elt.R = elt.C = -(elt.color = 1);\n\t\telt.size = elt.content ? elt.content.length : 0;\n\t\telt.start = 0;\n\t\telt.clsid = (elt.clsid || HEADER_CLSID);\n\t\tif(i === 0) {\n\t\t\telt.C = data.length > 1 ? 1 : -1;\n\t\t\telt.size = 0;\n\t\t\telt.type = 5;\n\t\t} else if(nm.slice(-1) == \"/\") {\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==nm) break;\n\t\t\telt.C = j >= data.length ? -1 : j;\n\t\t\tfor(j=i+1;j < data.length; ++j) if(dirname(cfb.FullPaths[j])==dirname(nm)) break;\n\t\t\telt.R = j >= data.length ? -1 : j;\n\t\t\telt.type = 1;\n\t\t} else {\n\t\t\tif(dirname(cfb.FullPaths[i+1]||\"\") == dirname(nm)) elt.R = i + 1;\n\t\t\telt.type = 2;\n\t\t}\n\t}\n\n}\n\nfunction _write(cfb, options) {\n\tvar _opts = options || {};\n\t/* MAD is order-sensitive, skip rebuild and sort */\n\tif(_opts.fileType == 'mad') return write_mad(cfb, _opts);\n\trebuild_cfb(cfb);\n\tswitch(_opts.fileType) {\n\t\tcase 'zip': return write_zip(cfb, _opts);\n\t\t//case 'mad': return write_mad(cfb, _opts);\n\t}\n\tvar L = (function(cfb){\n\t\tvar mini_size = 0, fat_size = 0;\n\t\tfor(var i = 0; i < cfb.FileIndex.length; ++i) {\n\t\t\tvar file = cfb.FileIndex[i];\n\t\t\tif(!file.content) continue;\nvar flen = file.content.length;\n\t\t\tif(flen > 0){\n\t\t\t\tif(flen < 0x1000) mini_size += (flen + 0x3F) >> 6;\n\t\t\t\telse fat_size += (flen + 0x01FF) >> 9;\n\t\t\t}\n\t\t}\n\t\tvar dir_cnt = (cfb.FullPaths.length +3) >> 2;\n\t\tvar mini_cnt = (mini_size + 7) >> 3;\n\t\tvar mfat_cnt = (mini_size + 0x7F) >> 7;\n\t\tvar fat_base = mini_cnt + fat_size + dir_cnt + mfat_cnt;\n\t\tvar fat_cnt = (fat_base + 0x7F) >> 7;\n\t\tvar difat_cnt = fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\twhile(((fat_base + fat_cnt + difat_cnt + 0x7F) >> 7) > fat_cnt) difat_cnt = ++fat_cnt <= 109 ? 0 : Math.ceil((fat_cnt-109)/0x7F);\n\t\tvar L =  [1, difat_cnt, fat_cnt, mfat_cnt, dir_cnt, fat_size, mini_size, 0];\n\t\tcfb.FileIndex[0].size = mini_size << 6;\n\t\tL[7] = (cfb.FileIndex[0].start=L[0]+L[1]+L[2]+L[3]+L[4]+L[5])+((L[6]+7) >> 3);\n\t\treturn L;\n\t})(cfb);\n\tvar o = new_buf(L[7] << 9);\n\tvar i = 0, T = 0;\n\t{\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(1, HEADER_SIG[i]);\n\t\tfor(i = 0; i < 8; ++i) o.write_shift(2, 0);\n\t\to.write_shift(2, 0x003E);\n\t\to.write_shift(2, 0x0003);\n\t\to.write_shift(2, 0xFFFE);\n\t\to.write_shift(2, 0x0009);\n\t\to.write_shift(2, 0x0006);\n\t\tfor(i = 0; i < 3; ++i) o.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, L[2]);\n\t\to.write_shift(4, L[0] + L[1] + L[2] + L[3] - 1);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, 1<<12);\n\t\to.write_shift(4, L[3] ? L[0] + L[1] + L[2] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[3]);\n\t\to.write_shift(-4, L[1] ? L[0] - 1: ENDOFCHAIN);\n\t\to.write_shift(4, L[1]);\n\t\tfor(i = 0; i < 109; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t}\n\tif(L[1]) {\n\t\tfor(T = 0; T < L[1]; ++T) {\n\t\t\tfor(; i < 236 + T * 127; ++i) o.write_shift(-4, i < L[2] ? L[1] + i : -1);\n\t\t\to.write_shift(-4, T === L[1] - 1 ? ENDOFCHAIN : T + 1);\n\t\t}\n\t}\n\tvar chainit = function(w) {\n\t\tfor(T += w; i<T-1; ++i) o.write_shift(-4, i+1);\n\t\tif(w) { ++i; o.write_shift(-4, ENDOFCHAIN); }\n\t};\n\tT = i = 0;\n\tfor(T+=L[1]; i<T; ++i) o.write_shift(-4, consts.DIFSECT);\n\tfor(T+=L[2]; i<T; ++i) o.write_shift(-4, consts.FATSECT);\n\tchainit(L[3]);\n\tchainit(L[4]);\n\tvar j = 0, flen = 0;\n\tvar file = cfb.FileIndex[0];\n\tfor(; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(flen < 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x01FF) >> 9);\n\t}\n\tchainit((L[6] + 7) >> 3);\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tT = i = 0;\n\tfor(j = 0; j < cfb.FileIndex.length; ++j) {\n\t\tfile = cfb.FileIndex[j];\n\t\tif(!file.content) continue;\nflen = file.content.length;\n\t\tif(!flen || flen >= 0x1000) continue;\n\t\tfile.start = T;\n\t\tchainit((flen + 0x3F) >> 6);\n\t}\n\twhile(o.l & 0x1FF) o.write_shift(-4, consts.ENDOFCHAIN);\n\tfor(i = 0; i < L[4]<<2; ++i) {\n\t\tvar nm = cfb.FullPaths[i];\n\t\tif(!nm || nm.length === 0) {\n\t\t\tfor(j = 0; j < 17; ++j) o.write_shift(4, 0);\n\t\t\tfor(j = 0; j < 3; ++j) o.write_shift(4, -1);\n\t\t\tfor(j = 0; j < 12; ++j) o.write_shift(4, 0);\n\t\t\tcontinue;\n\t\t}\n\t\tfile = cfb.FileIndex[i];\n\t\tif(i === 0) file.start = file.size ? file.start - 1 : ENDOFCHAIN;\n\t\tvar _nm = (i === 0 && _opts.root) || file.name;\n\t\tflen = 2*(_nm.length+1);\n\t\to.write_shift(64, _nm, \"utf16le\");\n\t\to.write_shift(2, flen);\n\t\to.write_shift(1, file.type);\n\t\to.write_shift(1, file.color);\n\t\to.write_shift(-4, file.L);\n\t\to.write_shift(-4, file.R);\n\t\to.write_shift(-4, file.C);\n\t\tif(!file.clsid) for(j = 0; j < 4; ++j) o.write_shift(4, 0);\n\t\telse o.write_shift(16, file.clsid, \"hex\");\n\t\to.write_shift(4, file.state || 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, 0); o.write_shift(4, 0);\n\t\to.write_shift(4, file.start);\n\t\to.write_shift(4, file.size); o.write_shift(4, 0);\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size >= 0x1000) {\n\t\t\to.l = (file.start+1) << 9;\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\tfor(; j & 0x1FF; ++j) o.write_shift(1, 0);\n\t\t}\n\t}\n\tfor(i = 1; i < cfb.FileIndex.length; ++i) {\n\t\tfile = cfb.FileIndex[i];\nif(file.size > 0 && file.size < 0x1000) {\n\t\t\tfor(j = 0; j < file.size; ++j) o.write_shift(1, file.content[j]);\n\t\t\tfor(; j & 0x3F; ++j) o.write_shift(1, 0);\n\t\t}\n\t}\n\twhile(o.l < o.length) o.write_shift(1, 0);\n\treturn o;\n}\n/* [MS-CFB] 2.6.4 (Unicode 3.0.1 case conversion) */\nfunction find(cfb, path) {\n\tvar UCFullPaths = cfb.FullPaths.map(function(x) { return x.toUpperCase(); });\n\tvar UCPaths = UCFullPaths.map(function(x) { var y = x.split(\"/\"); return y[y.length - (x.slice(-1) == \"/\" ? 2 : 1)]; });\n\tvar k = false;\n\tif(path.charCodeAt(0) === 47 /* \"/\" */) { k = true; path = UCFullPaths[0].slice(0, -1) + path; }\n\telse k = path.indexOf(\"/\") !== -1;\n\tvar UCPath = path.toUpperCase();\n\tvar w = k === true ? UCFullPaths.indexOf(UCPath) : UCPaths.indexOf(UCPath);\n\tif(w !== -1) return cfb.FileIndex[w];\n\n\tvar m = !UCPath.match(chr1);\n\tUCPath = UCPath.replace(chr0,'');\n\tif(m) UCPath = UCPath.replace(chr1,'!');\n\tfor(w = 0; w < UCFullPaths.length; ++w) {\n\t\tif((m ? UCFullPaths[w].replace(chr1,'!') : UCFullPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t\tif((m ? UCPaths[w].replace(chr1,'!') : UCPaths[w]).replace(chr0,'') == UCPath) return cfb.FileIndex[w];\n\t}\n\treturn null;\n}\n/** CFB Constants */\nvar MSSZ = 64; /* Mini Sector Size = 1<<6 */\n//var MSCSZ = 4096; /* Mini Stream Cutoff Size */\n/* 2.1 Compound File Sector Numbers and Types */\nvar ENDOFCHAIN = -2;\n/* 2.2 Compound File Header */\nvar HEADER_SIGNATURE = 'd0cf11e0a1b11ae1';\nvar HEADER_SIG = [0xD0, 0xCF, 0x11, 0xE0, 0xA1, 0xB1, 0x1A, 0xE1];\nvar HEADER_CLSID = '00000000000000000000000000000000';\nvar consts = {\n\t/* 2.1 Compund File Sector Numbers and Types */\n\tMAXREGSECT: -6,\n\tDIFSECT: -4,\n\tFATSECT: -3,\n\tENDOFCHAIN: ENDOFCHAIN,\n\tFREESECT: -1,\n\t/* 2.2 Compound File Header */\n\tHEADER_SIGNATURE: HEADER_SIGNATURE,\n\tHEADER_MINOR_VERSION: '3e00',\n\tMAXREGSID: -6,\n\tNOSTREAM: -1,\n\tHEADER_CLSID: HEADER_CLSID,\n\t/* 2.6.1 Compound File Directory Entry */\n\tEntryTypes: ['unknown','storage','stream','lockbytes','property','root']\n};\n\nfunction write_file(cfb, filename, options) {\n\tget_fs();\n\tvar o = _write(cfb, options);\nfs.writeFileSync(filename, o);\n}\n\nfunction a2s(o) {\n\tvar out = new Array(o.length);\n\tfor(var i = 0; i < o.length; ++i) out[i] = String.fromCharCode(o[i]);\n\treturn out.join(\"\");\n}\n\nfunction write(cfb, options) {\n\tvar o = _write(cfb, options);\n\tswitch(options && options.type || \"buffer\") {\n\t\tcase \"file\": get_fs(); fs.writeFileSync(options.filename, (o)); return o;\n\t\tcase \"binary\": return typeof o == \"string\" ? o : a2s(o);\n\t\tcase \"base64\": return Base64.encode(typeof o == \"string\" ? o : a2s(o));\n\t\tcase \"buffer\": if(has_buf) return Buffer.isBuffer(o) ? o : Buffer_from(o);\n\t\t\t/* falls through */\n\t\tcase \"array\": return typeof o == \"string\" ? s2a(o) : o;\n\t}\n\treturn o;\n}\n/* node < 8.1 zlib does not expose bytesRead, so default to pure JS */\nvar _zlib;\nfunction use_zlib(zlib) { try {\n\tvar InflateRaw = zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tInflRaw._processChunk(new Uint8Array([3, 0]), InflRaw._finishFlushFlag);\n\tif(InflRaw.bytesRead) _zlib = zlib;\n\telse throw new Error(\"zlib does not expose bytesRead\");\n} catch(e) {console.error(\"cannot use native zlib: \" + (e.message || e)); } }\n\nfunction _inflateRawSync(payload, usz) {\n\tif(!_zlib) return _inflate(payload, usz);\n\tvar InflateRaw = _zlib.InflateRaw;\n\tvar InflRaw = new InflateRaw();\n\tvar out = InflRaw._processChunk(payload.slice(payload.l), InflRaw._finishFlushFlag);\n\tpayload.l += InflRaw.bytesRead;\n\treturn out;\n}\n\nfunction _deflateRawSync(payload) {\n\treturn _zlib ? _zlib.deflateRawSync(payload) : _deflate(payload);\n}\nvar CLEN_ORDER = [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n/*  LEN_ID = [ 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285 ]; */\nvar LEN_LN = [   3,   4,   5,   6,   7,   8,   9,  10,  11,  13 , 15,  17,  19,  23,  27,  31,  35,  43,  51,  59,  67,  83,  99, 115, 131, 163, 195, 227, 258 ];\n\n/*  DST_ID = [  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13,  14,  15,  16,  17,  18,  19,   20,   21,   22,   23,   24,   25,   26,    27,    28,    29 ]; */\nvar DST_LN = [  1,  2,  3,  4,  5,  7,  9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577 ];\n\nfunction bit_swap_8(n) { var t = (((((n<<1)|(n<<11)) & 0x22110) | (((n<<5)|(n<<15)) & 0x88440))); return ((t>>16) | (t>>8) |t)&0xFF; }\n\nvar use_typed_arrays = typeof Uint8Array !== 'undefined';\n\nvar bitswap8 = use_typed_arrays ? new Uint8Array(1<<8) : [];\nfor(var q = 0; q < (1<<8); ++q) bitswap8[q] = bit_swap_8(q);\n\nfunction bit_swap_n(n, b) {\n\tvar rev = bitswap8[n & 0xFF];\n\tif(b <= 8) return rev >>> (8-b);\n\trev = (rev << 8) | bitswap8[(n>>8)&0xFF];\n\tif(b <= 16) return rev >>> (16-b);\n\trev = (rev << 8) | bitswap8[(n>>16)&0xFF];\n\treturn rev >>> (24-b);\n}\n\n/* helpers for unaligned bit reads */\nfunction read_bits_2(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 6 ? 0 : buf[h+1]<<8))>>>w)& 0x03; }\nfunction read_bits_3(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 5 ? 0 : buf[h+1]<<8))>>>w)& 0x07; }\nfunction read_bits_4(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 4 ? 0 : buf[h+1]<<8))>>>w)& 0x0F; }\nfunction read_bits_5(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 3 ? 0 : buf[h+1]<<8))>>>w)& 0x1F; }\nfunction read_bits_7(buf, bl) { var w = (bl&7), h = (bl>>>3); return ((buf[h]|(w <= 1 ? 0 : buf[h+1]<<8))>>>w)& 0x7F; }\n\n/* works up to n = 3 * 8 + 1 = 25 */\nfunction read_bits_n(buf, bl, n) {\n\tvar w = (bl&7), h = (bl>>>3), f = ((1<<n)-1);\n\tvar v = buf[h] >>> w;\n\tif(n < 8 - w) return v & f;\n\tv |= buf[h+1]<<(8-w);\n\tif(n < 16 - w) return v & f;\n\tv |= buf[h+2]<<(16-w);\n\tif(n < 24 - w) return v & f;\n\tv |= buf[h+3]<<(24-w);\n\treturn v & f;\n}\n\n/* until ArrayBuffer#realloc is a thing, fake a realloc */\nfunction realloc(b, sz) {\n\tvar L = b.length, M = 2*L > sz ? 2*L : sz + 5, i = 0;\n\tif(L >= sz) return b;\n\tif(has_buf) {\n\t\tvar o = new_unsafe_buf(M);\n\t\t// $FlowIgnore\n\t\tif(b.copy) b.copy(o);\n\t\telse for(; i < b.length; ++i) o[i] = b[i];\n\t\treturn o;\n\t} else if(use_typed_arrays) {\n\t\tvar a = new Uint8Array(M);\n\t\tif(a.set) a.set(b);\n\t\telse for(; i < b.length; ++i) a[i] = b[i];\n\t\treturn a;\n\t}\n\tb.length = M;\n\treturn b;\n}\n\n/* zero-filled arrays for older browsers */\nfunction zero_fill_array(n) {\n\tvar o = new Array(n);\n\tfor(var i = 0; i < n; ++i) o[i] = 0;\n\treturn o;\n}var _deflate = (function() {\nvar _deflateRaw = (function() {\n\treturn function deflateRaw(data, out) {\n\t\tvar boff = 0;\n\t\twhile(boff < data.length) {\n\t\t\tvar L = Math.min(0xFFFF, data.length - boff);\n\t\t\tvar h = boff + L == data.length;\n\t\t\t/* TODO: this is only type 0 stored */\n\t\t\tout.write_shift(1, +h);\n\t\t\tout.write_shift(2, L);\n\t\t\tout.write_shift(2, (~L) & 0xFFFF);\n\t\t\twhile(L-- > 0) out[out.l++] = data[boff++];\n\t\t}\n\t\treturn out.l;\n\t};\n})();\n\nreturn function(data) {\n\tvar buf = new_buf(50+Math.floor(data.length*1.1));\n\tvar off = _deflateRaw(data, buf);\n\treturn buf.slice(0, off);\n};\n})();\n/* modified inflate function also moves original read head */\n\n/* build tree (used for literals and lengths) */\nfunction build_tree(clens, cmap, MAX) {\n\tvar maxlen = 1, w = 0, i = 0, j = 0, ccode = 0, L = clens.length;\n\n\tvar bl_count  = use_typed_arrays ? new Uint16Array(32) : zero_fill_array(32);\n\tfor(i = 0; i < 32; ++i) bl_count[i] = 0;\n\n\tfor(i = L; i < MAX; ++i) clens[i] = 0;\n\tL = clens.length;\n\n\tvar ctree = use_typed_arrays ? new Uint16Array(L) : zero_fill_array(L); // []\n\n\t/* build code tree */\n\tfor(i = 0; i < L; ++i) {\n\t\tbl_count[(w = clens[i])]++;\n\t\tif(maxlen < w) maxlen = w;\n\t\tctree[i] = 0;\n\t}\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) bl_count[i+16] = (ccode = (ccode + bl_count[i-1])<<1);\n\tfor(i = 0; i < L; ++i) {\n\t\tccode = clens[i];\n\t\tif(ccode != 0) ctree[i] = bl_count[ccode+16]++;\n\t}\n\n\t/* cmap[maxlen + 4 bits] = (off&15) + (lit<<4) reverse mapping */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bit_swap_n(ctree[i], maxlen)>>(maxlen-cleni);\n\t\t\tfor(j = (1<<(maxlen + 4 - cleni)) - 1; j>=0; --j)\n\t\t\t\tcmap[ccode|(j<<cleni)] = (cleni&15) | (i<<4);\n\t\t}\n\t}\n\treturn maxlen;\n}\n\nvar fix_lmap = use_typed_arrays ? new Uint16Array(512) : zero_fill_array(512);\nvar fix_dmap = use_typed_arrays ? new Uint16Array(32)  : zero_fill_array(32);\nif(!use_typed_arrays) {\n\tfor(var i = 0; i < 512; ++i) fix_lmap[i] = 0;\n\tfor(i = 0; i < 32; ++i) fix_dmap[i] = 0;\n}\n(function() {\n\tvar dlens = [];\n\tvar i = 0;\n\tfor(;i<32; i++) dlens.push(5);\n\tbuild_tree(dlens, fix_dmap, 32);\n\n\tvar clens = [];\n\ti = 0;\n\tfor(; i<=143; i++) clens.push(8);\n\tfor(; i<=255; i++) clens.push(9);\n\tfor(; i<=279; i++) clens.push(7);\n\tfor(; i<=287; i++) clens.push(8);\n\tbuild_tree(clens, fix_lmap, 288);\n})();\n\nvar dyn_lmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_dmap = use_typed_arrays ? new Uint16Array(32768) : zero_fill_array(32768);\nvar dyn_cmap = use_typed_arrays ? new Uint16Array(128)   : zero_fill_array(128);\nvar dyn_len_1 = 1, dyn_len_2 = 1;\n\n/* 5.5.3 Expanding Huffman Codes */\nfunction dyn(data, boff) {\n\t/* nomenclature from RFC1951 refers to bit values; these are offset by the implicit constant */\n\tvar _HLIT = read_bits_5(data, boff) + 257; boff += 5;\n\tvar _HDIST = read_bits_5(data, boff) + 1; boff += 5;\n\tvar _HCLEN = read_bits_4(data, boff) + 4; boff += 4;\n\tvar w = 0;\n\n\t/* grab and store code lengths */\n\tvar clens = use_typed_arrays ? new Uint8Array(19) : zero_fill_array(19);\n\tvar ctree = [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ];\n\tvar maxlen = 1;\n\tvar bl_count =  use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar next_code = use_typed_arrays ? new Uint8Array(8) : zero_fill_array(8);\n\tvar L = clens.length; /* 19 */\n\tfor(var i = 0; i < _HCLEN; ++i) {\n\t\tclens[CLEN_ORDER[i]] = w = read_bits_3(data, boff);\n\t\tif(maxlen < w) maxlen = w;\n\t\tbl_count[w]++;\n\t\tboff += 3;\n\t}\n\n\t/* build code tree */\n\tvar ccode = 0;\n\tbl_count[0] = 0;\n\tfor(i = 1; i <= maxlen; ++i) next_code[i] = ccode = (ccode + bl_count[i-1])<<1;\n\tfor(i = 0; i < L; ++i) if((ccode = clens[i]) != 0) ctree[i] = next_code[ccode]++;\n\t/* cmap[7 bits from stream] = (off&7) + (lit<<3) */\n\tvar cleni = 0;\n\tfor(i = 0; i < L; ++i) {\n\t\tcleni = clens[i];\n\t\tif(cleni != 0) {\n\t\t\tccode = bitswap8[ctree[i]]>>(8-cleni);\n\t\t\tfor(var j = (1<<(7-cleni))-1; j>=0; --j) dyn_cmap[ccode|(j<<cleni)] = (cleni&7) | (i<<3);\n\t\t}\n\t}\n\n\t/* read literal and dist codes at once */\n\tvar hcodes = [];\n\tmaxlen = 1;\n\tfor(; hcodes.length < _HLIT + _HDIST;) {\n\t\tccode = dyn_cmap[read_bits_7(data, boff)];\n\t\tboff += ccode & 7;\n\t\tswitch((ccode >>>= 3)) {\n\t\t\tcase 16:\n\t\t\t\tw = 3 + read_bits_2(data, boff); boff += 2;\n\t\t\t\tccode = hcodes[hcodes.length - 1];\n\t\t\t\twhile(w-- > 0) hcodes.push(ccode);\n\t\t\t\tbreak;\n\t\t\tcase 17:\n\t\t\t\tw = 3 + read_bits_3(data, boff); boff += 3;\n\t\t\t\twhile(w-- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tcase 18:\n\t\t\t\tw = 11 + read_bits_7(data, boff); boff += 7;\n\t\t\t\twhile(w -- > 0) hcodes.push(0);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\thcodes.push(ccode);\n\t\t\t\tif(maxlen < ccode) maxlen = ccode;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* build literal / length trees */\n\tvar h1 = hcodes.slice(0, _HLIT), h2 = hcodes.slice(_HLIT);\n\tfor(i = _HLIT; i < 286; ++i) h1[i] = 0;\n\tfor(i = _HDIST; i < 30; ++i) h2[i] = 0;\n\tdyn_len_1 = build_tree(h1, dyn_lmap, 286);\n\tdyn_len_2 = build_tree(h2, dyn_dmap, 30);\n\treturn boff;\n}\n\n/* return [ data, bytesRead ] */\nfunction inflate(data, usz) {\n\t/* shortcircuit for empty buffer [0x03, 0x00] */\n\tif(data[0] == 3 && !(data[1] & 0x3)) { return [new_raw_buf(usz), 2]; }\n\n\t/* bit offset */\n\tvar boff = 0;\n\n\t/* header includes final bit and type bits */\n\tvar header = 0;\n\n\tvar outbuf = new_unsafe_buf(usz ? usz : (1<<18));\n\tvar woff = 0;\n\tvar OL = outbuf.length>>>0;\n\tvar max_len_1 = 0, max_len_2 = 0;\n\n\twhile((header&1) == 0) {\n\t\theader = read_bits_3(data, boff); boff += 3;\n\t\tif((header >>> 1) == 0) {\n\t\t\t/* Stored block */\n\t\t\tif(boff & 7) boff += 8 - (boff&7);\n\t\t\t/* 2 bytes sz, 2 bytes bit inverse */\n\t\t\tvar sz = data[boff>>>3] | data[(boff>>>3)+1]<<8;\n\t\t\tboff += 32;\n\t\t\t/* push sz bytes */\n\t\t\tif(!usz && OL < woff + sz) { outbuf = realloc(outbuf, woff + sz); OL = outbuf.length; }\n\t\t\tif(typeof data.copy === 'function') {\n\t\t\t\t// $FlowIgnore\n\t\t\t\tdata.copy(outbuf, woff, boff>>>3, (boff>>>3)+sz);\n\t\t\t\twoff += sz; boff += 8*sz;\n\t\t\t} else while(sz-- > 0) { outbuf[woff++] = data[boff>>>3]; boff += 8; }\n\t\t\tcontinue;\n\t\t} else if((header >>> 1) == 1) {\n\t\t\t/* Fixed Huffman */\n\t\t\tmax_len_1 = 9; max_len_2 = 5;\n\t\t} else {\n\t\t\t/* Dynamic Huffman */\n\t\t\tboff = dyn(data, boff);\n\t\t\tmax_len_1 = dyn_len_1; max_len_2 = dyn_len_2;\n\t\t}\n\t\tif(!usz && (OL < woff + 32767)) { outbuf = realloc(outbuf, woff + 32767); OL = outbuf.length; }\n\t\tfor(;;) { // while(true) is apparently out of vogue in modern JS circles\n\t\t\t/* ingest code and move read head */\n\t\t\tvar bits = read_bits_n(data, boff, max_len_1);\n\t\t\tvar code = (header>>>1) == 1 ? fix_lmap[bits] : dyn_lmap[bits];\n\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t/* 0-255 are literals, 256 is end of block token, 257+ are copy tokens */\n\t\t\tif(((code>>>8)&0xFF) === 0) outbuf[woff++] = code;\n\t\t\telse if(code == 256) break;\n\t\t\telse {\n\t\t\t\tcode -= 257;\n\t\t\t\tvar len_eb = (code < 8) ? 0 : ((code-4)>>2); if(len_eb > 5) len_eb = 0;\n\t\t\t\tvar tgt = woff + LEN_LN[code];\n\t\t\t\t/* length extra bits */\n\t\t\t\tif(len_eb > 0) {\n\t\t\t\t\ttgt += read_bits_n(data, boff, len_eb);\n\t\t\t\t\tboff += len_eb;\n\t\t\t\t}\n\n\t\t\t\t/* dist code */\n\t\t\t\tbits = read_bits_n(data, boff, max_len_2);\n\t\t\t\tcode = (header>>>1) == 1 ? fix_dmap[bits] : dyn_dmap[bits];\n\t\t\t\tboff += code & 15; code >>>= 4;\n\t\t\t\tvar dst_eb = (code < 4 ? 0 : (code-2)>>1);\n\t\t\t\tvar dst = DST_LN[code];\n\t\t\t\t/* dist extra bits */\n\t\t\t\tif(dst_eb > 0) {\n\t\t\t\t\tdst += read_bits_n(data, boff, dst_eb);\n\t\t\t\t\tboff += dst_eb;\n\t\t\t\t}\n\n\t\t\t\t/* in the common case, manual byte copy is faster than TA set / Buffer copy */\n\t\t\t\tif(!usz && OL < tgt) { outbuf = realloc(outbuf, tgt); OL = outbuf.length; }\n\t\t\t\twhile(woff < tgt) { outbuf[woff] = outbuf[woff - dst]; ++woff; }\n\t\t\t}\n\t\t}\n\t}\n\treturn [usz ? outbuf : outbuf.slice(0, woff), (boff+7)>>>3];\n}\n\nfunction _inflate(payload, usz) {\n\tvar data = payload.slice(payload.l||0);\n\tvar out = inflate(data, usz);\n\tpayload.l += out[1];\n\treturn out[0];\n}\n\nfunction warn_or_throw(wrn, msg) {\n\tif(wrn) { if(typeof console !== 'undefined') console.error(msg); }\n\telse throw new Error(msg);\n}\n\nfunction parse_zip(file, options) {\n\tvar blob = file;\n\tprep_blob(blob, 0);\n\n\tvar FileIndex = [], FullPaths = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o, { root: options.root });\n\n\t/* find end of central directory, start just after signature */\n\tvar i = blob.length - 4;\n\twhile((blob[i] != 0x50 || blob[i+1] != 0x4b || blob[i+2] != 0x05 || blob[i+3] != 0x06) && i >= 0) --i;\n\tblob.l = i + 4;\n\n\t/* parse end of central directory */\n\tblob.l += 4;\n\tvar fcnt = blob.read_shift(2);\n\tblob.l += 6;\n\tvar start_cd = blob.read_shift(4);\n\n\t/* parse central directory */\n\tblob.l = start_cd;\n\n\tfor(i = 0; i < fcnt; ++i) {\n\t\t/* trust local file header instead of CD entry */\n\t\tblob.l += 20;\n\t\tvar csz = blob.read_shift(4);\n\t\tvar usz = blob.read_shift(4);\n\t\tvar namelen = blob.read_shift(2);\n\t\tvar efsz = blob.read_shift(2);\n\t\tvar fcsz = blob.read_shift(2);\n\t\tblob.l += 8;\n\t\tvar offset = blob.read_shift(4);\n\t\tvar EF = parse_extra_field(blob.slice(blob.l+namelen, blob.l+namelen+efsz));\n\t\tblob.l += namelen + efsz + fcsz;\n\n\t\tvar L = blob.l;\n\t\tblob.l = offset + 4;\n\t\tparse_local_file(blob, csz, usz, o, EF);\n\t\tblob.l = L;\n\t}\n\n\treturn o;\n}\n\n\n/* head starts just after local file header signature */\nfunction parse_local_file(blob, csz, usz, o, EF) {\n\t/* [local file header] */\n\tblob.l += 2;\n\tvar flags = blob.read_shift(2);\n\tvar meth = blob.read_shift(2);\n\tvar date = parse_dos_date(blob);\n\n\tif(flags & 0x2041) throw new Error(\"Unsupported ZIP encryption\");\n\tvar crc32 = blob.read_shift(4);\n\tvar _csz = blob.read_shift(4);\n\tvar _usz = blob.read_shift(4);\n\n\tvar namelen = blob.read_shift(2);\n\tvar efsz = blob.read_shift(2);\n\n\t// TODO: flags & (1<<11) // UTF8\n\tvar name = \"\"; for(var i = 0; i < namelen; ++i) name += String.fromCharCode(blob[blob.l++]);\n\tif(efsz) {\n\t\tvar ef = parse_extra_field(blob.slice(blob.l, blob.l + efsz));\n\t\tif((ef[0x5455]||{}).mt) date = ef[0x5455].mt;\n\t\tif(((EF||{})[0x5455]||{}).mt) date = EF[0x5455].mt;\n\t}\n\tblob.l += efsz;\n\n\t/* [encryption header] */\n\n\t/* [file data] */\n\tvar data = blob.slice(blob.l, blob.l + _csz);\n\tswitch(meth) {\n\t\tcase 8: data = _inflateRawSync(blob, _usz); break;\n\t\tcase 0: break;\n\t\tdefault: throw new Error(\"Unsupported ZIP Compression method \" + meth);\n\t}\n\n\t/* [data descriptor] */\n\tvar wrn = false;\n\tif(flags & 8) {\n\t\tcrc32 = blob.read_shift(4);\n\t\tif(crc32 == 0x08074b50) { crc32 = blob.read_shift(4); wrn = true; }\n\t\t_csz = blob.read_shift(4);\n\t\t_usz = blob.read_shift(4);\n\t}\n\n\tif(_csz != csz) warn_or_throw(wrn, \"Bad compressed size: \" + csz + \" != \" + _csz);\n\tif(_usz != usz) warn_or_throw(wrn, \"Bad uncompressed size: \" + usz + \" != \" + _usz);\n\tvar _crc32 = CRC32.buf(data, 0);\n\tif((crc32>>0) != (_crc32>>0)) warn_or_throw(wrn, \"Bad CRC32 checksum: \" + crc32 + \" != \" + _crc32);\n\tcfb_add(o, name, data, {unsafe: true, mt: date});\n}\nfunction write_zip(cfb, options) {\n\tvar _opts = options || {};\n\tvar out = [], cdirs = [];\n\tvar o = new_buf(1);\n\tvar method = (_opts.compression ? 8 : 0), flags = 0;\n\tvar desc = false;\n\tif(desc) flags |= 8;\n\tvar i = 0, j = 0;\n\n\tvar start_cd = 0, fcnt = 0;\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tvar crcs = [];\n\tvar sz_cd = 0;\n\n\tfor(i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length); fi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\t\tvar start = start_cd;\n\n\t\t/* TODO: CP437 filename */\n\t\tvar namebuf = new_buf(fp.length);\n\t\tfor(j = 0; j < fp.length; ++j) namebuf.write_shift(1, fp.charCodeAt(j) & 0x7F);\n\t\tnamebuf = namebuf.slice(0, namebuf.l);\n\t\tcrcs[fcnt] = CRC32.buf(fi.content, 0);\n\n\t\tvar outbuf = fi.content;\n\t\tif(method == 8) outbuf = _deflateRawSync(outbuf);\n\n\t\t/* local file header */\n\t\to = new_buf(30);\n\t\to.write_shift(4, 0x04034b50);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\t/* TODO: last mod file time/date */\n\t\tif(fi.mt) write_dos_date(o, fi.mt);\n\t\telse o.write_shift(4, 0);\n\t\to.write_shift(-4, (flags & 8) ? 0 : crcs[fcnt]);\n\t\to.write_shift(4,  (flags & 8) ? 0 : outbuf.length);\n\t\to.write_shift(4,  (flags & 8) ? 0 : fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\n\t\tstart_cd += o.length;\n\t\tout.push(o);\n\t\tstart_cd += namebuf.length;\n\t\tout.push(namebuf);\n\n\t\t/* TODO: encryption header ? */\n\t\tstart_cd += outbuf.length;\n\t\tout.push(outbuf);\n\n\t\t/* data descriptor */\n\t\tif(flags & 8) {\n\t\t\to = new_buf(12);\n\t\t\to.write_shift(-4, crcs[fcnt]);\n\t\t\to.write_shift(4, outbuf.length);\n\t\t\to.write_shift(4, fi.content.length);\n\t\t\tstart_cd += o.l;\n\t\t\tout.push(o);\n\t\t}\n\n\t\t/* central directory */\n\t\to = new_buf(46);\n\t\to.write_shift(4, 0x02014b50);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 20);\n\t\to.write_shift(2, flags);\n\t\to.write_shift(2, method);\n\t\to.write_shift(4, 0); /* TODO: last mod file time/date */\n\t\to.write_shift(-4, crcs[fcnt]);\n\n\t\to.write_shift(4, outbuf.length);\n\t\to.write_shift(4, fi.content.length);\n\t\to.write_shift(2, namebuf.length);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(2, 0);\n\t\to.write_shift(4, 0);\n\t\to.write_shift(4, start);\n\n\t\tsz_cd += o.l;\n\t\tcdirs.push(o);\n\t\tsz_cd += namebuf.length;\n\t\tcdirs.push(namebuf);\n\t\t++fcnt;\n\t}\n\n\t/* end of central directory */\n\to = new_buf(22);\n\to.write_shift(4, 0x06054b50);\n\to.write_shift(2, 0);\n\to.write_shift(2, 0);\n\to.write_shift(2, fcnt);\n\to.write_shift(2, fcnt);\n\to.write_shift(4, sz_cd);\n\to.write_shift(4, start_cd);\n\to.write_shift(2, 0);\n\n\treturn bconcat(([bconcat((out)), bconcat(cdirs), o]));\n}\nvar ContentTypeMap = ({\n\t\"htm\": \"text/html\",\n\t\"xml\": \"text/xml\",\n\n\t\"gif\": \"image/gif\",\n\t\"jpg\": \"image/jpeg\",\n\t\"png\": \"image/png\",\n\n\t\"mso\": \"application/x-mso\",\n\t\"thmx\": \"application/vnd.ms-officetheme\",\n\t\"sh33tj5\": \"application/octet-stream\"\n});\n\nfunction get_content_type(fi, fp) {\n\tif(fi.ctype) return fi.ctype;\n\n\tvar ext = fi.name || \"\", m = ext.match(/\\.([^\\.]+)$/);\n\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\n\tif(fp) {\n\t\tm = (ext = fp).match(/[\\.\\\\]([^\\.\\\\])+$/);\n\t\tif(m && ContentTypeMap[m[1]]) return ContentTypeMap[m[1]];\n\t}\n\n\treturn \"application/octet-stream\";\n}\n\n/* 76 character chunks TODO: intertwine encoding */\nfunction write_base64_76(bstr) {\n\tvar data = Base64.encode(bstr);\n\tvar o = [];\n\tfor(var i = 0; i < data.length; i+= 76) o.push(data.slice(i, i+76));\n\treturn o.join(\"\\r\\n\") + \"\\r\\n\";\n}\n\n/*\nRules for QP:\n\t- escape =## applies for all non-display characters and literal \"=\"\n\t- space or tab at end of line must be encoded\n\t- \\r\\n newlines can be preserved, but bare \\r and \\n must be escaped\n\t- lines must not exceed 76 characters, use soft breaks =\\r\\n\n\nTODO: Some files from word appear to write line extensions with bare equals:\n\n```\n<table class=3DMsoTableGrid border=3D1 cellspacing=3D0 cellpadding=3D0 width=\n=\"70%\"\n```\n*/\nfunction write_quoted_printable(text) {\n\tvar encoded = text.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF=]/g, function(c) {\n\t\tvar w = c.charCodeAt(0).toString(16).toUpperCase();\n\t\treturn \"=\" + (w.length == 1 ? \"0\" + w : w);\n\t});\n\n\tencoded = encoded.replace(/ $/mg, \"=20\").replace(/\\t$/mg, \"=09\");\n\n\tif(encoded.charAt(0) == \"\\n\") encoded = \"=0D\" + encoded.slice(1);\n\tencoded = encoded.replace(/\\r(?!\\n)/mg, \"=0D\").replace(/\\n\\n/mg, \"\\n=0A\").replace(/([^\\r\\n])\\n/mg, \"$1=0A\");\n\n\tvar o = [], split = encoded.split(\"\\r\\n\");\n\tfor(var si = 0; si < split.length; ++si) {\n\t\tvar str = split[si];\n\t\tif(str.length == 0) { o.push(\"\"); continue; }\n\t\tfor(var i = 0; i < str.length;) {\n\t\t\tvar end = 76;\n\t\t\tvar tmp = str.slice(i, i + end);\n\t\t\tif(tmp.charAt(end - 1) == \"=\") end --;\n\t\t\telse if(tmp.charAt(end - 2) == \"=\") end -= 2;\n\t\t\telse if(tmp.charAt(end - 3) == \"=\") end -= 3;\n\t\t\ttmp = str.slice(i, i + end);\n\t\t\ti += end;\n\t\t\tif(i < str.length) tmp += \"=\";\n\t\t\to.push(tmp);\n\t\t}\n\t}\n\n\treturn o.join(\"\\r\\n\");\n}\nfunction parse_quoted_printable(data) {\n\tvar o = [];\n\n\t/* unify long lines */\n\tfor(var di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\twhile(di <= data.length && line.charAt(line.length - 1) == \"=\") line = line.slice(0, line.length - 1) + data[++di];\n\t\to.push(line);\n\t}\n\n\t/* decode */\n\tfor(var oi = 0; oi < o.length; ++oi) o[oi] = o[oi].replace(/=[0-9A-Fa-f]{2}/g, function($$) { return String.fromCharCode(parseInt($$.slice(1), 16)); });\n\treturn s2a(o.join(\"\\r\\n\"));\n}\n\n\nfunction parse_mime(cfb, data, root) {\n\tvar fname = \"\", cte = \"\", ctype = \"\", fdata;\n\tvar di = 0;\n\tfor(;di < 10; ++di) {\n\t\tvar line = data[di];\n\t\tif(!line || line.match(/^\\s*$/)) break;\n\t\tvar m = line.match(/^(.*?):\\s*([^\\s].*)$/);\n\t\tif(m) switch(m[1].toLowerCase()) {\n\t\t\tcase \"content-location\": fname = m[2].trim(); break;\n\t\t\tcase \"content-type\": ctype = m[2].trim(); break;\n\t\t\tcase \"content-transfer-encoding\": cte = m[2].trim(); break;\n\t\t}\n\t}\n\t++di;\n\tswitch(cte.toLowerCase()) {\n\t\tcase 'base64': fdata = s2a(Base64.decode(data.slice(di).join(\"\"))); break;\n\t\tcase 'quoted-printable': fdata = parse_quoted_printable(data.slice(di)); break;\n\t\tdefault: throw new Error(\"Unsupported Content-Transfer-Encoding \" + cte);\n\t}\n\tvar file = cfb_add(cfb, fname.slice(root.length), fdata, {unsafe: true});\n\tif(ctype) file.ctype = ctype;\n}\n\nfunction parse_mad(file, options) {\n\tif(a2s(file.slice(0,13)).toLowerCase() != \"mime-version:\") throw new Error(\"Unsupported MAD header\");\n\tvar root = (options && options.root || \"\");\n\t// $FlowIgnore\n\tvar data = (has_buf && Buffer.isBuffer(file) ? file.toString(\"binary\") : a2s(file)).split(\"\\r\\n\");\n\tvar di = 0, row = \"\";\n\n\t/* if root is not specified, scan for the common prefix */\n\tfor(di = 0; di < data.length; ++di) {\n\t\trow = data[di];\n\t\tif(!/^Content-Location:/i.test(row)) continue;\n\t\trow = row.slice(row.indexOf(\"file\"));\n\t\tif(!root) root = row.slice(0, row.lastIndexOf(\"/\") + 1);\n\t\tif(row.slice(0, root.length) == root) continue;\n\t\twhile(root.length > 0) {\n\t\t\troot = root.slice(0, root.length - 1);\n\t\t\troot = root.slice(0, root.lastIndexOf(\"/\") + 1);\n\t\t\tif(row.slice(0,root.length) == root) break;\n\t\t}\n\t}\n\n\tvar mboundary = (data[1] || \"\").match(/boundary=\"(.*?)\"/);\n\tif(!mboundary) throw new Error(\"MAD cannot find boundary\");\n\tvar boundary = \"--\" + (mboundary[1] || \"\");\n\n\tvar FileIndex = [], FullPaths = [];\n\tvar o = {\n\t\tFileIndex: FileIndex,\n\t\tFullPaths: FullPaths\n\t};\n\tinit_cfb(o);\n\tvar start_di, fcnt = 0;\n\tfor(di = 0; di < data.length; ++di) {\n\t\tvar line = data[di];\n\t\tif(line !== boundary && line !== boundary + \"--\") continue;\n\t\tif(fcnt++) parse_mime(o, data.slice(start_di, di), root);\n\t\tstart_di = di;\n\t}\n\treturn o;\n}\n\nfunction write_mad(cfb, options) {\n\tvar opts = options || {};\n\tvar boundary = opts.boundary || \"SheetJS\";\n\tboundary = '------=' + boundary;\n\n\tvar out = [\n\t\t'MIME-Version: 1.0',\n\t\t'Content-Type: multipart/related; boundary=\"' + boundary.slice(2) + '\"',\n\t\t'',\n\t\t'',\n\t\t''\n\t];\n\n\tvar root = cfb.FullPaths[0], fp = root, fi = cfb.FileIndex[0];\n\tfor(var i = 1; i < cfb.FullPaths.length; ++i) {\n\t\tfp = cfb.FullPaths[i].slice(root.length);\n\t\tfi = cfb.FileIndex[i];\n\t\tif(!fi.size || !fi.content || fp == \"\\u0001Sh33tJ5\") continue;\n\n\t\t/* Normalize filename */\n\t\tfp = fp.replace(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7E-\\xFF]/g, function(c) {\n\t\t\treturn \"_x\" + c.charCodeAt(0).toString(16) + \"_\";\n\t\t}).replace(/[\\u0080-\\uFFFF]/g, function(u) {\n\t\t\treturn \"_u\" + u.charCodeAt(0).toString(16) + \"_\";\n\t\t});\n\n\t\t/* Extract content as binary string */\n\t\tvar ca = fi.content;\n\t\t// $FlowIgnore\n\t\tvar cstr = has_buf && Buffer.isBuffer(ca) ? ca.toString(\"binary\") : a2s(ca);\n\n\t\t/* 4/5 of first 1024 chars ascii -> quoted printable, else base64 */\n\t\tvar dispcnt = 0, L = Math.min(1024, cstr.length), cc = 0;\n\t\tfor(var csl = 0; csl <= L; ++csl) if((cc=cstr.charCodeAt(csl)) >= 0x20 && cc < 0x80) ++dispcnt;\n\t\tvar qp = dispcnt >= L * 4 / 5;\n\n\t\tout.push(boundary);\n\t\tout.push('Content-Location: ' + (opts.root || 'file:///C:/SheetJS/') + fp);\n\t\tout.push('Content-Transfer-Encoding: ' + (qp ? 'quoted-printable' : 'base64'));\n\t\tout.push('Content-Type: ' + get_content_type(fi, fp));\n\t\tout.push('');\n\n\t\tout.push(qp ? write_quoted_printable(cstr) : write_base64_76(cstr));\n\t}\n\tout.push(boundary + '--\\r\\n');\n\treturn out.join(\"\\r\\n\");\n}function cfb_new(opts) {\n\tvar o = ({});\n\tinit_cfb(o, opts);\n\treturn o;\n}\n\nfunction cfb_add(cfb, name, content, opts) {\n\tvar unsafe = opts && opts.unsafe;\n\tif(!unsafe) init_cfb(cfb);\n\tvar file = !unsafe && CFB.find(cfb, name);\n\tif(!file) {\n\t\tvar fpath = cfb.FullPaths[0];\n\t\tif(name.slice(0, fpath.length) == fpath) fpath = name;\n\t\telse {\n\t\t\tif(fpath.slice(-1) != \"/\") fpath += \"/\";\n\t\t\tfpath = (fpath + name).replace(\"//\",\"/\");\n\t\t}\n\t\tfile = ({name: filename(name), type: 2});\n\t\tcfb.FileIndex.push(file);\n\t\tcfb.FullPaths.push(fpath);\n\t\tif(!unsafe) CFB.utils.cfb_gc(cfb);\n\t}\nfile.content = (content);\n\tfile.size = content ? content.length : 0;\n\tif(opts) {\n\t\tif(opts.CLSID) file.clsid = opts.CLSID;\n\t\tif(opts.mt) file.mt = opts.mt;\n\t\tif(opts.ct) file.ct = opts.ct;\n\t}\n\treturn file;\n}\n\nfunction cfb_del(cfb, name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex.splice(j, 1);\n\t\tcfb.FullPaths.splice(j, 1);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_mov(cfb, old_name, new_name) {\n\tinit_cfb(cfb);\n\tvar file = CFB.find(cfb, old_name);\n\tif(file) for(var j = 0; j < cfb.FileIndex.length; ++j) if(cfb.FileIndex[j] == file) {\n\t\tcfb.FileIndex[j].name = filename(new_name);\n\t\tcfb.FullPaths[j] = new_name;\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction cfb_gc(cfb) { rebuild_cfb(cfb, true); }\n\nexports.find = find;\nexports.read = read;\nexports.parse = parse;\nexports.write = write;\nexports.writeFile = write_file;\nexports.utils = {\n\tcfb_new: cfb_new,\n\tcfb_add: cfb_add,\n\tcfb_del: cfb_del,\n\tcfb_mov: cfb_mov,\n\tcfb_gc: cfb_gc,\n\tReadShift: ReadShift,\n\tCheckField: CheckField,\n\tprep_blob: prep_blob,\n\tbconcat: bconcat,\n\tuse_zlib: use_zlib,\n\t_deflateRaw: _deflate,\n\t_inflateRaw: _inflate,\n\tconsts: consts\n};\n\nreturn exports;\n})();\n\nif(typeof require !== 'undefined' && typeof module !== 'undefined' && typeof DO_NOT_EXPORT_CFB === 'undefined') { module.exports = CFB; }\n","// @flow\n\nimport CFB from 'cfb'\nimport type {CFBContainer} from 'cfb'\n\n/**\n * wrapper around SheetJS CFB to produce FAT-like compound file\n * terminology:\n * 'storage': directory in the cfb\n * 'stream' : file in the cfb\n * */\nexport class CFBStorage {\n    /** underlying cfb container */\n    _cfb: CFBContainer\n    /** the current path all new storages and streams will be added to*/\n    _path: string\n\n    constructor(cfb?: CFBContainer) {\n        this._cfb = cfb || CFB.utils.cfb_new()\n        this._path = ''\n    }\n\n    /**\n     * add substorage to this (doesn't modify the underlying CFBContainer)\n     * @param name {string} name of the subdir\n     * @returns {CFBStorage} a storage that will add storage and streams to the subdir\n     * */\n    addStorage(name: string): CFBStorage {\n        const child = new CFBStorage(this._cfb)\n        child._path = this._path + '/' + name\n        return child\n    }\n\n    /**\n     *\n     */\n    getStorage(name: string): CFBStorage {\n        return this.addStorage(name)\n    }\n\n    /**\n     * add a stream (file) to the cfb at the current _path. creates all parent dirs if they don't exist yet\n     * should the stream already exist, this will replace the contents.\n     * @param name {string} the name of the new stream\n     * @param content {Uint8Array} the contents of the stream\n     * @return {void}\n     * */\n    addStream(name: string, content: Uint8Array): void {\n        const entryIndex = this._getEntryIndex(name)\n        if (entryIndex < 0) {\n            CFB.utils.cfb_add(this._cfb, this._path + '/' + name, content)\n        } else {\n            this._cfb.FileIndex[entryIndex].content = content\n        }\n    }\n\n    /**\n     * get the contents of a stream or an empty array\n     * @param name {string} the name of the stream\n     * @return {Uint8Array} the contents of the named stream, empty if it wasn't found\n     * TODO: should this be absolute?\n     */\n    getStream(name: string): Uint8Array {\n        const entryIndex = this._getEntryIndex(name)\n        return entryIndex < 0\n            ? Uint8Array.of()\n            : Uint8Array.from(this._cfb.FileIndex[entryIndex].content)\n    }\n\n    /** write the contents of the cfb container to a byte array */\n    toBytes(): Uint8Array {\n        // TODO: CFB.write may return a string if the correct option is given\n        return Uint8Array.from((CFB.write(this._cfb): any))\n    }\n\n    _getEntryIndex(name: string): number {\n        return this._cfb.FullPaths.findIndex(p => p === this._path + \"/\" + name)\n    }\n}","// @flow\nexport const MessageImportance = Object.freeze({\n\tIMPORTANCE_LOW: 0,\n\tIMPORTANCE_NORMAL: 1,\n\tIMPORTANCE_HIGH: 2\n})\nexport type MessageImportanceEnum = $Values<typeof MessageImportance>\n\nexport const MessageIconIndex = Object.freeze({\n\tNewMail: 0x00000000,\n\tPost: 0x00000001,\n\tOther: 0x00000003,\n\tReadMail: 0x00000100,\n\tUnreadMail: 0x00000101,\n\tSubmittedMail: 0x00000102,\n\tUnsentMail: 0x00000103,\n\tReceiptMail: 0x00000104,\n\tRepliedMail: 0x00000105,\n\tForwardedMail: 0x00000106,\n\tRemoteMail: 0x00000107,\n\tDeliveryReceipt: 0x00000108,\n\tReadReceipt: 0x00000109,\n\tNondeliveryReport: 0x0000010A,\n\tNonReadReceipt: 0x0000010B,\n\tRecallSMail: 0x0000010C,\n\tRecallFMail: 0x0000010D,\n\tTrackingMail: 0x0000010E,\n\tOutOfOfficeMail: 0x0000011B,\n\tRecallMail: 0x0000011C,\n\tTrackedMail: 0x00000130,\n\tContact: 0x00000200,\n\tDistributionList: 0x00000202,\n\tStickyNoteBlue: 0x00000300,\n\tStickyNoteGreen: 0x00000301,\n\tStickyNotePink: 0x00000302,\n\tStickyNoteYellow: 0x00000303,\n\tStickyNoteWhite: 0x00000304,\n\tSingleInstanceAppointment: 0x00000400,\n\tRecurringAppointment: 0x00000401,\n\tSingleInstanceMeeting: 0x00000402,\n\tRecurringMeeting: 0x00000403,\n\tMeetingRequest: 0x00000404,\n\tAccept: 0x00000405,\n\tDecline: 0x00000406,\n\tTentatively: 0x00000407,\n\tCancellation: 0x00000408,\n\tInformationalUpdate: 0x00000409,\n\tTaskTask: 0x00000500,\n\tUnassignedRecurringTask: 0x00000501,\n\tAssigneesTask: 0x00000502,\n\tAssignersTask: 0x00000503,\n\tTaskRequest: 0x00000504,\n\tTaskAcceptance: 0x00000505,\n\tTaskRejection: 0x00000506,\n\tJournalConversation: 0x00000601,\n\tJournalEmailMessage: 0x00000602,\n\tJournalMeetingRequest: 0x00000603,\n\tJournalMeetingResponse: 0x00000604,\n\tJournalTaskRequest: 0x00000606,\n\tJournalTaskResponse: 0x00000607,\n\tJournalNote: 0x00000608,\n\tJournalFax: 0x00000609,\n\tJournalPhoneCall: 0x0000060A,\n\tJournalLetter: 0x0000060C,\n\tJournalMicrosoftOfficeWord: 0x0000060D,\n\tJournalMicrosoftOfficeExcel: 0x0000060E,\n\tJournalMicrosoftOfficePowerPoint: 0x0000060F,\n\tJournalMicrosoftOfficeAccess: 0x00000610,\n\tJournalDocument: 0x00000612,\n\tJournalMeeting: 0x00000613,\n\tJournalMeetingCancellation: 0x00000614,\n\tJournalRemoteSession: 0x00000615\n})\nexport type MessageIconIndexEnum = $Values<typeof MessageIconIndex>\n\nexport type AddressType = ''\n\t| 'EX'\n\t| 'SMTP'\n\t| 'FAX'\n\t| 'MHS'\n\t| 'PROFS'\n\t| 'X400'\n\nexport const MapiObjectType = Object.freeze({\n\t// Address book container object\n\tMAPI_ABCONT: 4,\n\t// Address book object\n\tMAPI_ADDRBOOK: 2,\n\t// Message attachment object\n\tMAPI_ATTACH: 7,\n\t// Distribution list object\n\tMAPI_DISTLIST: 8,\n\t// Folder object\n\tMAPI_FOLDER: 3,\n\t// Form object\n\tMAPI_FORMINFO: 12,\n\t// Messaging user object\n\tMAPI_MAILUSER: 6,\n\t// Message object\n\tMAPI_MESSAGE: 5,\n\t// Profile section object\n\tMAPI_PROFSECT: 9,\n\t// Session object\n\tMAPI_SESSION: 11,\n\t// Status object\n\tMAPI_STATUS: 10,\n\t// Message store object\n\tMAPI_STORE: 1\n})\nexport type MapiObjectTypeEnum = $Values<typeof MapiObjectType>\n\nexport const RecipientRowDisplayType = Object.freeze({\n\t// A messaging user\n\tMessagingUser: 0x00,\n\t// A distribution list\n\tDistributionList: 0x01,\n\t// A forum, such as a bulletin board service or a public or shared folder\n\tForum: 0x02,\n\t// An automated agent\n\tAutomatedAgent: 0x03,\n\t// An Address Book object defined for a large group, such as helpdesk, accounting, coordinator, or\n\t// department\n\tAddressBook: 0x04,\n\t// A private, personally administered distribution list\n\tPrivateDistributionList: 0x05,\n\t// An Address Book object known to be from a foreign or remote messaging system\n\tRemoteAddressBook: 0x06\n})\nexport type RecipientRowDisplayTypeEnum = $Values<typeof RecipientRowDisplayType>\n\nexport const RecipientType = Object.freeze({\n\t// The recipient is the message originator\n\tOriginator: 0x0000,\n\t// The recipient is a primary (To) recipient. Clients are required to handle primary recipients. All other types are optional.\n\tTo: 0x0001,\n\t// The recipient is a carbon copy (CC) recipient, a recipient that receives a message in addition to the primary recipients.\n\tCc: 0x0002,\n\t// The recipient is a blind carbon copy (BCC) recipient. Primary and carbon copy recipients are unaware of the existence of BCC recipients.\n\tBcc: 0x0003,\n\t// The recipient is a resource (e.g. a room)\n\tResource: 0x0004,\n\t// The recipient is a room (uses PR_RECIPIENT_TYPE_EXE) needs Exchange 2007 or higher\n\tRoom: 0x0007\n})\nexport type RecipientTypeEnum = $Values<typeof RecipientType>\n\n// Specifies a bit field that describes the recipient status.\n// See https://msdn.microsoft.com/en-us/library/office/cc815629.aspx\nexport const RecipientFlags = {\n\t// The recipient is a Sendable Attendee. This flag is only used in the dispidApptUnsendableRecips\n\t// (PidLidAppointmentUnsendableRecipients) property.\n\tRecipSendable: 0x00000001,\n\n\t// The RecipientRow on which this flag is set represents the meeting Organizer.\n\tRecipOrganizer: 0x0000002,\n\n\t// Indicates that the attendee gave a response for the exception on which this RecipientRow resides. This flag is only\n\t// used in a RecipientRow of an exception embedded message object of the organizer’s meeting object.\n\tRecipExceptionalResponse: 0x00000010,\n\n\t// Indicates that although the RecipientRow exists, it should be treated as if the corresponding recipient does not.\n\t// This flag is only used in a RecipientRow of an exception embedded message object of the organizer’s meeting object.\n\tRecipExceptionalDeleted: 0x00000020,\n\n\t// Indicates the recipient is an original attendee. This flag is only used in the dispidApptUnsendableRecips property.\n\tRecipOriginal: 0x00000100\n}\nexport type RecipientFlagsEnum = $Values<typeof RecipientFlags>\n\n// The type of a property in the properties stream\n/// </summary>\nexport const PropertyType = Object.freeze({\n\t// Any: this property type value matches any type; a server MUST return the actual type in its response. Servers\n\t// MUST NOT return this type in response to a client request other than NspiGetIDsFromNames or the\n\t// RopGetPropertyIdsFromNamesROP request ([MS-OXCROPS] section 2.2.8.1). (PT_UNSPECIFIED)\n\tPT_UNSPECIFIED: 0x0000,\n\t// None: This property is a placeholder. (PT_NULL)\n\tPT_NULL: 0x0001,\n\t// 2 bytes; a 16-bit integer (PT_I2, i2, ui2)\n\tPT_SHORT: 0x0002,\n\t// 4 bytes; a 32-bit integer (PT_LONG, PT_I4, int, ui4)\n\tPT_LONG: 0x0003,\n\t// 4 bytes; a 32-bit floating point number (PT_FLOAT, PT_R4, float, r4)\n\tPT_FLOAT: 0x0004,\n\t// 8 bytes; a 64-bit floating point number (PT_DOUBLE, PT_R8, r8)\n\tPT_DOUBLE: 0x0005,\n\t// 8 bytes; a 64-bit floating point number in which the whole number part represents the number of days since\n\t// December 30, 1899, and the fractional part represents the fraction of a day since midnight (PT_APPTIME)\n\tPT_APPTIME: 0x0007,\n\t// 4 bytes; a 32-bit integer encoding error information as specified in section 2.4.1. (PT_ERROR)\n\tPT_ERROR: 0x000A,\n\t// 1 byte; restricted to 1 or 0 (PT_BOOLEAN. bool)\n\tPT_BOOLEAN: 0x000B,\n\t// The property value is a Component Object Model (COM) object, as specified in section 2.11.1.5. (PT_OBJECT)\n\tPT_OBJECT: 0x000D,\n\t// 8 bytes; a 64-bit integer (PT_LONGLONG, PT_I8, i8, ui8)\n\tPT_I8: 0x0014,\n\t// 8 bytes; a 64-bit integer (PT_LONGLONG, PT_I8, i8, ui8)\n\tPT_LONGLONG: 0x0014,\n\t// Variable size; a string of Unicode characters in UTF-16LE format encoding with terminating null character\n\t// (0x0000). (PT_UNICODE, string)\n\tPT_UNICODE: 0x001F,\n\t// Variable size; a string of multibyte characters in externally specified encoding with terminating null\n\t// character (single 0 byte). (PT_STRING8) ... ANSI format\n\tPT_STRING8: 0x001E,\n\t// 8 bytes; a 64-bit integer representing the number of 100-nanosecond intervals since January 1, 1601\n\t// (PT_SYSTIME, time, datetime, datetime.tz, datetime.rfc1123, Date, time, time.tz)\n\tPT_SYSTIME: 0x0040,\n\t// 16 bytes; a GUID with Data1, Data2, and Data3 fields in little-endian format (PT_CLSID, UUID)\n\tPT_CLSID: 0x0048,\n\t// Variable size; a 16-bit COUNT field followed by a structure as specified in section 2.11.1.4. (PT_SVREID)\n\tPT_SVREID: 0x00FB,\n\t// Variable size; a byte array representing one or more Restriction structures as specified in section 2.12.\n\t// (PT_SRESTRICT)\n\tPT_SRESTRICT: 0x00FD,\n\t// Variable size; a 16-bit COUNT field followed by that many rule (4) action (3) structures, as specified in\n\t// [MS-OXORULE] section 2.2.5. (PT_ACTIONS)\n\tPT_ACTIONS: 0x00FE,\n\t// Variable size; a COUNT field followed by that many bytes. (PT_BINARY)\n\tPT_BINARY: 0x0102,\n\t// Variable size; a COUNT field followed by that many PT_MV_SHORT values. (PT_MV_SHORT, PT_MV_I2, mv.i2)\n\tPT_MV_SHORT: 0x1002,\n\t// Variable size; a COUNT field followed by that many PT_MV_LONG values. (PT_MV_LONG, PT_MV_I4, mv.i4)\n\tPT_MV_LONG: 0x1003,\n\t// Variable size; a COUNT field followed by that many PT_MV_FLOAT values. (PT_MV_FLOAT, PT_MV_R4, mv.float)\n\tPT_MV_FLOAT: 0x1004,\n\t// Variable size; a COUNT field followed by that many PT_MV_DOUBLE values. (PT_MV_DOUBLE, PT_MV_R8)\n\tPT_MV_DOUBLE: 0x1005,\n\t// Variable size; a COUNT field followed by that many PT_MV_CURRENCY values. (PT_MV_CURRENCY, mv.fixed.14.4)\n\tPT_MV_CURRENCY: 0x1006,\n\t// Variable size; a COUNT field followed by that many PT_MV_APPTIME values. (PT_MV_APPTIME)\n\tPT_MV_APPTIME: 0x1007,\n\t// Variable size; a COUNT field followed by that many PT_MV_LONGLONGvalues. (PT_MV_I8, PT_MV_I8)\n\tPT_MV_LONGLONG: 0x1014,\n\t// Variable size; a COUNT field followed by that many PT_MV_UNICODE values. (PT_MV_UNICODE)\n\tPT_MV_TSTRING: 0x101F,\n\t// Variable size; a COUNT field followed by that many PT_MV_UNICODE values. (PT_MV_UNICODE)\n\tPT_MV_UNICODE: 0x101F,\n\t// Variable size; a COUNT field followed by that many PT_MV_STRING8 values. (PT_MV_STRING8, mv.string)\n\tPT_MV_STRING8: 0x101E,\n\t// Variable size; a COUNT field followed by that many PT_MV_SYSTIME values. (PT_MV_SYSTIME)\n\tPT_MV_SYSTIME: 0x1040,\n\t// Variable size; a COUNT field followed by that many PT_MV_CLSID values. (PT_MV_CLSID, mv.uuid)\n\tPT_MV_CLSID: 0x1048,\n\t// Variable size; a COUNT field followed by that many PT_MV_BINARY values. (PT_MV_BINARY, mv.bin.hex)\n\tPT_MV_BINARY: 0x1102,\n})\nexport type PropertyTypeEnum = $Values<typeof PropertyType>\n\n// Flags used to set on a <see cref=\"Structures.Property\" />\n// See https://msdn.microsoft.com/en-us/library/ee158556(v=exchg.80).aspx\nexport const PropertyFlag = Object.freeze({\n\n\t// If this flag is set for a property, that property MUST NOT be deleted from the .msg file\n\t// (irrespective of which storage it is contained in) and implementations MUST return an error\n\t// if any attempt is made to do so. This flag is set in circumstances where the implementation\n\t// depends on that property always being present in the .msg file once it is written there.\n\tPROPATTR_MANDATORY: 0x00000001,\n\n\t// If this flag is not set on a property, that property MUST NOT be read from the .msg file\n\t// and implementations MUST return an error if any attempt is made to read it. This flag is\n\t// set on all properties unless there is an implementation-specific reason to prevent a property\n\t// from being read from the .msg file.\n\tPROPATTR_READABLE: 0x00000002,\n\n\t// If this flag is not set on a property, that property MUST NOT be modified or deleted and\n\t// implementations MUST return an error if any attempt is made to do so. This flag is set in\n\t// circumstances where the implementation depends on the properties being writable.\n\tPROPATTR_WRITABLE: 0x00000004\n})\n\n// this doesn't include combination of the flags due to flow limitations.\n// don't use.\ntype PropertyFlagEnum = $Values<typeof PropertyFlag>\n\nexport const MessageClass = Object.freeze({\n\tUnknown: null,\n\tIPM_Note: \"IPM.Note\",\n\tIPM_Note_SMIME: \"IPM.Note.SMIME\",\n\tIPM_Note_SMIME_MultipartSigned: \"IPM.Note.SMIME.MultipartSigned\",\n\tIPM_Note_Receipt_SMIME: \"IPM.Note.Receipt.SMIME\",\n\tIPM_Post: \"IPM.Post\",\n\tIPM_Octel_Voice: \"IPM.Octel.Voice\",\n\tIPM_Voicenotes: \"IPM.Voicenotes\",\n\tIPM_Sharing: \"IPM.Sharing\",\n\tREPORT_IPM_NOTE_NDR: \"REPORT.IPM.NOTE.NDR\",\n\tREPORT_IPM_NOTE_DR: \"REPORT.IPM.NOTE.DR\",\n\tREPORT_IPM_NOTE_DELAYED: \"REPORT.IPM.NOTE.DELAYED\",\n\tREPORT_IPM_NOTE_IPNRN: \"*REPORT.IPM.NOTE.IPNRN\",\n\tREPORT_IPM_NOTE_IPNNRN: \"*REPORT.IPM.NOTE.IPNNRN\",\n\tREPORT_IPM_SCHEDULE_MEETING_REQUEST_NDR: \"REPORT.IPM.SCHEDULE. MEETING.REQUEST.NDR\",\n\tREPORT_IPM_SCHEDULE_MEETING_RESP_POS_NDR: \"REPORT.IPM.SCHEDULE.MEETING.RESP.POS.NDR\",\n\tREPORT_IPM_SCHEDULE_MEETING_RESP_TENT_NDR: \"REPORT.IPM.SCHEDULE.MEETING.RESP.TENT.NDR\",\n\tREPORT_IPM_SCHEDULE_MEETING_CANCELED_NDR: \"REPORT.IPM.SCHEDULE.MEETING.CANCELED.NDR\",\n\tREPORT_IPM_NOTE_SMIME_NDR: \"REPORT.IPM.NOTE.SMIME.NDR\",\n\tREPORT_IPM_NOTE_SMIME_DR: \"*REPORT.IPM.NOTE.SMIME.DR\",\n\tREPORT_IPM_NOTE_SMIME_MULTIPARTSIGNED_NDR: \"*REPORT.IPM.NOTE.SMIME.MULTIPARTSIGNED.NDR\",\n\tREPORT_IPM_NOTE_SMIME_MULTIPARTSIGNED_DR: \"*REPORT.IPM.NOTE.SMIME.MULTIPARTSIGNED.DR\",\n\tIPM_Appointment: \"IPM.Appointment\",\n\tIPM_Task: \"IPM.Task\",\n})\n\nexport type MessageClassEnum = $Values<typeof MessageClass>\n\nexport const MessageEditorFormat = Object.freeze({\n\t// The format for the editor to use is unknown.\n\tEDITOR_FORMAT_DONTKNOW: 0x00000000,\n\t// The editor should display the message in plain text format.\n\tEDITOR_FORMAT_PLAINTEXT: 0x00000001,\n\t// The editor should display the message in HTML format.\n\tEDITOR_FORMAT_HTML: 0x00000002,\n\t// The editor should display the message in Rich Text Format.\n\tEDITOR_FORMAT_RTF: 0x00000003,\n})\n\nexport type MessageEditorFormatEnum = $Values<typeof MessageEditorFormat>\n\n\nexport const MessageFormat = Object.freeze({\n\tTextOnly: 0,\n\tHtmlOnly: 1,\n\tTextAndHtml: 2,\n})\n\nexport type MessageFormatEnum = $Values<typeof MessageFormat>\n\nexport const MessagFlags = Object.freeze({\n\t// The message is marked as having been read. This can occur as the result of a call at any time to\n\t// IMessage::SetReadFlag or IMAPIFolder::SetReadFlags. Clients can also set this flag by calling a message's\n\t// IMAPIProp::SetProps method before the message has been saved for the first time. This flag is ignored if the\n\t// ASSOCIATED flag is set.\n\tMSGFLAG_READ: 0x0001,\n\n\t// The outgoing message has not been modified since the first time that it was saved; the incoming message has not\n\t// been modified since it was delivered.\n\tMSGFLAG_UNMODIFIED: 0x0002,\n\n\t// The message is marked for sending as a result of a call to IMessage::SubmitMessage. Message store providers set\n\t// this flag; the client has read-only access.\n\tMSGFLAG_SUBMIT: 0x0004,\n\n\t// The message is still being composed. It is saved, but has not been sent. The client or provider has read/write\n\t// access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter. If a client doesn't set\n\t// this flag by the time the message is sent, the message store provider sets it when IMessage::SubmitMessage is\n\t// called. Typically, this flag is cleared after the message is sent.\n\tMSGFLAG_UNSENT: 0x0008,\n\n\t// The message has at least one attachment. This flag corresponds to the message's PR_HASATTACH (PidTagHasAttachments)\n\t// property. The client has read-only access to this flag.\n\tMSGFLAG_HASATTACH: 0x0010,\n\n\t// The messaging user sending was the messaging user receiving the message. The client or provider has read/write\n\t// access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter. This flag is meant to be\n\t// set by the transport provider.\n\tMSGFLAG_FROMME: 0x0020,\n\n\t// The message is an associated message of a folder. The client or provider has read-only access to this flag. The\n\t// READ flag is ignored for associated messages, which do not retain a read/unread state.\n\tMSGFLAG_ASSOCIATED: 0x040,\n\n\t// The message includes a request for a resend operation with a nondelivery report. The client or provider has\n\t// read/write access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter.\n\tMSGFLAG_RESEND: 0x0080,\n\n\t// A read report needs to be sent for the message. The client or provider has read-only access to this flag.\n\tMSGFLAG_NOTIFYREAD: 0x100,\n\n\t// A nonread report needs to be sent for the message. The client or provider has read-only access to this flag.\n\tMSGFLAG_NOTIFYUNREAD: 0x0200,\n\n\t// The message has been read at least once. This flag is set or cleared by the server whenever the MSGFLAG_READ flag\n\t// is set or cleared.\n\tMSGFLAG_EVERREAD: 0x0400,\n\n\t// The incoming message arrived over an X.400 link. It originated either outside the organization or from a source the\n\t// gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers\n\t// set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_X400: 0x1000,\n\n\t// The incoming message arrived over the Internet. It originated either outside the organization or from a source the\n\t// gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers\n\t// set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_INTERNET: 0x2000,\n\n\t// The incoming message arrived over an external link other than X.400 or the Internet. It originated either outside\n\t// the organization or from a source the gateway cannot consider trusted. The client should display an appropriate\n\t// message to the user. Transport providers set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_MISC_EXT: 0x8000,\n})\n\nexport const MessagePriority = Object.freeze({\n\tPRIO_NONURGENT: 0,\n\tPRIO_NORMAL: 1,\n\tPRIO_URGENT: 2\n})\n\nexport type MessagePriorityEnum = $Values<typeof MessagePriority>\n\nexport const AttachmentType = Object.freeze({\n\t// There is no attachment\n\tNO_ATTACHMENT: 0x00000000,\n\n\t// The  PropertyTags.PR_ATTACH_DATA_BIN property contains the attachment data\n\tATTACH_BY_VALUE: 0x00000001,\n\n\t// The \"PropertyTags.PR_ATTACH_PATHNAME_W\" or \"PropertyTags.PR_ATTACH_LONG_PATHNAME_W\"\n\t// property contains a fully qualified path identifying the attachment to recipients with access to a common file server\n\tATTACH_BY_REFERENCE: 0x0002,\n\n\t// The \"PropertyTags.PR_ATTACH_PATHNAME_W\" or \"PropertyTags.PR_ATTACH_LONG_PATHNAME_W\"\n\t// property contains a fully qualified path identifying the attachment\n\tATTACH_BY_REF_RESOLVE: 0x0003,\n\n\t// The \"PropertyTags.PR_ATTACH_PATHNAME_W\" or \"PropertyTags.PR_ATTACH_LONG_PATHNAME_W\"\n\t// property contains a fully qualified path identifying the attachment\n\tATTACH_BY_REF_ONLY: 0x0004,\n\n\t// The \"PropertyTags.PR_ATTACH_DATA_OBJ\" (PidTagAttachDataObject) property contains an embedded object\n\t// that supports the IMessage interface\n\tATTACH_EMBEDDED_MSG: 0x0005,\n\n\t// The attachment is an embedded OLE object\n\tATTACH_OLE: 0x0006,\n})\n\nexport type AttachmentTypeEnum = $Values<typeof AttachmentType>\n\nexport const AttachmentFlags = Object.freeze({\n\t// Indicates that this attachment is not available to HTML rendering applications and should be ignored in\n\t// Multipurpose Internet Mail Extensions (MIME) processing.\n\tATT_INVISIBLE_IN_HTML: 0x00000001,\n\n\t// Indicates that this attachment is not available to applications rendering in Rich Text Format (RTF) and should be\n\t// ignored by MAPI.\n\tATT_INVISIBLE_IN_RTF: 0x00000002,\n\n\t// The Attachment object is referenced and rendered within the HTML body of the associated Message object.\n\tATT_MHTML_REF: 0x00000004,\n})\n\nexport const StoreSupportMask = Object.freeze({\n\t// The message store supports properties containing ANSI (8-bit) characters.\n\tSTORE_ANSI_OK: 0x00020000,\n\n\t// The message store supports attachments (OLE or non-OLE) to messages.\n\tSTORE_ATTACH_OK: 0x00000020,\n\n\t// The message store supports categorized views of tables.\n\tSTORE_CATEGORIZE_OK: 0x00000400,\n\n\t// The message store supports creation of new messages.\n\tSTORE_CREATE_OK: 0x00000010,\n\n\t// Entry identifiers for the objects in the message store are unique, that is, never reused during the life of the\n\t// store.\n\tSTORE_ENTRYID_UNIQUE: 0x00000001,\n\n\t// The message store supports HTML messages, stored in the <see cref=\"PropertyTags.PR_HTML\" /> (PidTagBodyHtml)\n\t// property. Note that STORE_HTML_OK is not defined in versions of MAPIDEFS.H that are included with Microsoft Exchange\n\t// 2000 Server and earlier. If your development environment uses a MAPIDEFS.H file that does not include STORE_HTML_OK,\n\t// use the value 0x00010000 instead.\n\tSTORE_HTML_OK: 0x00010000,\n\n\t// In a wrapped PST store, indicates that when a new message arrives at the store, the store does rules and spam\n\t// filter processing on the message separately. The store calls IMAPISupport::Notify, setting fnevNewMail in the\n\t// NOTIFICATION structure that is passed as a parameter, and then passes the details of the new message to the\n\t// listening client. Subsequently, when the listening client receives the notification, it does not process rules on\n\t// the message.\n\tSTORE_ITEMPROC: 0x00200000,\n\n\t// This flag is reserved and should not be used.\n\tSTORE_LOCALSTORE: 0x00080000,\n\n\t// The message store supports modification of its existing messages.\n\tSTORE_MODIFY_OK: 0x00000008,\n\n\t// The message store supports multivalued properties, guarantees the stability of value order in a multivalued\n\t// property throughout a save operation, and supports instantiation of multivalued properties in tables.\n\tSTORE_MV_PROPS_OK: 0x00000200,\n\n\t// The message store supports notifications.\n\tSTORE_NOTIFY_OK: 0x00000100,\n\n\t// The message store supports OLE attachments. The OLE data is accessible through an IStorage interface, such as that\n\t// available through the PR_ATTACH_DATA_OBJ (PidTagAttachDataObject) property\n\tSTORE_OLE_OK: 0x00000040,\n\n\t// The folders in this store are public (multi-user), not private (possibly multi-instance but not multi-user).\n\tSTORE_PUBLIC_FOLDERS: 0x00004000,\n\n\t// The MAPI Protocol Handler will not crawl the store, and the store is responsible to push any changes through\n\t// notifications to the indexer to have messages indexed.\n\tSTORE_PUSHER_OK: 0x00800000,\n\n\t// All interfaces for the message store have a read-only access level.\n\tSTORE_READONLY: 0x00000002,\n\n\t// The message store supports restrictions.\n\tSTORE_RESTRICTION_OK: 0x00001000,\n\n\t// The message store supports Rich Text Format (RTF) messages, usually compressed, and the store itself keeps\n\t// <see cref=\"PropertyTags.PR_BODY_W\" /> and <see cref=\"PropertyTags.PR_RTF_COMPRESSED\" /> synchronized.\n\tSTORE_RTF_OK: 0x00000800,\n\n\t// The message store supports search-results folders.\n\tSTORE_SEARCH_OK: 0x00000004,\n\n\t// The message store supports sorting views of tables.\n\tSTORE_SORT_OK: 0x00002000,\n\n\t// The message store supports marking a message for submission.\n\tSTORE_SUBMIT_OK: 0x00000080,\n\n\t// The message store supports storage of RTF messages in uncompressed form. An uncompressed RTF stream is identified\n\t// by the value dwMagicUncompressedRTF in the stream header. The dwMagicUncompressedRTF value is defined in the\n\t// RTFLIB.H file\n\tSTORE_UNCOMPRESSED_RTF: 0x00008000,\n\n\t// The message store supports properties containing Unicode characters.\n\tSTORE_UNICODE_OK: 0x00040000\n})\n\nexport const StoreSupportMaskConst\n\t= StoreSupportMask.STORE_ATTACH_OK\n\t// | StoreSupportMask.STORE_CATEGORIZE_OK\n\t| StoreSupportMask.STORE_CREATE_OK\n\t//StoreSupportMask.STORE_ENTRYID_UNIQUE\n\t| StoreSupportMask.STORE_MODIFY_OK\n\t// | StoreSupportMask.STORE_MV_PROPS_OK\n\t// | StoreSupportMask.STORE_OLE_OK\n\t// | StoreSupportMask.STORE_RTF_OK\n\t| StoreSupportMask.STORE_HTML_OK\n\t| StoreSupportMask.STORE_UNICODE_OK\n\n// system.net.mail.MailPriority\nexport const MailPriority = Object.freeze({\n\tHigh: 2,\n\tLow: 1,\n\tNormal: 0\n})\n\nexport type MailPriorityEnum = $Values<typeof MailPriority>\n\nexport const ContentTransferEncoding = Object.freeze({\n\tSevenBit: \"7bit\",\n\tEightBit: \"8bit\",\n\tQuotedPrintable: \"quoted-printable\",\n\tBase64: \"base64\",\n\tBinary: \"binary\"\n})\n\nexport type ContentTransferEncodingEnum = $Values<typeof ContentTransferEncoding>\n\n/**\n *      Contains a bitmask of flags that indicate the origin and current state of a message.\n *\n *      See https://msdn.microsoft.com/en-us/library/cc839733(v=office.15).aspx\n *      This property is a nontransmittable message property exposed at both the sending and receiving ends of a\n *      transmission, with different values depending upon the client application or store provider involved. This property\n *      is initialized by the client or message store provider when a message is created and saved for the first time and\n *      then updated periodically by the message store provider, a transport provider, and the MAPI spooler as the message\n *      is processed and its state changes.\n *      This property exists on a message both before and after submission, and on all copies of the received\n *      message. Although it is not a recipient property, it is exposed differently to each recipient according to whether\n *      it has been read or modified by that recipient.\n */\nexport const MessageFlags = Object.freeze({\n\t// The message is marked as having been read. This can occur as the result of a call at any time to\n\t// IMessage::SetReadFlag or IMAPIFolder::SetReadFlags. Clients can also set this flag by calling a message's\n\t// IMAPIProp::SetProps method before the message has been saved for the first time. This flag is ignored if the\n\t// ASSOCIATED flag is set.\n\tMSGFLAG_READ: 0x0001,\n\t// The outgoing message has not been modified since the first time that it was saved; the incoming message has not\n\t// been modified since it was delivered.\n\tMSGFLAG_UNMODIFIED: 0x0002,\n\t// The message is marked for sending as a result of a call to IMessage::SubmitMessage. Message store providers set\n\t// this flag; the client has read-only access.\n\tMSGFLAG_SUBMIT: 0x0004,\n\t// The message is still being composed. It is saved, but has not been sent. The client or provider has read/write\n\t// access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter. If a client doesn't set\n\t// this flag by the time the message is sent, the message store provider sets it when IMessage::SubmitMessage is\n\t// called. Typically, this flag is cleared after the message is sent.\n\tMSGFLAG_UNSENT: 0x0008,\n\t// The message has at least one attachment. This flag corresponds to the message's PR_HASATTACH (PidTagHasAttachments)\n\t// property. The client has read-only access to this flag.\n\tMSGFLAG_HASATTACH: 0x0010,\n\t// The messaging user sending was the messaging user receiving the message. The client or provider has read/write\n\t// access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter. This flag is meant to be\n\t// set by the transport provider.\n\tMSGFLAG_FROMME: 0x0020,\n\t// The message is an associated message of a folder. The client or provider has read-only access to this flag. The\n\t// READ flag is ignored for associated messages, which do not retain a read/unread state.\n\tMSGFLAG_ASSOCIATED: 0x040,\n\t// The message includes a request for a resend operation with a nondelivery report. The client or provider has\n\t// read/write access to this flag until the first IMAPIProp::SaveChanges call and read-only thereafter.\n\tMSGFLAG_RESEND: 0x0080,\n\t// A read report needs to be sent for the message. The client or provider has read-only access to this flag.\n\tMSGFLAG_NOTIFYREAD: 0x100,\n\t// A nonread report needs to be sent for the message. The client or provider has read-only access to this flag.\n\tMSGFLAG_NOTIFYUNREAD: 0x0200,\n\t// The message has been read at least once. This flag is set or cleared by the server whenever the MSGFLAG_READ flag\n\t// is set or cleared.\n\tMSGFLAG_EVERREAD: 0x0400,\n\t// The incoming message arrived over an X.400 link. It originated either outside the organization or from a source the\n\t// gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers\n\t// set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_X400: 0x1000,\n\t// The incoming message arrived over the Internet. It originated either outside the organization or from a source the\n\t// gateway cannot consider trusted. The client should display an appropriate message to the user. Transport providers\n\t// set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_INTERNET: 0x2000,\n\t// The incoming message arrived over an external link other than X.400 or the Internet. It originated either outside\n\t// the organization or from a source the gateway cannot consider trusted. The client should display an appropriate\n\t// message to the user. Transport providers set this flag; the client has read-only access.\n\tMSGFLAG_ORIGIN_MISC_EXT: 0x8000\n})\n\n/**\n * Contains a bitmask of flags indicating the operations that are available to the client for the object.\n * See https://msdn.microsoft.com/en-us/library/office/cc979218.aspx\n * This property is read-only for the client. It must be a bitwise OR of zero or more values from the following table.\n */\nexport const MapiAccess = Object.freeze({\n\t// write\n\tMAPI_ACCESS_MODIFY: 0x00000001,\n\n\t// read\n\tMAPI_ACCESS_READ: 0x00000002,\n\n\t// delete\n\tMAPI_ACCESS_DELETE: 0x00000004,\n\n\t// Create subfolders in the folder hierarchy\n\tMAPI_ACCESS_CREATE_HIERARCHY: 0x00000008,\n\n\t// Create content messages\n\tMAPI_ACCESS_CREATE_CONTENTS: 0x00000010,\n\n\t// Create associated content messages\n\tMAPI_ACCESS_CREATE_ASSOCIATED: 0x00000020\n})\n\n/**\n * Kind (1 byte): The possible values for the Kind field are in the following table.\n */\nexport const PropertyKind = Object.freeze({\n\t// The property is identified by the LID field (numerical named property)\n\tLid: 0x00,\n\t// The property is identified by the Name field (string named property)\n\tName: 0x01,\n\t// The property does not have an associated PropertyName field.\n\tNotAssociated: 0xFF\n})\n\nexport type PropertyKindEnum = $Values<typeof PropertyKind>","// @flow\nimport type {PropertyTypeEnum} from \"./enums\";\nimport {PropertyType} from \"./enums\";\n\nexport type PropertyTag = {| id: number, type: PropertyTypeEnum |}\n\nexport const PropertyTagLiterals = Object.freeze({\n    // The prefix for a Recipient {OpenMcdf.CFStorage\n    RecipientStoragePrefix: \"__recip_version1.0_#\",\n    // The prefix for an Attachment OpenMcdf.CFStorage\n    AttachmentStoragePrefix: \"__attach_version1.0_#\",\n    // The prefix for a PropertyTag OpenMcdf.CFStream\n    SubStorageStreamPrefix: \"__substg1.0_\",\n    // The name for the properties stream\n    PropertiesStreamName: \"__properties_version1.0\",\n    // The name id storage (named property mapping storage)\n    NameIdStorage: \"__nameid_version1.0\",\n    // The EntryStream stream\n    EntryStream: \"__substg1.0_00030102\",\n    // The GuidStream stream\n    GuidStream: \"__substg1.0_00020102\",\n    // The Streams.StringStream stream\n    StringStream: \"__substg1.0_00040102\",\n})\nexport type PropertyTagLiteralsEnum = $Values<typeof PropertyTagLiterals>\n\nexport const PropertyTags: { [string]: PropertyTag } = Object.freeze({\n    //property tag literals were here\n    // Contains the identifier of the mode for message acknowledgment.\n    PR_ACKNOWLEDGEMENT_MODE: {id: 0x0001, type: PropertyType.PT_LONG},\n    // Contains TRUE if the sender permits auto forwarding of this message.\n    PR_ALTERNATE_RECIPIENT_ALLOWED: {id: 0x0002, type: PropertyType.PT_BOOLEAN},\n    // Contains a list of entry identifiers for users who have authorized the sending of a message.\n    PR_AUTHORIZING_USERS: {id: 0x0003, type: PropertyType.PT_BINARY},\n    // Contains a unicode comment added by the auto-forwarding agent.\n    PR_AUTO_FORWARD_COMMENT_W: {id: 0x0004, type: PropertyType.PT_UNICODE},\n    // Contains a comment added by the auto-forwarding agent.\n    PR_AUTO_FORWARD_COMMENT_A: {id: 0x0004, type: PropertyType.PT_STRING8},\n    // Contains TRUE if the client requests an X-MS-Exchange-Organization-AutoForwarded header field.\n    PR_AUTO_FORWARDED: {id: 0x0005, type: PropertyType.PT_BOOLEAN},\n    // Contains an identifier for the algorithm used to confirm message content confidentiality.\n    PR_CONTENT_CONFIDENTIALITY_ALGORITHM_ID: {id: 0x0006, type: PropertyType.PT_BINARY},\n    // Contains a value the message sender can use to match a report with the original message.\n    PR_CONTENT_CORRELATOR: {id: 0x0007, type: PropertyType.PT_BINARY},\n    // Contains a unicode key value that enables the message recipient to identify its content.\n    PR_CONTENT_IDENTIFIER_W: {id: 0x0008, type: PropertyType.PT_UNICODE},\n    // Contains a ANSI key value that enables the message recipient to identify its content.\n    PR_CONTENT_IDENTIFIER_A: {id: 0x0008, type: PropertyType.PT_STRING8},\n    // Contains a message length, in bytes, passed to a client application or service provider to determine if a message\n    // of that length can be delivered.\n    PR_CONTENT_LENGTH: {id: 0x0009, type: PropertyType.PT_LONG},\n    // Contains TRUE if a message should be returned with a nondelivery report.\n    PR_CONTENT_RETURN_REQUESTED: {id: 0x000A, type: PropertyType.PT_BOOLEAN},\n    // Contains the conversation key used in Microsoft Outlook only when locating IPM.MessageManager messages, such as the\n    // message that contains download history for a Post Office Protocol (POP3) account. This property has been deprecated\n    // in Exchange Server.\n    PR_CONVERSATION_KEY: {id: 0x000B, type: PropertyType.PT_BINARY},\n    // Contains the encoded information types (EITs) that are applied to a message in transit to describe conversions.\n    PR_CONVERSION_EITS: {id: 0x000C, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a message transfer agent (MTA) is prohibited from making message text conversions that lose\n    // information.\n    PR_CONVERSION_WITH_LOSS_PROHIBITED: {id: 0x000D, type: PropertyType.PT_BOOLEAN},\n    // Contains an identifier for the types of text in a message after conversion.\n    PR_CONVERTED_EITS: {id: 0x000E, type: PropertyType.PT_BINARY},\n    // \tContains the date and time when a message sender wants a message delivered.\n    PR_DEFERRED_DELIVERY_TIME: {id: 0x000F, type: PropertyType.PT_SYSTIME},\n    // Contains the date and time when the original message was delivered.\n    PR_DELIVER_TIME: {id: 0x0010, type: PropertyType.PT_SYSTIME},\n    // Contains a reason why a message transfer agent (MTA) has discarded a message.\n    PR_DISCARD_REASON: {id: 0x0011, type: PropertyType.PT_LONG},\n    // Contains TRUE if disclosure of recipients is allowed.\n    PR_DISCLOSURE_OF_RECIPIENTS: {id: 0x0012, type: PropertyType.PT_BOOLEAN},\n    // Contains a history showing how a distribution list has been expanded during message transmiss\n    PR_DL_EXPANSION_HISTORY: {id: 0x0013, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a message transfer agent (MTA) is prohibited from expanding distribution lists.\n    PR_DL_EXPANSION_PROHIBITED: {id: 0x0014, type: PropertyType.PT_BOOLEAN},\n    // Contains the date and time when the messaging system can invalidate the content of a message.\n    PR_EXPIRY_TIME: {id: 0x0015, type: PropertyType.PT_SYSTIME},\n    // Contains the date and time when the messaging system can invalidate the content of a message.\n    PR_IMPLICIT_CONVERSION_PROHIBITED: {id: 0x0016, type: PropertyType.PT_BOOLEAN},\n    // Contains a value that indicates the message sender's opinion of the importance of a message.\n    PR_IMPORTANCE: {id: 0x0017, type: PropertyType.PT_LONG},\n    // The IpmId field represents a PR_IPM_ID MAPI property.\n    PR_IPM_ID: {id: 0x0018, type: PropertyType.PT_BINARY},\n    // Contains the latest date and time when a message transfer agent (MTA) should deliver a message.\n    PR_LATEST_DELIVERY_TIME: {id: 0x0019, type: PropertyType.PT_SYSTIME},\n    // Contains a text string that identifies the sender-defined message class, such as IPM.Note.\n    PR_MESSAGE_CLASS_W: {id: 0x001A, type: PropertyType.PT_UNICODE},\n    // Contains a text string that identifies the sender-defined message class, such as IPM.Note.\n    PR_MESSAGE_CLASS_A: {id: 0x001A, type: PropertyType.PT_STRING8},\n    // Contains a message transfer system (MTS) identifier for a message delivered to a client application.\n    PR_MESSAGE_DELIVERY_ID: {id: 0x001B, type: PropertyType.PT_BINARY},\n    // Contains a security label for a message.\n    PR_MESSAGE_SECURITY_LABEL: {id: 0x001E, type: PropertyType.PT_BINARY},\n    // Contains the identifiers of messages that this message supersedes.\n    PR_OBSOLETED_IPMS: {id: 0x001F, type: PropertyType.PT_BINARY},\n    // Contains the encoded name of the originally intended recipient of an autoforwarded message.\n    PR_ORIGINALLY_INTENDED_RECIPIENT_NAME: {id: 0x0020, type: PropertyType.PT_BINARY},\n    // Contains a copy of the original encoded information types (EITs) for message text.\n    PR_ORIGINAL_EITS: {id: 0x0021, type: PropertyType.PT_BINARY},\n    // Contains an ASN.1 certificate for the message originator.\n    PR_ORIGINATOR_CERTIFICATE: {id: 0x0022, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a message sender requests a delivery report for a particular recipient from the messaging system\n    // before the message is placed in the message store.\n    PR_ORIGINATOR_DELIVERY_REPORT_REQUESTED: {id: 0x0023, type: PropertyType.PT_BOOLEAN},\n    // Contains the binary-encoded return address of the message originator.\n    PR_ORIGINATOR_RETURN_ADDRESS: {id: 0x0024, type: PropertyType.PT_BINARY},\n    // Was originally meant to contain a value used in correlating conversation threads. No longer supported.\n    PR_PARENT_KEY: {id: 0x0025, type: PropertyType.PT_BINARY},\n    // Contains the relative priority of a message.\n    PR_PRIORITY: {id: 0x0026, type: PropertyType.PT_LONG},\n    // Contains a binary verification value enabling a delivery report recipient to verify the origin of the original\n    // message.\n    PR_ORIGIN_CHECK: {id: 0x0027, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a message sender requests proof that the message transfer system has submitted a message for\n    // delivery to the originally intended recipient.\n    PR_PROOF_OF_SUBMISSION_REQUESTED: {id: 0x0028, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if a message sender wants the messaging system to generate a read report when the recipient has read\n    // a message.\n    PR_READ_RECEIPT_REQUESTED: {id: 0x0029, type: PropertyType.PT_BOOLEAN},\n    // Contains the date and time a delivery report is generated.\n    PR_RECEIPT_TIME: {id: 0x002A, type: PropertyType.PT_SYSTIME},\n    // Contains TRUE if recipient reassignment is prohibited.\n    PR_RECIPIENT_REASSIGNMENT_PROHIBITED: {id: 0x002B, type: PropertyType.PT_BOOLEAN},\n    // Contains information about the route covered by a delivered message.\n    PR_REDIRECTION_HISTORY: {id: 0x002C, type: PropertyType.PT_BINARY},\n    // Contains a list of identifiers for messages to which a message is related.\n    PR_RELATED_IPMS: {id: 0x002D, type: PropertyType.PT_BINARY},\n    // Contains the sensitivity value assigned by the sender of the first version of a message — that is, the message\n    // before being forwarded or replied to.\n    PR_ORIGINAL_SENSITIVITY: {id: 0x002E, type: PropertyType.PT_LONG},\n    // Contains an ASCII list of the languages incorporated in a message. UNICODE compilation.\n    PR_LANGUAGES_W: {id: 0x002F, type: PropertyType.PT_UNICODE},\n    // Contains an ASCII list of the languages incorporated in a message. Non-UNICODE compilation.\n    PR_LANGUAGES_A: {id: 0x002F, type: PropertyType.PT_STRING8},\n    // Contains the date and time by which a reply is expected for a message.\n    PR_REPLY_TIME: {id: 0x0030, type: PropertyType.PT_SYSTIME},\n    // Contains a binary tag value that the messaging system should copy to any report generated for the message.\n    PR_REPORT_TAG: {id: 0x0031, type: PropertyType.PT_BINARY},\n    // Contains the date and time when the messaging system generated a report.\n    PR_REPORT_TIME: {id: 0x0032, type: PropertyType.PT_SYSTIME},\n    // Contains TRUE if the original message is being returned with a nonread report.\n    PR_RETURNED_IPM: {id: 0x0033, type: PropertyType.PT_BOOLEAN},\n    // Contains a flag that indicates the security level of a message.\n    PR_SECURITY: {id: 0x0034, type: PropertyType.PT_LONG},\n    // Contains TRUE if this message is an incomplete copy of another message.\n    PR_INCOMPLETE_COPY: {id: 0x0035, type: PropertyType.PT_BOOLEAN},\n    // Contains a value indicating the message sender's opinion of the sensitivity of a message.\n    PR_SENSITIVITY: {id: 0x0036, type: PropertyType.PT_LONG},\n    // Contains the full subject, encoded in Unicode standard, of a message.\n    PR_SUBJECT_W: {id: 0x0037, type: PropertyType.PT_UNICODE},\n    // Contains the full subject, encoded in ANSI standard, of a message.\n    PR_SUBJECT_A: {id: 0x0037, type: PropertyType.PT_STRING8},\n    // Contains a binary value that is copied from the message for which a report is being generated.\n    PR_SUBJECT_IPM: {id: 0x0038, type: PropertyType.PT_BINARY},\n    // Contains the date and time the message sender submitted a message.\n    PR_CLIENT_SUBMIT_TIME: {id: 0x0039, type: PropertyType.PT_SYSTIME},\n    // Contains the unicode display name for the recipient that should get reports for this message.\n    PR_REPORT_NAME_W: {id: 0x003A, type: PropertyType.PT_UNICODE},\n    // Contains the ANSI display name for the recipient that should get reports for this message.\n    PR_REPORT_NAME_A: {id: 0x003A, type: PropertyType.PT_STRING8},\n    // Contains the search key for the messaging user represented by the sender.\n    PR_SENT_REPRESENTING_SEARCH_KEY: {id: 0x003B, type: PropertyType.PT_BINARY},\n    // This property contains the content type for a submitted message.\n    PR_X400_CONTENT_TYPE: {id: 0x003C, type: PropertyType.PT_BINARY},\n    // Contains a unicode subject prefix that typically indicates some action on a messagE, such as \"FW: \" for forwarding.\n    PR_SUBJECT_PREFIX_W: {id: 0x003D, type: PropertyType.PT_UNICODE},\n    // Contains a ANSI subject prefix that typically indicates some action on a messagE, such as \"FW: \" for forwarding.\n    PR_SUBJECT_PREFIX_A: {id: 0x003D, type: PropertyType.PT_STRING8},\n    // Contains reasons why a message was not received that forms part of a non-delivery report.\n    PR_NON_RECEIPT_REASON: {id: 0x003E, type: PropertyType.PT_LONG},\n    // Contains the entry identifier of the messaging user that actually receives the message.\n    PR_RECEIVED_BY_ENTRYID: {id: 0x003F, type: PropertyType.PT_BINARY},\n    // Contains the display name of the messaging user that actually receives the message. UNICODE compilation.\n    PR_RECEIVED_BY_NAME_W: {id: 0x0040, type: PropertyType.PT_UNICODE},\n    // Contains the display name of the messaging user that actually receives the message. Non-UNICODE compilation.\n    PR_RECEIVED_BY_NAME_A: {id: 0x0040, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier for the messaging user represented by the sender.\n    PR_SENT_REPRESENTING_ENTRYID: {id: 0x0041, type: PropertyType.PT_BINARY},\n    // Contains the display name for the messaging user represented by the sender. UNICODE compilation.\n    PR_SENT_REPRESENTING_NAME_W: {id: 0x0042, type: PropertyType.PT_UNICODE},\n    // Contains the display name for the messaging user represented by the sender. Non-UNICODE compilation.\n    PR_SENT_REPRESENTING_NAME_A: {id: 0x0042, type: PropertyType.PT_STRING8},\n    // Contains the display name for the messaging user represented by the receiving user. UNICODE compilation.\n    PR_RCVD_REPRESENTING_NAME_W: {id: 0x0044, type: PropertyType.PT_UNICODE},\n    // Contains the display name for the messaging user represented by the receiving user. Non-UNICODE compilation.\n    PR_RCVD_REPRESENTING_NAME_A: {id: 0x0044, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier for the recipient that should get reports for this message.\n    PR_REPORT_ENTRYID: {id: 0x0045, type: PropertyType.PT_BINARY},\n    // Contains an entry identifier for the messaging user to which the messaging system should direct a read report for\n    // this message.\n    PR_READ_RECEIPT_ENTRYID: {id: 0x0046, type: PropertyType.PT_BINARY},\n    // Contains a message transfer system (MTS) identifier for the message transfer agent (MTA).\n    PR_MESSAGE_SUBMISSION_ID: {id: 0x0047, type: PropertyType.PT_BINARY},\n    // Contains the date and time a transport provider passed a message to its underlying messaging system.\n    PR_PROVIDER_SUBMIT_TIME: {id: 0x0048, type: PropertyType.PT_SYSTIME},\n    // Contains the subject of an original message for use in a report about the message. UNICODE compilation.\n    PR_ORIGINAL_SUBJECT_W: {id: 0x0049, type: PropertyType.PT_UNICODE},\n    // Contains the subject of an original message for use in a report about the message. Non-UNICODE compilation.\n    PR_ORIGINAL_SUBJECT_A: {id: 0x0049, type: PropertyType.PT_STRING8},\n    // The obsolete precursor of the PR_DISCRETE_VALUES property. No longer supported.\n    PR_DISC_VAL: {id: 0x004A, type: PropertyType.PT_BOOLEAN},\n    // Contains the class of the original message for use in a report. UNICODE compilation.\n    PR_ORIG_MESSAGE_CLASS_W: {id: 0x004B, type: PropertyType.PT_UNICODE},\n    // Contains the class of the original message for use in a report. Non-UNICODE compilation.\n    PR_ORIG_MESSAGE_CLASS_A: {id: 0x004B, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier of the author of the first version of a messagE, that is, the message before being\n    // forwarded or replied to.\n    PR_ORIGINAL_AUTHOR_ENTRYID: {id: 0x004C, type: PropertyType.PT_BINARY},\n    // Contains the display name of the author of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_NAME_W: {id: 0x004D, type: PropertyType.PT_UNICODE},\n    // Contains the display name of the author of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_NAME_A: {id: 0x004D, type: PropertyType.PT_STRING8},\n    // Contains the original submission date and time of the message in the report.\n    PR_ORIGINAL_SUBMIT_TIME: {id: 0x004E, type: PropertyType.PT_SYSTIME},\n    // Contains a sized array of entry identifiers for recipients that are to get a reply.\n    PR_REPLY_RECIPIENT_ENTRIES: {id: 0x004F, type: PropertyType.PT_BINARY},\n    // Contains a list of display names for recipients that are to get a reply. UNICODE compilation.\n    PR_REPLY_RECIPIENT_NAMES_W: {id: 0x0050, type: PropertyType.PT_UNICODE},\n    // Contains a list of display names for recipients that are to get a reply. Non-UNICODE compilation.\n    PR_REPLY_RECIPIENT_NAMES_A: {id: 0x0050, type: PropertyType.PT_STRING8},\n    // Contains the search key of the messaging user that actually receives the message.\n    PR_RECEIVED_BY_SEARCH_KEY: {id: 0x0051, type: PropertyType.PT_BINARY},\n    // Contains the search key for the messaging user represented by the receiving user.\n    PR_RCVD_REPRESENTING_SEARCH_KEY: {id: 0x0052, type: PropertyType.PT_BINARY},\n    // Contains a search key for the messaging user to which the messaging system should direct a read report for a\n    // message.\n    PR_READ_RECEIPT_SEARCH_KEY: {id: 0x0053, type: PropertyType.PT_BINARY},\n    // Contains the search key for the recipient that should get reports for this message.\n    PR_REPORT_SEARCH_KEY: {id: 0x0054, type: PropertyType.PT_BINARY},\n    // Contains a copy of the original message's delivery date and time in a thread.\n    PR_ORIGINAL_DELIVERY_TIME: {id: 0x0055, type: PropertyType.PT_SYSTIME},\n    // Contains the search key of the author of the first version of a messagE, that is, the message before being\n    // forwarded or replied to.\n    PR_ORIGINAL_AUTHOR_SEARCH_KEY: {id: 0x0056, type: PropertyType.PT_BINARY},\n    // Contains TRUE if this messaging user is specifically named as a primary (To) recipient of this message and is not\n    // part of a distribution list.\n    PR_MESSAGE_TO_ME: {id: 0x0057, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if this messaging user is specifically named as a carbon copy (CC) recipient of this message and is\n    // not part of a distribution list.\n    PR_MESSAGE_CC_ME: {id: 0x0058, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if this messaging user is specifically named as a primary (To), carbon copy (CC), or blind carbon\n    // copy (BCC) recipient of this message and is not part of a distribution list.\n    PR_MESSAGE_RECIP_ME: {id: 0x0059, type: PropertyType.PT_BOOLEAN},\n    // Contains the display name of the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_SENDER_NAME_W: {id: 0x005A, type: PropertyType.PT_UNICODE},\n    // Contains the display name of the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_SENDER_NAME_A: {id: 0x005A, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier of the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to.\n    PR_ORIGINAL_SENDER_ENTRYID: {id: 0x005B, type: PropertyType.PT_BINARY},\n    // Contains the search key for the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to.\n    PR_ORIGINAL_SENDER_SEARCH_KEY: {id: 0x005C, type: PropertyType.PT_BINARY},\n    // Contains the display name of the messaging user on whose behalf the original message was sent. UNICODE compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_NAME_W: {id: 0x005D, type: PropertyType.PT_UNICODE},\n    // Contains the display name of the messaging user on whose behalf the original message was sent. Non-UNICODE\n    // compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_NAME_A: {id: 0x005D, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier of the messaging user on whose behalf the original message was sent.\n    PR_ORIGINAL_SENT_REPRESENTING_ENTRYID: {id: 0x005E, type: PropertyType.PT_BINARY},\n    // Contains the search key of the messaging user on whose behalf the original message was sent.\n    PR_ORIGINAL_SENT_REPRESENTING_SEARCH_KEY: {id: 0x005F, type: PropertyType.PT_BINARY},\n    // Contains the starting date and time of an appointment as managed by a scheduling application.\n    PR_START_DATE: {id: 0x0060, type: PropertyType.PT_SYSTIME},\n    // Contains the ending date and time of an appointment as managed by a scheduling application.\n    PR_END_DATE: {id: 0x0061, type: PropertyType.PT_SYSTIME},\n    // Contains an identifier for an appointment in the owner's schedule.\n    PR_OWNER_APPT_ID: {id: 0x0062, type: PropertyType.PT_LONG},\n    // Contains TRUE if the message sender wants a response to a meeting request.\n    PR_RESPONSE_REQUESTED: {id: 0x0063, type: PropertyType.PT_BOOLEAN},\n    // Contains the address type for the messaging user represented by the sender. UNICODE compilation.\n    PR_SENT_REPRESENTING_ADDRTYPE_W: {id: 0x0064, type: PropertyType.PT_UNICODE},\n    // Contains the address type for the messaging user represented by the sender. Non-UNICODE compilation.\n    PR_SENT_REPRESENTING_ADDRTYPE_A: {id: 0x0064, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address for the messaging user represented by the sender. UNICODE compilation.\n    PR_SENT_REPRESENTING_EMAIL_ADDRESS_W: {id: 0x0065, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address for the messaging user represented by the sender. Non-UNICODE compilation.\n    PR_SENT_REPRESENTING_EMAIL_ADDRESS_A: {id: 0x0065, type: PropertyType.PT_STRING8},\n    // Contains the address type of the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_SENDER_ADDRTYPE_W: {id: 0x0066, type: PropertyType.PT_UNICODE},\n    // Contains the address type of the sender of the first version of a messagE, that is, the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_SENDER_ADDRTYPE_A: {id: 0x0066, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address of the sender of the first version of a message, that is, the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_SENDER_EMAIL_ADDRESS_W: {id: 0x0067, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address of the sender of the first version of a message, that is, the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_SENDER_EMAIL_ADDRESS_A: {id: 0x0067, type: PropertyType.PT_STRING8},\n    // Contains the address type of the messaging user on whose behalf the original message was sent. UNICODE compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE_W: {id: 0x0068, type: PropertyType.PT_UNICODE},\n    // Contains the address type of the messaging user on whose behalf the original message was sent. Non-UNICODE\n    // compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE_A: {id: 0x0068, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address of the messaging user on whose behalf the original message was sent. UNICODE\n    // compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS_W: {id: 0x0069, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address of the messaging user on whose behalf the original message was sent. Non-UNICODE\n    // compilation.\n    PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS_A: {id: 0x0069, type: PropertyType.PT_STRING8},\n    // Contains the topic of the first message in a conversation thread. UNICODE compilation.\n    PR_CONVERSATION_TOPIC_W: {id: 0x0070, type: PropertyType.PT_UNICODE},\n    // Contains the topic of the first message in a conversation thread. Non-UNICODE compilation.\n    PR_CONVERSATION_TOPIC_A: {id: 0x0070, type: PropertyType.PT_STRING8},\n    // Contains a binary value that indicates the relative position of this message within a conversation thread.\n    // See https://msdn.microsoft.com/en-us/library/office/cc842470.aspx\n    PR_CONVERSATION_INDEX: {id: 0x0071, type: PropertyType.PT_BINARY},\n    // Contains a binary value that indicates the relative position of this message within a conversation thread.\n    PR_ORIGINAL_DISPLAY_BCC_W: {id: 0x0072, type: PropertyType.PT_UNICODE},\n    // Contains the display names of any blind carbon copy (BCC) recipients of the original message. Non-UNICODE\n    // compilation.\n    PR_ORIGINAL_DISPLAY_BCC_A: {id: 0x0072, type: PropertyType.PT_STRING8},\n    // Contains the display names of any carbon copy (CC) recipients of the original message. UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_CC_W: {id: 0x0073, type: PropertyType.PT_UNICODE},\n    // Contains the display names of any carbon copy (CC) recipients of the original message. Non-UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_CC_A: {id: 0x0073, type: PropertyType.PT_STRING8},\n    // Contains the display names of the primary (To) recipients of the original message. UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_TO_W: {id: 0x0074, type: PropertyType.PT_UNICODE},\n    // Contains the display names of the primary (To) recipients of the original message. Non-UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_TO_A: {id: 0x0074, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address typE, such as SMTP, for the messaging user that actually receives the message. UNICODE\n    // compilation.\n    PR_RECEIVED_BY_ADDRTYPE_W: {id: 0x0075, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address typE, such as SMTP, for the messaging user that actually receives the message.\n    // Non-UNICODE compilation.\n    PR_RECEIVED_BY_ADDRTYPE_A: {id: 0x0075, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address for the messaging user that actually receives the message. UNICODE compilation.\n    PR_RECEIVED_BY_EMAIL_ADDRESS_W: {id: 0x0076, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address for the messaging user that actually receives the message. Non-UNICODE compilation.\n    PR_RECEIVED_BY_EMAIL_ADDRESS_A: {id: 0x0076, type: PropertyType.PT_STRING8},\n    // Contains the address type for the messaging user represented by the user actually receiving the message. UNICODE\n    // compilation.\n    PR_RCVD_REPRESENTING_ADDRTYPE_W: {id: 0x0077, type: PropertyType.PT_UNICODE},\n    // Contains the address type for the messaging user represented by the user actually receiving the message.\n    // Non-UNICODE compilation.\n    PR_RCVD_REPRESENTING_ADDRTYPE_A: {id: 0x0077, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address for the messaging user represented by the receiving user. UNICODE compilation.\n    PR_RCVD_REPRESENTING_EMAIL_ADDRESS_W: {id: 0x0078, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address for the messaging user represented by the receiving user. Non-UNICODE compilation.\n    PR_RCVD_REPRESENTING_EMAIL_ADDRESS_A: {id: 0x0078, type: PropertyType.PT_STRING8},\n    // Contains the address type of the author of the first version of a message. That is — the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_ADDRTYPE_W: {id: 0x0079, type: PropertyType.PT_UNICODE},\n    // Contains the address type of the author of the first version of a message. That is — the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_ADDRTYPE_A: {id: 0x0079, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address of the author of the first version of a message. That is — the message before being\n    // forwarded or replied to. UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS_W: {id: 0x007A, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address of the author of the first version of a message. That is — the message before being\n    // forwarded or replied to. Non-UNICODE compilation.\n    PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS_A: {id: 0x007A, type: PropertyType.PT_STRING8},\n    // Contains the address type of the originally intended recipient of an autoforwarded message. UNICODE compilation.\n    PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE_W: {id: 0x007B, type: PropertyType.PT_UNICODE},\n    // Contains the address type of the originally intended recipient of an autoforwarded message. Non-UNICODE\n    // compilation.\n    PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE_A: {id: 0x007B, type: PropertyType.PT_STRING8},\n    // Contains the e-mail address of the originally intended recipient of an autoforwarded message. UNICODE compilation.\n    PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS_W: {id: 0x007C, type: PropertyType.PT_UNICODE},\n    // Contains the e-mail address of the originally intended recipient of an autoforwarded message. Non-UNICODE\n    // compilation.\n    PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS_A: {id: 0x007C, type: PropertyType.PT_STRING8},\n    // Contains transport-specific message envelope information. Non-UNICODE compilation.\n    PR_TRANSPORT_MESSAGE_HEADERS_A: {id: 0x007D, type: PropertyType.PT_STRING8},\n    // Contains transport-specific message envelope information. UNICODE compilation.\n    PR_TRANSPORT_MESSAGE_HEADERS_W: {id: 0x007D, type: PropertyType.PT_UNICODE},\n    // Contains the converted value of the attDelegate workgroup property.\n    PR_DELEGATION: {id: 0x007E, type: PropertyType.PT_BINARY},\n    // Contains a value used to correlate a Transport Neutral Encapsulation Format (TNEF) attachment with a message\n    PR_TNEF_CORRELATION_KEY: {id: 0x007F, type: PropertyType.PT_BINARY},\n    // Contains the message text. UNICODE compilation.\n    // These properties are typically used only in an interpersonal message (IPM).\n    // Message stores that support Rich Text Format (RTF) ignore any changes to white space in the message text. When\n    // PR_BODY is stored for the first timE, the message store also generates and stores the PR_RTF_COMPRESSED\n    // (PidTagRtfCompressed) property, the RTF version of the message text. If the IMAPIProp::SaveChanges method is\n    // subsequently called and PR_BODY has been modifieD, the message store calls the RTFSync function to ensure\n    // synchronization with the RTF version. If only white space has been changeD, the properties are left unchanged. This\n    // preserves any nontrivial RTF formatting when the message travels through non-RTF-aware clients and messaging\n    // systems.\n    // The value for this property must be expressed in the code page of the operating system that MAPI is running on.\n    PR_BODY_W: {id: 0x1000, type: PropertyType.PT_UNICODE},\n    // Contains the message text. Non-UNICODE compilation.\n    // These properties are typically used only in an interpersonal message (IPM).\n    // Message stores that support Rich Text Format (RTF) ignore any changes to white space in the message text. When\n    // PR_BODY is stored for the first timE, the message store also generates and stores the PR_RTF_COMPRESSED\n    // (PidTagRtfCompressed) property, the RTF version of the message text. If the IMAPIProp::SaveChanges method is\n    // subsequently called and PR_BODY has been modifieD, the message store calls the RTFSync function to ensure\n    // synchronization with the RTF version. If only white space has been changeD, the properties are left unchanged. This\n    // preserves any nontrivial RTF formatting when the message travels through non-RTF-aware clients and messaging\n    // systems.\n    // The value for this property must be expressed in the code page of the operating system that MAPI is running on.\n    PR_BODY_A: {id: 0x1000, type: PropertyType.PT_STRING8},\n    // Contains optional text for a report generated by the messaging system. UNICODE compilation.\n    PR_REPORT_TEXT_W: {id: 0x1001, type: PropertyType.PT_UNICODE},\n    // Contains optional text for a report generated by the messaging system. NON-UNICODE compilation.\n    PR_REPORT_TEXT_A: {id: 0x1001, type: PropertyType.PT_STRING8},\n    // Contains information about a message originator and a distribution list expansion history.\n    PR_ORIGINATOR_AND_DL_EXPANSION_HISTORY: {id: 0x1002, type: PropertyType.PT_BINARY},\n    // Contains the display name of a distribution list where the messaging system delivers a report.\n    PR_REPORTING_DL_NAME: {id: 0x1003, type: PropertyType.PT_BINARY},\n    // Contains an identifier for the message transfer agent that generated a report.\n    PR_REPORTING_MTA_CERTIFICATE: {id: 0x1004, type: PropertyType.PT_BINARY},\n    // Contains the cyclical redundancy check (CRC) computed for the message text.\n    PR_RTF_SYNC_BODY_CRC: {id: 0x1006, type: PropertyType.PT_LONG},\n    // Contains a count of the significant characters of the message text.\n    PR_RTF_SYNC_BODY_COUNT: {id: 0x1007, type: PropertyType.PT_LONG},\n    // Contains significant characters that appear at the beginning of the message text. UNICODE compilation.\n    PR_RTF_SYNC_BODY_TAG_W: {id: 0x1008, type: PropertyType.PT_UNICODE},\n    // Contains significant characters that appear at the beginning of the message text. Non-UNICODE compilation.\n    PR_RTF_SYNC_BODY_TAG_A: {id: 0x1008, type: PropertyType.PT_STRING8},\n    // Contains the Rich Text Format (RTF) version of the message text, usually in compressed form.\n    PR_RTF_COMPRESSED: {id: 0x1009, type: PropertyType.PT_BINARY},\n    // Contains a count of the ignorable characters that appear before the significant characters of the message.\n    PR_RTF_SYNC_PREFIX_COUNT: {id: 0x1010, type: PropertyType.PT_LONG},\n    // Contains a count of the ignorable characters that appear after the significant characters of the message.\n    PR_RTF_SYNC_TRAILING_COUNT: {id: 0x1011, type: PropertyType.PT_LONG},\n    // Contains the entry identifier of the originally intended recipient of an auto-forwarded message.\n    PR_ORIGINALLY_INTENDED_RECIP_ENTRYID: {id: 0x1012, type: PropertyType.PT_BINARY},\n    // Contains the Hypertext Markup Language (HTML) version of the message text.\n    // These properties contain the same message text as the <see cref=\"PR_BODY_CONTENT_LOCATION_W\" />\n    // (PidTagBodyContentLocation), but in HTML. A message store that supports HTML indicates this by setting the\n    // <see cref=\"StoreSupportMask.STORE_HTML_OK\" /> flag in its <see cref=\"PR_STORE_SUPPORT_MASK\" />\n    // (PidTagStoreSupportMask). Note <see cref=\"StoreSupportMask.STORE_HTML_OK\" /> is not defined in versions of\n    // Mapidefs.h included with Microsoft® Exchange 2000 Server and earlier. If <see cref=\"StoreSupportMask.STORE_HTML_OK\" />\n    // is undefined, use the value 0x00010000 instead.\n    PR_BODY_HTML_A: {id: 0x1013, type: PropertyType.PT_STRING8},\n    // Contains the message body text in HTML format.\n    PR_HTML: {id: 0x1013, type: PropertyType.PT_BINARY},\n    // Contains the value of a MIME Content-Location header field.\n    // To set the value of these properties, MIME clients should write the desired value to a Content-Location header\n    // field on a MIME entity that maps to a message body. MIME readers should copy the value of a Content-Location\n    // header field on such a MIME entity to the value of these properties\n    PR_BODY_CONTENT_LOCATION_A: {id: 0x1014, type: PropertyType.PT_STRING8},\n    // Contains the value of a MIME Content-Location header field. UNICODE compilation.\n    // To set the value of these properties, MIME clients should write the desired value to a Content-Location header\n    // field on a MIME entity that maps to a message body. MIME readers should copy the value of a Content-Location\n    // header field on such a MIME entity to the value of these properties\n    PR_BODY_CONTENT_LOCATION_W: {id: 0x1014, type: PropertyType.PT_UNICODE},\n    // Corresponds to the message ID field as specified in [RFC2822].\n    // These properties should be present on all e-mail messages.\n    PR_INTERNET_MESSAGE_ID_A: {id: 0x1035, type: PropertyType.PT_STRING8},\n    // Corresponds to the message ID field as specified in [RFC2822]. UNICODE compilation.\n    // These properties should be present on all e-mail messages.\n    PR_INTERNET_MESSAGE_ID_W: {id: 0x1035, type: PropertyType.PT_UNICODE},\n    // Contains the original message's PR_INTERNET_MESSAGE_ID (PidTagInternetMessageId) property value.\n    // These properties must be set on all message replies.\n    PR_IN_REPLY_TO_ID_A: {id: 0x1042, type: PropertyType.PT_STRING8},\n    // Contains the original message's PR_INTERNET_MESSAGE_ID (PidTagInternetMessageId) property value. UNICODE compilation.\n    // These properties should be present on all e-mail messages.\n    PR_IN_REPLY_TO_ID_W: {id: 0x1042, type: PropertyType.PT_UNICODE},\n    // Contains the value of a Multipurpose Internet Mail Extensions (MIME) message's References header field.\n    // To generate a References header field, clients must set these properties to the desired value. MIME writers must copy\n    // the value of these properties to the References header field. To set the value of these properties, MIME clients must\n    // write the desired value to a References header field. MIME readers must copy the value of the References header field\n    // to these properties. MIME readers may truncate the value of these properties if it exceeds 64KB in length.\n    PR_INTERNET_REFERENCES_A: {id: 0x1039, type: PropertyType.PT_STRING8},\n    // Contains the value of a Multipurpose Internet Mail Extensions (MIME) message's References header field. UNICODE compilation.\n    // To generate a References header field, clients must set these properties to the desired value. MIME writers must copy\n    // the value of these properties to the References header field. To set the value of these properties, MIME clients must\n    // write the desired value to a References header field. MIME readers must copy the value of the References header field\n    // to these properties. MIME readers may truncate the value of these properties if it exceeds 64KB in length.\n    PR_INTERNET_REFERENCES_W: {id: 0x1039, type: PropertyType.PT_UNICODE},\n    // Contains an ASN.1 content integrity check value that allows a message sender to protect message content from\n    // disclosure to unauthorized recipients.\n    PR_CONTENT_INTEGRITY_CHECK: {id: 0x0C00, type: PropertyType.PT_BINARY},\n    // Indicates that a message sender has requested a message content conversion for a particular recipient.\n    PR_EXPLICIT_CONVERSION: {id: 0x0C01, type: PropertyType.PT_LONG},\n    // Contains TRUE if this message should be returned with a report.\n    PR_IPM_RETURN_REQUESTED: {id: 0x0C02, type: PropertyType.PT_BOOLEAN},\n    // Contains an ASN.1 security token for a message.\n    PR_MESSAGE_TOKEN: {id: 0x0C03, type: PropertyType.PT_BINARY},\n    // Contains a diagnostic code that forms part of a nondelivery report.\n    PR_NDR_REASON_CODE: {id: 0x0C04, type: PropertyType.PT_LONG},\n    // Contains a diagnostic code that forms part of a nondelivery report.\n    PR_NDR_DIAG_CODE: {id: 0x0C05, type: PropertyType.PT_LONG},\n    PR_NON_RECEIPT_NOTIFICATION_REQUESTED: {id: 0x0C06, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if a message sender wants notification of non-receipt for a specified recipient.\n    PR_ORIGINATOR_NON_DELIVERY_REPORT_REQUESTED: {id: 0x0C08, type: PropertyType.PT_BOOLEAN},\n    // Contains an entry identifier for an alternate recipient designated by the sender.\n    PR_ORIGINATOR_REQUESTED_ALTERNATE_RECIPIENT: {id: 0x0C09, type: PropertyType.PT_BINARY},\n    PR_PHYSICAL_DELIVERY_BUREAU_FAX_DELIVERY: {id: 0x0C0A, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if the messaging system should use a fax bureau for physical delivery of this message.\n    PR_PHYSICAL_DELIVERY_MODE: {id: 0x0C0B, type: PropertyType.PT_LONG},\n    // Contains the mode of a report to be delivered to a particular message recipient upon completion of physical message\n    // delivery or delivery by the message handling system.\n    PR_PHYSICAL_DELIVERY_REPORT_REQUEST: {id: 0x0C0C, type: PropertyType.PT_LONG},\n    PR_PHYSICAL_FORWARDING_ADDRESS: {id: 0x0C0D, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a message sender requests the message transfer agent to attach a physical forwarding address for a\n    // message recipient.\n    PR_PHYSICAL_FORWARDING_ADDRESS_REQUESTED: {id: 0x0C0E, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if a message sender prohibits physical message forwarding for a specific recipient.\n    PR_PHYSICAL_FORWARDING_PROHIBITED: {id: 0x0C0F, type: PropertyType.PT_BOOLEAN},\n    // Contains an ASN.1 object identifier that is used for rendering message attachments.\n    PR_PHYSICAL_RENDITION_ATTRIBUTES: {id: 0x0C10, type: PropertyType.PT_BINARY},\n    // This property contains an ASN.1 proof of delivery value.\n    PR_PROOF_OF_DELIVERY: {id: 0x0C11, type: PropertyType.PT_BINARY},\n    // This property contains TRUE if a message sender requests proof of delivery for a particular recipient.\n    PR_PROOF_OF_DELIVERY_REQUESTED: {id: 0x0C12, type: PropertyType.PT_BOOLEAN},\n    // Contains a message recipient's ASN.1 certificate for use in a report.\n    PR_RECIPIENT_CERTIFICATE: {id: 0x0C13, type: PropertyType.PT_BINARY},\n    // This property contains a message recipient's telephone number to call to advise of the physical delivery of a\n    // message. UNICODE compilation.\n    PR_RECIPIENT_NUMBER_FOR_ADVICE_W: {id: 0x0C14, type: PropertyType.PT_UNICODE},\n    // This property contains a message recipient's telephone number to call to advise of the physical delivery of a\n    // message. Non-UNICODE compilation.\n    PR_RECIPIENT_NUMBER_FOR_ADVICE_A: {id: 0x0C14, type: PropertyType.PT_STRING8},\n    // Contains the recipient type for a message recipient.\n    PR_RECIPIENT_TYPE: {id: 0x0C15, type: PropertyType.PT_LONG},\n    // This property contains the type of registration used for physical delivery of a message.\n    PR_REGISTERED_MAIL_TYPE: {id: 0x0C16, type: PropertyType.PT_LONG},\n    // Contains TRUE if a message sender requests a reply from a recipient.\n    PR_REPLY_REQUESTED: {id: 0x0C17, type: PropertyType.PT_BOOLEAN},\n    // This property contains a binary array of delivery methods (service providers), in the order of a message sender's\n    // preference.\n    PR_REQUESTED_DELIVERY_METHOD: {id: 0x0C18, type: PropertyType.PT_LONG},\n    // Contains the message sender's entry identifier.\n    PR_SENDER_ENTRYID: {id: 0x0C19, type: PropertyType.PT_BINARY},\n    // Contains the message sender's display name. UNICODE compilation.\n    PR_SENDER_NAME_W: {id: 0x0C1A, type: PropertyType.PT_UNICODE},\n    // Contains the message sender's display name. Non-UNICODE compilation.\n    PR_SENDER_NAME_A: {id: 0x0C1A, type: PropertyType.PT_STRING8},\n    // Contains additional information for use in a report. UNICODE compilation.\n    PR_SUPPLEMENTARY_INFO_W: {id: 0x0C1B, type: PropertyType.PT_UNICODE},\n    // Contains additional information for use in a report. Non-UNICODE compilation.\n    PR_SUPPLEMENTARY_INFO_A: {id: 0x0C1B, type: PropertyType.PT_STRING8},\n    // This property contains the type of a message recipient for use in a report.\n    PR_TYPE_OF_MTS_USER: {id: 0x0C1C, type: PropertyType.PT_LONG},\n    // Contains the message sender's search key.\n    PR_SENDER_SEARCH_KEY: {id: 0x0C1D, type: PropertyType.PT_BINARY},\n    // Contains the message sender's e-mail address type. UNICODE compilation.\n    PR_SENDER_ADDRTYPE_W: {id: 0x0C1E, type: PropertyType.PT_UNICODE},\n    // Contains the message sender's e-mail address type. Non-UNICODE compilation.\n    PR_SENDER_ADDRTYPE_A: {id: 0x0C1E, type: PropertyType.PT_STRING8},\n    // Contains the message sender's e-mail address, encoded in Unicode standard.\n    PR_SENDER_EMAIL_ADDRESS_W: {id: 0x0C1F, type: PropertyType.PT_UNICODE},\n    // Contains the message sender's e-mail address, encoded in Non-Unicode standard.\n    PR_SENDER_EMAIL_ADDRESS_A: {id: 0x0C1F, type: PropertyType.PT_STRING8},\n    // Was originally meant to contain the current version of a message store. No longer supported.\n    PR_CURRENT_VERSION: {id: 0x0E00, type: PropertyType.PT_I8},\n    // Contains TRUE if a client application wants MAPI to delete the associated message after submission.\n    PR_DELETE_AFTER_SUBMIT: {id: 0x0E01, type: PropertyType.PT_BOOLEAN},\n    // Contains an ASCII list of the display names of any blind carbon copy (BCC) message recipients, separated by\n    // semicolons (;). UNICODE compilation.\n    PR_DISPLAY_BCC_W: {id: 0x0E02, type: PropertyType.PT_UNICODE},\n    // Contains an ASCII list of the display names of any blind carbon copy (BCC) message recipients, separated by\n    // semicolons (;). Non-UNICODE compilation.\n    PR_DISPLAY_BCC_A: {id: 0x0E02, type: PropertyType.PT_STRING8},\n    // Contains an ASCII list of the display names of any carbon copy (CC) message recipients, separated by semicolons\n    // (;). UNICODE compilation.\n    PR_DISPLAY_CC_W: {id: 0x0E03, type: PropertyType.PT_UNICODE},\n    // Contains an ASCII list of the display names of any carbon copy (CC) message recipients, separated by semicolons\n    // (;). Non-UNICODE compilation.\n    PR_DISPLAY_CC_A: {id: 0x0E03, type: PropertyType.PT_STRING8},\n    // Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;). UNICODE\n    // compilation.\n    PR_DISPLAY_TO_W: {id: 0x0E04, type: PropertyType.PT_UNICODE},\n    // Contains a list of the display names of the primary (To) message recipients, separated by semicolons (;).\n    // Non-UNICODE compilation.\n    PR_DISPLAY_TO_A: {id: 0x0E04, type: PropertyType.PT_STRING8},\n    // Contains the display name of the folder in which a message was found during a search. UNICODE compilation.\n    PR_PARENT_DISPLAY_W: {id: 0x0E05, type: PropertyType.PT_UNICODE},\n    // Contains the display name of the folder in which a message was found during a search. Non-UNICODE compilation.\n    PR_PARENT_DISPLAY_A: {id: 0x0E05, type: PropertyType.PT_STRING8},\n    // Contains the date and time a message was delivered.\n    PR_MESSAGE_DELIVERY_TIME: {id: 0x0E06, type: PropertyType.PT_SYSTIME},\n    // Contains a bitmask of flags indicating the origin and current state of a message.\n    PR_MESSAGE_FLAGS: {id: 0x0E07, type: PropertyType.PT_LONG},\n    // Contains the sum, in bytes, of the sizes of all properties on a message object.\n    PR_MESSAGE_SIZE: {id: 0x0E08, type: PropertyType.PT_LONG},\n    // Contains the entry identifier of the folder containing a folder or message.\n    PR_PARENT_ENTRYID: {id: 0x0E09, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the folder where the message should be moved after submission.\n    PR_SENTMAIL_ENTRYID: {id: 0x0E0A, type: PropertyType.PT_BINARY},\n    // Contains TRUE if the sender of a message requests the correlation feature of the messaging system.\n    PR_CORRELATE: {id: 0x0E0C, type: PropertyType.PT_BOOLEAN},\n    // Contains the message transfer system (MTS) identifier used in correlating reports with sent messages.\n    PR_CORRELATE_MTSID: {id: 0x0E0D, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a nondelivery report applies only to discrete members of a distribution list rather than the\n    // entire list.\n    PR_DISCRETE_VALUES: {id: 0x0E0E, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if some transport provider has already accepted responsibility for delivering the message to this\n    // recipient, and FALSE if the MAPI spooler considers that this transport provider should accept responsibility.\n    PR_RESPONSIBILITY: {id: 0x0E0F, type: PropertyType.PT_BOOLEAN},\n    // Contains the status of the message based on information available to the MAPI spooler.\n    PR_SPOOLER_STATUS: {id: 0x0E10, type: PropertyType.PT_LONG},\n    // Obsolete MAPI spooler property. No longer supported.\n    PR_TRANSPORT_STATUS: {id: 0x0E11, type: PropertyType.PT_LONG},\n    // Contains a table of restrictions that can be applied to a contents table to find all messages that contain\n    // recipient subobjects meeting the restrictions.\n    PR_MESSAGE_RECIPIENTS: {id: 0x0E12, type: PropertyType.PT_OBJECT},\n    // Contains a table of restrictions that can be applied to a contents table to find all messages that contain\n    // attachment subobjects meeting the restrictions.\n    PR_MESSAGE_ATTACHMENTS: {id: 0x0E13, type: PropertyType.PT_OBJECT},\n    // Contains a bitmask of flags indicating details about a message submission.\n    PR_SUBMIT_FLAGS: {id: 0x0E14, type: PropertyType.PT_LONG},\n    // Contains a value used by the MAPI spooler in assigning delivery responsibility among transport providers.\n    PR_RECIPIENT_STATUS: {id: 0x0E15, type: PropertyType.PT_LONG},\n    // Contains a value used by the MAPI spooler to track the progress of an outbound message through the outgoing\n    // transport providers.\n    PR_TRANSPORT_KEY: {id: 0x0E16, type: PropertyType.PT_LONG},\n    PR_MSG_STATUS: {id: 0x0E17, type: PropertyType.PT_LONG},\n    // Contains a bitmask of property tags that define the status of a message.\n    PR_MESSAGE_DOWNLOAD_TIME: {id: 0x0E18, type: PropertyType.PT_LONG},\n    // Was originally meant to contain the message store version current at the time a message was created. No longer\n    // supported.\n    PR_CREATION_VERSION: {id: 0x0E19, type: PropertyType.PT_I8},\n    // Was originally meant to contain the message store version current at the time the message was last modified. No\n    // longer supported.\n    PR_MODIFY_VERSION: {id: 0x0E1A, type: PropertyType.PT_I8},\n    // When true then the message contains at least one attachment.\n    PR_HASATTACH: {id: 0x0E1B, type: PropertyType.PT_BOOLEAN},\n    // Contains a circular redundancy check (CRC) value on the message text.\n    PR_BODY_CRC: {id: 0x0E1C, type: PropertyType.PT_LONG},\n    // Contains the message subject with any prefix removed. UNICODE compilation.\n    // See https://msdn.microsoft.com/en-us/library/office/cc815282.aspx\n    PR_NORMALIZED_SUBJECT_W: {id: 0x0E1D, type: PropertyType.PT_UNICODE},\n    // Contains the message subject with any prefix removed. Non-UNICODE compilation.\n    PR_NORMALIZED_SUBJECT_A: {id: 0x0E1D, type: PropertyType.PT_STRING8},\n    // Contains TRUE if PR_RTF_COMPRESSED has the same text content as PR_BODY for this message.\n    PR_RTF_IN_SYNC: {id: 0x0E1F, type: PropertyType.PT_BOOLEAN},\n    // Contains the sum, in bytes, of the sizes of all properties on an attachment.\n    PR_ATTACH_SIZE: {id: 0x0E20, type: PropertyType.PT_LONG},\n    // Contains a number that uniquely identifies the attachment within its parent message.\n    PR_ATTACH_NUM: {id: 0x0E21, type: PropertyType.PT_LONG},\n    // Contains a bitmask of flags for an attachment.\n    // If the PR_ATTACH_FLAGS property is zero or absent, the attachment is to be processed by all applications.\n    PR_ATTACH_FLAGS: {id: 0x3714, type: PropertyType.PT_LONG},\n    // Contains TRUE if the message requires preprocessing.\n    PR_PREPROCESS: {id: 0x0E22, type: PropertyType.PT_BOOLEAN},\n    // Contains an identifier for the message transfer agent (MTA) that originated the message.\n    PR_ORIGINATING_MTA_CERTIFICATE: {id: 0x0E25, type: PropertyType.PT_BINARY},\n    // Contains an ASN.1 proof of submission value.\n    PR_PROOF_OF_SUBMISSION: {id: 0x0E26, type: PropertyType.PT_BINARY},\n    // The PR_ENTRYID property contains a MAPI entry identifier used to open and edit properties of a particular MAPI\n    // object.\n    PR_ENTRYID: {id: 0x0FFF, type: PropertyType.PT_BINARY},\n    // Contains the type of an object\n    PR_OBJECT_TYPE: {id: 0x0FFE, type: PropertyType.PT_LONG},\n    // Contains a bitmap of a full size icon for a form.\n    PR_ICON: {id: 0x0FFD, type: PropertyType.PT_BINARY},\n    // Contains a bitmap of a half-size icon for a form.\n    PR_MINI_ICON: {id: 0x0FFC, type: PropertyType.PT_BINARY},\n    // Specifies the hexadecimal string representation of the value of the PR_STORE_ENTRYID (PidTagStoreEntryId) property\n    // on the shared folder. This is a property of a sharing message.\n    PR_STORE_ENTRYID: {id: 0x0FFB, type: PropertyType.PT_BINARY},\n    // Contains the unique binary-comparable identifier (record key) of the message store in which an object resides.\n    PR_STORE_RECORD_KEY: {id: 0x0FFA, type: PropertyType.PT_BINARY},\n    // Contains a unique binary-comparable identifier for a specific object.\n    PR_RECORD_KEY: {id: 0x0FF9, type: PropertyType.PT_BINARY},\n    // Contains the mapping signature for named properties of a particular MAPI object.\n    PR_MAPPING_SIGNATURE: {id: 0x0FF8, type: PropertyType.PT_BINARY},\n    // Indicates the client's access level to the object.\n    PR_ACCESS_LEVEL: {id: 0x0FF7, type: PropertyType.PT_LONG},\n    // Contains a value that uniquely identifies a row in a table.\n    PR_INSTANCE_KEY: {id: 0x0FF6, type: PropertyType.PT_BINARY},\n    // Contains a value that indicates the type of a row in a table.\n    PR_ROW_TYPE: {id: 0x0FF5, type: PropertyType.PT_LONG},\n    // Contains a bitmask of flags indicating the operations that are available to the client for the object.\n    PR_ACCESS: {id: 0x0FF4, type: PropertyType.PT_LONG},\n    // Contains a number that indicates which icon to use when you display a group of e-mail objects.\n    // This property, if it exists, is a hint to the client. The client may ignore the value of this property.\n    PR_ICON_INDEX: {id: 0x1080, type: PropertyType.PT_LONG},\n    // Specifies the last verb executed for the message item to which it is related.\n    PR_LAST_VERB_EXECUTED: {id: 0x1081, type: PropertyType.PT_LONG},\n    // Contains the time when the last verb was executed.\n    PR_LAST_VERB_EXECUTION_TIME: {id: 0x1082, type: PropertyType.PT_SYSTIME},\n    // Contains a unique identifier for a recipient in a recipient table or status table.\n    PR_ROWID: {id: 0x3000, type: PropertyType.PT_LONG},\n    // Contains the display name for a given MAPI object. UNICODE compilation.\n    PR_DISPLAY_NAME_W: {id: 0x3001, type: PropertyType.PT_UNICODE},\n    // Contains the value of the PR_DISPLAY_NAME_W (PidTagDisplayName) property. Non-UNICODE compilation.\n    PR_RECIPIENT_DISPLAY_NAME_A: {id: 0x5FF6, type: PropertyType.PT_STRING8},\n    // Contains the value of the PR_DISPLAY_NAME_W (PidTagDisplayName) property. UNICODE compilation.\n    PR_RECIPIENT_DISPLAY_NAME_W: {id: 0x5FF6, type: PropertyType.PT_UNICODE},\n    // Specifies a bit field that describes the recipient status.\n    // This property is not required. The following are the individual flags that can be set.\n    PR_RECIPIENT_FLAGS: {id: 0x5FFD, type: PropertyType.PT_LONG},\n    // Contains the display name for a given MAPI object. Non-UNICODE compilation.\n    PR_DISPLAY_NAME_A: {id: 0x3001, type: PropertyType.PT_STRING8},\n    // Contains the messaging user's e-mail address type, such as SMTP. UNICODE compilation.\n    // These properties are examples of the base address properties common to all messaging users.\n    // It specifies which messaging system MAPI uses to handle a given message.\n    // This property also determines the format of the address string in the PR_EMAIL_ADRESS(PidTagEmailAddress).\n    // The string it provides can contain only the uppercase alphabetic characters from A through Z and the numbers\n    // from 0 through 9.\n    PR_ADDRTYPE_W: {id: 0x3002, type: PropertyType.PT_UNICODE},\n    // Contains the messaging user's e-mail address type such as SMTP. Non-UNICODE compilation.\n    PR_ADDRTYPE_A: {id: 0x3002, type: PropertyType.PT_STRING8},\n    // Contains the messaging user's e-mail address. UNICODE compilation.\n    PR_EMAIL_ADDRESS_W: {id: 0x3003, type: PropertyType.PT_UNICODE},\n    // Contains the messaging user's SMTP e-mail address. Non-UNICODE compilation.\n    PR_SMTP_ADDRESS_A: {id: 0x39FE, type: PropertyType.PT_STRING8},\n    // Contains the messaging user's SMTP e-mail address. UNICODE compilation.\n    PR_SMTP_ADDRESS_W: {id: 0x39FE, type: PropertyType.PT_UNICODE},\n    // Contains the messaging user's 7bit e-mail address. Non-UNICODE compilation.\n    PR_7BIT_DISPLAY_NAME_A: {id: 0x39FF, type: PropertyType.PT_STRING8},\n    // Contains the messaging user's SMTP e-mail address. UNICODE compilation.\n    PR_7BIT_DISPLAY_NAME_W: {id: 0x39FF, type: PropertyType.PT_UNICODE},\n    // Contains the messaging user's e-mail address. Non-UNICODE compilation.\n    PR_EMAIL_ADDRESS_A: {id: 0x3003, type: PropertyType.PT_STRING8},\n    // Contains a comment about the purpose or content of an object. UNICODE compilation.\n    PR_COMMENT_W: {id: 0x3004, type: PropertyType.PT_UNICODE},\n    // Contains a comment about the purpose or content of an object. Non-UNICODE compilation.\n    PR_COMMENT_A: {id: 0x3004, type: PropertyType.PT_STRING8},\n    // Contains an integer that represents the relative level of indentation, or depth, of an object in a hierarchy table.\n    PR_DEPTH: {id: 0x3005, type: PropertyType.PT_LONG},\n    // Contains the vendor-defined display name for a service provider. UNICODE compilation.\n    PR_PROVIDER_DISPLAY_W: {id: 0x3006, type: PropertyType.PT_UNICODE},\n    // Contains the vendor-defined display name for a service provider. Non-UNICODE compilation.\n    PR_PROVIDER_DISPLAY_A: {id: 0x3006, type: PropertyType.PT_STRING8},\n    // Contains the creation date and time of a message.\n    PR_CREATION_TIME: {id: 0x3007, type: PropertyType.PT_SYSTIME},\n    // Contains the date and time when the object or subobject was last modified.\n    PR_LAST_MODIFICATION_TIME: {id: 0x3008, type: PropertyType.PT_SYSTIME},\n    // Contains a bitmask of flags for message services and providers.\n    PR_RESOURCE_FLAGS: {id: 0x3009, type: PropertyType.PT_LONG},\n    // Contains the base file name of the MAPI service provider dynamic-link library (DLL). UNICODE compilation.\n    PR_PROVIDER_DLL_NAME_W: {id: 0x300A, type: PropertyType.PT_UNICODE},\n    // Contains the base file name of the MAPI service provider dynamic-link library (DLL). Non-UNICODE compilation.\n    PR_PROVIDER_DLL_NAME_A: {id: 0x300A, type: PropertyType.PT_STRING8},\n    // Contains a binary-comparable key that identifies correlated objects for a search.\n    PR_SEARCH_KEY: {id: 0x300B, type: PropertyType.PT_BINARY},\n    // Contains a MAPIUID structure of the service provider that is handling a message.\n    PR_PROVIDER_UID: {id: 0x300C, type: PropertyType.PT_BINARY},\n    // Contains the zero-based index of a service provider's position in the provider table.\n    PR_PROVIDER_ORDINAL: {id: 0x300D, type: PropertyType.PT_LONG},\n    // Contains the version of a form. UNICODE compilation.\n    PR_FORM_VERSION_W: {id: 0x3301, type: PropertyType.PT_UNICODE},\n    // Contains the version of a form. Non-UNICODE compilation.\n    PR_FORM_VERSION_A: {id: 0x3301, type: PropertyType.PT_STRING8},\n    //    //// Contains the 128-bit Object Linking and Embedding (OLE) globally unique identifier (GUID) of a form.\n    //    //PR_FORM_CLSID\n    //{\n    //    get { return new PropertyTag(0x3302, type: PropertyType.PT_CLSID); }\n    //}\n    // Contains the name of a contact for information about a form. UNICODE compilation.\n    PR_FORM_CONTACT_NAME_W: {id: 0x3303, type: PropertyType.PT_UNICODE},\n    // Contains the name of a contact for information about a form. Non-UNICODE compilation.\n    PR_FORM_CONTACT_NAME_A: {id: 0x3303, type: PropertyType.PT_STRING8},\n    // Contains the category of a form. UNICODE compilation.\n    PR_FORM_CATEGORY_W: {id: 0x3304, type: PropertyType.PT_UNICODE},\n    // Contains the category of a form. Non-UNICODE compilation.\n    PR_FORM_CATEGORY_A: {id: 0x3304, type: PropertyType.PT_STRING8},\n    // Contains the subcategory of a form, as defined by a client application. UNICODE compilation.\n    PR_FORM_CATEGORY_SUB_W: {id: 0x3305, type: PropertyType.PT_UNICODE},\n    // Contains the subcategory of a form, as defined by a client application. Non-UNICODE compilation.\n    PR_FORM_CATEGORY_SUB_A: {id: 0x3305, type: PropertyType.PT_STRING8},\n    // Contains a host map of available forms.\n    PR_FORM_HOST_MAP: {id: 0x3306, type: PropertyType.PT_MV_LONG},\n    // Contains TRUE if a form is to be suppressed from display by compose menus and dialog boxes.\n    PR_FORM_HIDDEN: {id: 0x3307, type: PropertyType.PT_BOOLEAN},\n    // Contains the display name for the object that is used to design the form. UNICODE compilation.\n    PR_FORM_DESIGNER_NAME_W: {id: 0x3308, type: PropertyType.PT_UNICODE},\n    // Contains the display name for the object that is used to design the form. Non-UNICODE compilation.\n    PR_FORM_DESIGNER_NAME_A: {id: 0x3308, type: PropertyType.PT_STRING8},\n    //    //// Contains the unique identifier for the object that is used to design a form.\n    //    //PR_FORM_DESIGNER_GUID\n    //{\n    //    get { return new PropertyTag(0x3309, type: PropertyType.PT_CLSID); }\n    //}\n    // Contains TRUE if a message should be composed in the current folder.\n    PR_FORM_MESSAGE_BEHAVIOR: {id: 0x330A, type: PropertyType.PT_LONG},\n    // Contains TRUE if a message store is the default message store in the message store table.\n    PR_DEFAULT_STORE: {id: 0x3400, type: PropertyType.PT_BOOLEAN},\n    // Contains a bitmask of flags that client applications query to determine the characteristics of a message store.\n    PR_STORE_SUPPORT_MASK: {id: 0x340D, type: PropertyType.PT_LONG},\n    // Contains a flag that describes the state of the message store.\n    PR_STORE_STATE: {id: 0x340E, type: PropertyType.PT_LONG},\n    // Contains a bitmask of flags that client applications should query to determine the characteristics of a message store.\n    PR_STORE_UNICODE_MASK: {id: 0x340F, type: PropertyType.PT_LONG},\n    // Was originally meant to contain the search key of the interpersonal message (IPM) root folder. No longer supported\n    PR_IPM_SUBTREE_SEARCH_KEY: {id: 0x3410, type: PropertyType.PT_BINARY},\n    // Was originally meant to contain the search key of the standard Outbox folder. No longer supported.\n    PR_IPM_OUTBOX_SEARCH_KEY: {id: 0x3411, type: PropertyType.PT_BINARY},\n    // Was originally meant to contain the search key of the standard Deleted Items folder. No longer supported.\n    PR_IPM_WASTEBASKET_SEARCH_KEY: {id: 0x3412, type: PropertyType.PT_BINARY},\n    // Was originally meant to contain the search key of the standard Sent Items folder. No longer supported.\n    PR_IPM_SENTMAIL_SEARCH_KEY: {id: 0x3413, type: PropertyType.PT_BINARY},\n    // Contains a provider-defined MAPIUID structure that indicates the type of the message store.\n    PR_MDB_PROVIDER: {id: 0x3414, type: PropertyType.PT_BINARY},\n    // Contains a table of a message store's receive folder settings.\n    PR_RECEIVE_FOLDER_SETTINGS: {id: 0x3415, type: PropertyType.PT_OBJECT},\n    // Contains a bitmask of flags that indicate the validity of the entry identifiers of the folders in a message store.\n    PR_VALID_FOLDER_MASK: {id: 0x35DF, type: PropertyType.PT_LONG},\n    // Contains the entry identifier of the root of the IPM folder subtree in the message store's folder tree.\n    PR_IPM_SUBTREE_ENTRYID: {id: 0x35E0, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the standard interpersonal message (IPM) Outbox folder.\n    PR_IPM_OUTBOX_ENTRYID: {id: 0x35E2, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the standard IPM Deleted Items folder.\n    PR_IPM_WASTEBASKET_ENTRYID: {id: 0x35E3, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the standard IPM Sent Items folder.\n    PR_IPM_SENTMAIL_ENTRYID: {id: 0x35E4, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the user-defined Views folder.\n    PR_VIEWS_ENTRYID: {id: 0x35E5, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the predefined common view folder.\n    PR_COMMON_VIEWS_ENTRYID: {id: 0x35E6, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier for the folder in which search results are typically created.\n    PR_FINDER_ENTRYID: {id: 0x35E7, type: PropertyType.PT_BINARY},\n    // When TRUE, forces the serialization of SMTP and POP3 authentication requests such that the POP3 account is\n    // authenticated before the SMTP account.\n    PR_CE_RECEIVE_BEFORE_SEND: {id: 0x812D, type: PropertyType.PT_BOOLEAN},\n    // Contains a bitmask of flags describing capabilities of an address book container.\n    PR_CONTAINER_FLAGS: {id: 0x3600, type: PropertyType.PT_LONG},\n    // Contains a constant that indicates the folder type.\n    PR_FOLDER_TYPE: {id: 0x3601, type: PropertyType.PT_LONG},\n    // Contains the number of messages in a folder, as computed by the message store.\n    PR_CONTENT_COUNT: {id: 0x3602, type: PropertyType.PT_LONG},\n    // Contains the number of unread messages in a folder, as computed by the message store.\n    PR_CONTENT_UNREAD: {id: 0x3603, type: PropertyType.PT_LONG},\n    // Contains an embedded table object that contains dialog box template entry identifiers.\n    PR_CREATE_TEMPLATES: {id: 0x3604, type: PropertyType.PT_OBJECT},\n    // Contains an embedded display table object.\n    PR_DETAILS_TABLE: {id: 0x3605, type: PropertyType.PT_OBJECT},\n    // Contains a container object that is used for advanced searches.\n    PR_SEARCH: {id: 0x3607, type: PropertyType.PT_OBJECT},\n    // Contains TRUE if the entry in the one-off table can be selected.\n    PR_SELECTABLE: {id: 0x3609, type: PropertyType.PT_BOOLEAN},\n    // Contains TRUE if a folder contains subfolders.\n    PR_SUBFOLDERS: {id: 0x360A, type: PropertyType.PT_BOOLEAN},\n    // Contains a 32-bit bitmask of flags that define folder status.\n    PR_STATUS: {id: 0x360B, type: PropertyType.PT_LONG},\n    // Contains a string value for use in a property restriction on an address book container contents table. UNICODE\n    // compilation\n    PR_ANR_W: {id: 0x360C, type: PropertyType.PT_UNICODE},\n    // Contains a string value for use in a property restriction on an address book container contents table. Non-UNICODE\n    // compilation\n    PR_ANR_A: {id: 0x360C, type: PropertyType.PT_STRING8},\n    // No longer supported\n    PR_CONTENTS_SORT_ORDER: {id: 0x360D, type: PropertyType.PT_MV_LONG},\n    // Contains an embedded hierarchy table object that provides information about the child containers.\n    PR_CONTAINER_HIERARCHY: {id: 0x360E, type: PropertyType.PT_OBJECT},\n    // Contains an embedded contents table object that provides information about a container.\n    PR_CONTAINER_CONTENTS: {id: 0x360F, type: PropertyType.PT_OBJECT},\n    // Contains an embedded contents table object that provides information about a container.\n    PR_FOLDER_ASSOCIATED_CONTENTS: {id: 0x3610, type: PropertyType.PT_OBJECT},\n    // Contains the template entry identifier for a default distribution list.\n    PR_DEF_CREATE_DL: {id: 0x3611, type: PropertyType.PT_BINARY},\n    // Contains the template entry identifier for a default messaging user object.\n    PR_DEF_CREATE_MAILUSER: {id: 0x3612, type: PropertyType.PT_BINARY},\n    // Contains a text string describing the type of a folder. Although this property is generally ignored, versions of\n    // Microsoft® Exchange Server prior to Exchange Server 2003 Mailbox Manager expect this property to be present.\n    // UNICODE compilation.\n    PR_CONTAINER_CLASS_W: {id: 0x3613, type: PropertyType.PT_UNICODE},\n    // Contains a text string describing the type of a folder. Although this property is generally ignored, versions of\n    // Microsoft® Exchange Server prior to Exchange Server 2003 Mailbox Manager expect this property to be present.\n    // Non-UNICODE compilation.\n    PR_CONTAINER_CLASS_A: {id: 0x3613, type: PropertyType.PT_STRING8},\n    // Unknown\n    PR_CONTAINER_MODIFY_VERSION: {id: 0x3614, type: PropertyType.PT_I8},\n    // Contains an address book provider's MAPIUID structure.\n    PR_AB_PROVIDER_ID: {id: 0x3615, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of a folder's default view.\n    PR_DEFAULT_VIEW_ENTRYID: {id: 0x3616, type: PropertyType.PT_BINARY},\n    // Contains the count of items in the associated contents table of the folder.\n    PR_ASSOC_CONTENT_COUNT: {id: 0x3617, type: PropertyType.PT_LONG},\n    // was originally meant to contain an ASN.1 object identifier specifying how the attachment should be handled during\n    // transmission. No longer supported.\n    PR_ATTACHMENT_X400_PARAMETERS: {id: 0x3700, type: PropertyType.PT_BINARY},\n    // Contains the content identification header of a MIME message attachment. This property is used for MHTML support.\n    // It represents the content identification header for the appropriate MIME body part. UNICODE compilation.\n    PR_ATTACH_CONTENT_ID_W: {id: 0x3712, type: PropertyType.PT_UNICODE},\n    // Contains the content identification header of a MIME message attachment. This property is used for MHTML support.\n    // It represents the content identification header for the appropriate MIME body part. Non-UNICODE compilation.\n    PR_ATTACH_CONTENT_ID_A: {id: 0x3712, type: PropertyType.PT_STRING8},\n    // Contains the content location header of a MIME message attachment. This property is used for MHTML support. It\n    // represents the content location header for the appropriate MIME body part. UNICODE compilation.\n    PR_ATTACH_CONTENT_LOCATION_W: {id: 0x3713, type: PropertyType.PT_UNICODE},\n    // Contains the content location header of a MIME message attachment. This property is used for MHTML support. It\n    // represents the content location header for the appropriate MIME body part. UNICODE compilation.\n    PR_ATTACH_CONTENT_LOCATION_A: {id: 0x3713, type: PropertyType.PT_STRING8},\n    // Contains an attachment object typically accessed through the OLE IStorage:IUnknown interface.\n    PR_ATTACH_DATA_OBJ: {id: 0x3701, type: PropertyType.PT_OBJECT},\n    // Contains binary attachment data typically accessed through the COM IStream:IUnknown interface.\n    PR_ATTACH_DATA_BIN: {id: 0x3701, type: PropertyType.PT_BINARY},\n    // Contains an ASN.1 object identifier specifying the encoding for an attachment.\n    PR_ATTACH_ENCODING: {id: 0x3702, type: PropertyType.PT_BINARY},\n    // Contains a filename extension that indicates the document type of an attachment. UNICODE compilation.\n    PR_ATTACH_EXTENSION_W: {id: 0x3703, type: PropertyType.PT_UNICODE},\n    // Contains a filename extension that indicates the document type of an attachment. Non-UNICODE compilation.\n    PR_ATTACH_EXTENSION_A: {id: 0x3703, type: PropertyType.PT_STRING8},\n    // Contains an attachment's base filename and extension, excluding path. UNICODE compilation.\n    PR_ATTACH_FILENAME_W: {id: 0x3704, type: PropertyType.PT_UNICODE},\n    // Contains an attachment's base filename and extension, excluding path. Non-UNICODE compilation.\n    PR_ATTACH_FILENAME_A: {id: 0x3704, type: PropertyType.PT_STRING8},\n    // Contains a MAPI-defined constant representing the way the contents of an attachment can be accessed.\n    PR_ATTACH_METHOD: {id: 0x3705, type: PropertyType.PT_LONG},\n    // Contains an attachment's long filename and extension, excluding path. UNICODE compilation.\n    PR_ATTACH_LONG_FILENAME_W: {id: 0x3707, type: PropertyType.PT_UNICODE},\n    // Contains an attachment's long filename and extension, excluding path. Non-UNICODE compilation.\n    PR_ATTACH_LONG_FILENAME_A: {id: 0x3707, type: PropertyType.PT_STRING8},\n    // Contains an attachment's fully qualified path and filename. UNICODE compilation.\n    PR_ATTACH_PATHNAME_W: {id: 0x3708, type: PropertyType.PT_UNICODE},\n    // Contains an attachment's fully qualified path and filename. Non-UNICODE compilation.\n    PR_ATTACH_PATHNAME_A: {id: 0x3708, type: PropertyType.PT_STRING8},\n    // Contains a Microsoft Windows metafile with rendering information for an attachment.\n    PR_ATTACH_RENDERING: {id: 0x3709, type: PropertyType.PT_BINARY},\n    // Contains an ASN.1 object identifier specifying the application that supplied an attachment.\n    PR_ATTACH_TAG: {id: 0x370A, type: PropertyType.PT_BINARY},\n    // Contains an offset, in characters, to use in rendering an attachment within the main message text.\n    PR_RENDERING_POSITION: {id: 0x370B, type: PropertyType.PT_LONG},\n    // Contains the name of an attachment file modified so that it can be correlated with TNEF messages. UNICODE\n    // compilation.\n    PR_ATTACH_TRANSPORT_NAME_W: {id: 0x370C, type: PropertyType.PT_UNICODE},\n    // Contains the name of an attachment file modified so that it can be correlated with TNEF messages. Non-UNICODE\n    // compilation.\n    PR_ATTACH_TRANSPORT_NAME_A: {id: 0x370C, type: PropertyType.PT_STRING8},\n    // Contains an attachment's fully qualified long path and filename. UNICODE compilation.\n    PR_ATTACH_LONG_PATHNAME_W: {id: 0x370D, type: PropertyType.PT_UNICODE},\n    // Contains an attachment's fully qualified long path and filename. Non-UNICODE compilation.\n    PR_ATTACH_LONG_PATHNAME_A: {id: 0x370D, type: PropertyType.PT_STRING8},\n    // Contains formatting information about a Multipurpose Internet Mail Extensions (MIME) attachment. UNICODE\n    // compilation.\n    PR_ATTACH_MIME_TAG_W: {id: 0x370E, type: PropertyType.PT_UNICODE},\n    // Contains formatting information about a Multipurpose Internet Mail Extensions (MIME) attachment. Non-UNICODE\n    // compilation.\n    PR_ATTACH_MIME_TAG_A: {id: 0x370E, type: PropertyType.PT_STRING8},\n    // Provides file type information for a non-Windows attachment.\n    PR_ATTACH_ADDITIONAL_INFO: {id: 0x370F, type: PropertyType.PT_BINARY},\n    // Contains a value used to associate an icon with a particular row of a table.\n    PR_DISPLAY_TYPE: {id: 0x3900, type: PropertyType.PT_LONG},\n    // Contains the PR_ENTRYID (PidTagEntryId), expressed as a permanent entry ID format.\n    PR_TEMPLATEID: {id: 0x3902, type: PropertyType.PT_BINARY},\n    // These properties appear on address book objects. Obsolete.\n    PR_PRIMARY_CAPABILITY: {id: 0x3904, type: PropertyType.PT_BINARY},\n    // Contains the type of an entry, with respect to how the entry should be displayed in a row in a table for the Global\n    // Address List.\n    PR_DISPLAY_TYPE_EX: {id: 0x3905, type: PropertyType.PT_LONG},\n    // Contains the recipient's account name. UNICODE compilation.\n    PR_ACCOUNT_W: {id: 0x3A00, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's account name. Non-UNICODE compilation.\n    PR_ACCOUNT_A: {id: 0x3A00, type: PropertyType.PT_STRING8},\n    // Contains a list of entry identifiers for alternate recipients designated by the original recipient.\n    PR_ALTERNATE_RECIPIENT: {id: 0x3A01, type: PropertyType.PT_BINARY},\n    // Contains a telephone number that the message recipient can use to reach the sender. UNICODE compilation.\n    PR_CALLBACK_TELEPHONE_NUMBER_W: {id: 0x3A02, type: PropertyType.PT_UNICODE},\n    // Contains a telephone number that the message recipient can use to reach the sender. Non-UNICODE compilation.\n    PR_CALLBACK_TELEPHONE_NUMBER_A: {id: 0x3A02, type: PropertyType.PT_STRING8},\n    // Contains TRUE if message conversions are prohibited by default for the associated messaging user.\n    PR_CONVERSION_PROHIBITED: {id: 0x3A03, type: PropertyType.PT_BOOLEAN},\n    // The DiscloseRecipients field represents a PR_DISCLOSE_RECIPIENTS MAPI property.\n    PR_DISCLOSE_RECIPIENTS: {id: 0x3A04, type: PropertyType.PT_BOOLEAN},\n    // Contains a generational abbreviation that follows the full name of the recipient. UNICODE compilation.\n    PR_GENERATION_W: {id: 0x3A05, type: PropertyType.PT_UNICODE},\n    // Contains a generational abbreviation that follows the full name of the recipient. Non-UNICODE compilation.\n    PR_GENERATION_A: {id: 0x3A05, type: PropertyType.PT_STRING8},\n    // Contains the first or given name of the recipient. UNICODE compilation.\n    PR_GIVEN_NAME_W: {id: 0x3A06, type: PropertyType.PT_UNICODE},\n    // Contains the first or given name of the recipient. Non-UNICODE compilation.\n    PR_GIVEN_NAME_A: {id: 0x3A06, type: PropertyType.PT_STRING8},\n    // Contains a government identifier for the recipient. UNICODE compilation.\n    PR_GOVERNMENT_ID_NUMBER_W: {id: 0x3A07, type: PropertyType.PT_UNICODE},\n    // Contains a government identifier for the recipient. Non-UNICODE compilation.\n    PR_GOVERNMENT_ID_NUMBER_A: {id: 0x3A07, type: PropertyType.PT_STRING8},\n    // Contains the primary telephone number of the recipient's place of business. UNICODE compilation.\n    PR_BUSINESS_TELEPHONE_NUMBER_W: {id: 0x3A08, type: PropertyType.PT_UNICODE},\n    // Contains the primary telephone number of the recipient's place of business. Non-UNICODE compilation.\n    PR_BUSINESS_TELEPHONE_NUMBER_A: {id: 0x3A08, type: PropertyType.PT_STRING8},\n    // Contains the primary telephone number of the recipient's home. UNICODE compilation.\n    PR_HOME_TELEPHONE_NUMBER_W: {id: 0x3A09, type: PropertyType.PT_UNICODE},\n    // Contains the primary telephone number of the recipient's home. Non-UNICODE compilation.\n    PR_HOME_TELEPHONE_NUMBER_A: {id: 0x3A09, type: PropertyType.PT_STRING8},\n    // Contains the initials for parts of the full name of the recipient. UNICODE compilation.\n    PR_INITIALS_W: {id: 0x3A0A, type: PropertyType.PT_UNICODE},\n    // Contains the initials for parts of the full name of the recipient. Non-UNICODE compilation.\n    PR_INITIALS_A: {id: 0x3A0A, type: PropertyType.PT_STRING8},\n    // Contains a keyword that identifies the recipient to the recipient's system administrator. UNICODE compilation.\n    PR_KEYWORD_W: {id: 0x3A0B, type: PropertyType.PT_UNICODE},\n    // Contains a keyword that identifies the recipient to the recipient's system administrator. Non-UNICODE compilation.\n    PR_KEYWORD_A: {id: 0x3A0B, type: PropertyType.PT_STRING8},\n    // Contains a value that indicates the language in which the messaging user is writing messages. UNICODE compilation.\n    PR_LANGUAGE_W: {id: 0x3A0C, type: PropertyType.PT_UNICODE},\n    // Contains a value that indicates the language in which the messaging user is writing messages. Non-UNICODE\n    // compilation.\n    PR_LANGUAGE_A: {id: 0x3A0C, type: PropertyType.PT_STRING8},\n    // Contains the location of the recipient in a format that is useful to the recipient's organization. UNICODE\n    // compilation.\n    PR_LOCATION_W: {id: 0x3A0D, type: PropertyType.PT_UNICODE},\n    // Contains the location of the recipient in a format that is useful to the recipient's organization. Non-UNICODE\n    // compilation.\n    PR_LOCATION_A: {id: 0x3A0D, type: PropertyType.PT_STRING8},\n    // Contains TRUE if the messaging user is allowed to send and receive messages.\n    PR_MAIL_PERMISSION: {id: 0x3A0E, type: PropertyType.PT_BOOLEAN},\n    // Contains the common name of the message handling system. UNICODE compilation.\n    PR_MHS_COMMON_NAME_W: {id: 0x3A0F, type: PropertyType.PT_UNICODE},\n    // Contains the common name of the message handling system. Non-UNICODE compilation.\n    PR_MHS_COMMON_NAME_A: {id: 0x3A0F, type: PropertyType.PT_STRING8},\n    // Contains an organizational ID number for the contact, such as an employee ID number. UNICODE compilation.\n    PR_ORGANIZATIONAL_ID_NUMBER_W: {id: 0x3A10, type: PropertyType.PT_UNICODE},\n    // Contains an organizational ID number for the contact, such as an employee ID number. Non-UNICODE compilation.\n    PR_ORGANIZATIONAL_ID_NUMBER_A: {id: 0x3A10, type: PropertyType.PT_STRING8},\n    // Contains the last or surname of the recipient. UNICODE compilation.\n    PR_SURNAME_W: {id: 0x3A11, type: PropertyType.PT_UNICODE},\n    // Contains the last or surname of the recipient. Non-UNICODE compilation.\n    PR_SURNAME_A: {id: 0x3A11, type: PropertyType.PT_STRING8},\n    // Contains the original entry identifier for an entry copied from an address book to a personal address book or other\n    // writeable address book.\n    PR_ORIGINAL_ENTRYID: {id: 0x3A12, type: PropertyType.PT_BINARY},\n    // Contains the original display name for an entry copied from an address book to a personal address book or other\n    // writable address book. UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_NAME_W: {id: 0x3A13, type: PropertyType.PT_UNICODE},\n    // Contains the original display name for an entry copied from an address book to a personal address book or other\n    // writable address book. Non-UNICODE compilation.\n    PR_ORIGINAL_DISPLAY_NAME_A: {id: 0x3A13, type: PropertyType.PT_STRING8},\n    // Contains the original search key for an entry copied from an address book to a personal address book or other\n    // writeable address book.\n    PR_ORIGINAL_SEARCH_KEY: {id: 0x3A14, type: PropertyType.PT_BINARY},\n    // Contains the recipient's postal address. UNICODE compilation.\n    PR_POSTAL_ADDRESS_W: {id: 0x3A15, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's postal address. Non-UNICODE compilation.\n    PR_POSTAL_ADDRESS_A: {id: 0x3A15, type: PropertyType.PT_STRING8},\n    // Contains the recipient's company name. UNICODE compilation.\n    PR_COMPANY_NAME_W: {id: 0x3A16, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's company name. Non-UNICODE compilation.\n    PR_COMPANY_NAME_A: {id: 0x3A16, type: PropertyType.PT_STRING8},\n    // Contains the recipient's job title. UNICODE compilation.\n    PR_TITLE_W: {id: 0x3A17, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's job title. Non-UNICODE compilation.\n    PR_TITLE_A: {id: 0x3A17, type: PropertyType.PT_STRING8},\n    // Contains a name for the department in which the recipient works. UNICODE compilation.\n    PR_DEPARTMENT_NAME_W: {id: 0x3A18, type: PropertyType.PT_UNICODE},\n    // Contains a name for the department in which the recipient works. Non-UNICODE compilation.\n    PR_DEPARTMENT_NAME_A: {id: 0x3A18, type: PropertyType.PT_STRING8},\n    // Contains the recipient's office location. UNICODE compilation.\n    PR_OFFICE_LOCATION_W: {id: 0x3A19, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's office location. Non-UNICODE compilation.\n    PR_OFFICE_LOCATION_A: {id: 0x3A19, type: PropertyType.PT_STRING8},\n    // Contains the recipient's primary telephone number. UNICODE compilation.\n    PR_PRIMARY_TELEPHONE_NUMBER_W: {id: 0x3A1A, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's primary telephone number. Non-UNICODE compilation.\n    PR_PRIMARY_TELEPHONE_NUMBER_A: {id: 0x3A1A, type: PropertyType.PT_STRING8},\n    // Contains a secondary telephone number at the recipient's place of business. UNICODE compilation.\n    PR_BUSINESS2_TELEPHONE_NUMBER_W: {id: 0x3A1B, type: PropertyType.PT_UNICODE},\n    // Contains a secondary telephone number at the recipient's place of business. Non-UNICODE compilation.\n    PR_BUSINESS2_TELEPHONE_NUMBER_A: {id: 0x3A1B, type: PropertyType.PT_STRING8},\n    // Contains the recipient's cellular telephone number. UNICODE compilation.\n    PR_MOBILE_TELEPHONE_NUMBER_W: {id: 0x3A1C, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's cellular telephone number. Non-UNICODE compilation.\n    PR_MOBILE_TELEPHONE_NUMBER_A: {id: 0x3A1C, type: PropertyType.PT_STRING8},\n    // Contains the recipient's radio telephone number. UNICODE compilation.\n    PR_RADIO_TELEPHONE_NUMBER_W: {id: 0x3A1D, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's radio telephone number. Non-UNICODE compilation.\n    PR_RADIO_TELEPHONE_NUMBER_A: {id: 0x3A1D, type: PropertyType.PT_STRING8},\n    // Contains the recipient's car telephone number. UNICODE compilation.\n    PR_CAR_TELEPHONE_NUMBER_W: {id: 0x3A1E, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's car telephone number. Non-UNICODE compilation.\n    PR_CAR_TELEPHONE_NUMBER_A: {id: 0x3A1E, type: PropertyType.PT_STRING8},\n    // Contains an alternate telephone number for the recipient. UNICODE compilation.\n    PR_OTHER_TELEPHONE_NUMBER_W: {id: 0x3A1F, type: PropertyType.PT_UNICODE},\n    // Contains an alternate telephone number for the recipient. Non-UNICODE compilation.\n    PR_OTHER_TELEPHONE_NUMBER_A: {id: 0x3A1F, type: PropertyType.PT_STRING8},\n    // Contains a recipient's display name in a secure form that cannot be changed. UNICODE compilation.\n    PR_TRANSMITABLE_DISPLAY_NAME_W: {id: 0x3A20, type: PropertyType.PT_UNICODE},\n    // Contains a recipient's display name in a secure form that cannot be changed. Non-UNICODE compilation.\n    PR_TRANSMITABLE_DISPLAY_NAME_A: {id: 0x3A20, type: PropertyType.PT_STRING8},\n    // Contains the recipient's pager telephone number. UNICODE compilation.\n    PR_PAGER_TELEPHONE_NUMBER_W: {id: 0x3A21, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's pager telephone number. Non-UNICODE compilation.\n    PR_PAGER_TELEPHONE_NUMBER_A: {id: 0x3A21, type: PropertyType.PT_STRING8},\n    // Contains an ASN.1 authentication certificate for a messaging user.\n    PR_USER_CERTIFICATE: {id: 0x3A22, type: PropertyType.PT_BINARY},\n    // Contains the telephone number of the recipient's primary fax machine. UNICODE compilation.\n    PR_PRIMARY_FAX_NUMBER_W: {id: 0x3A23, type: PropertyType.PT_UNICODE},\n    // Contains the telephone number of the recipient's primary fax machine. Non-UNICODE compilation.\n    PR_PRIMARY_FAX_NUMBER_A: {id: 0x3A23, type: PropertyType.PT_STRING8},\n    // Contains the telephone number of the recipient's business fax machine. UNICODE compilation.\n    PR_BUSINESS_FAX_NUMBER_W: {id: 0x3A24, type: PropertyType.PT_UNICODE},\n    // Contains the telephone number of the recipient's business fax machine. Non-UNICODE compilation.\n    PR_BUSINESS_FAX_NUMBER_A: {id: 0x3A24, type: PropertyType.PT_STRING8},\n    // Contains the telephone number of the recipient's home fax machine. UNICODE compilation.\n    PR_HOME_FAX_NUMBER_W: {id: 0x3A25, type: PropertyType.PT_UNICODE},\n    // Contains the telephone number of the recipient's home fax machine. Non-UNICODE compilation.\n    PR_HOME_FAX_NUMBER_A: {id: 0x3A25, type: PropertyType.PT_STRING8},\n    // Contains the name of the recipient's country/region. UNICODE compilation.\n    PR_COUNTRY_W: {id: 0x3A26, type: PropertyType.PT_UNICODE},\n    // Contains the name of the recipient's country/region. Non-UNICODE compilation.\n    PR_COUNTRY_A: {id: 0x3A26, type: PropertyType.PT_STRING8},\n    // Contains the name of the recipient's locality, such as the town or city. UNICODE compilation.\n    PR_LOCALITY_W: {id: 0x3A27, type: PropertyType.PT_UNICODE},\n    // Contains the name of the recipient's locality, such as the town or city. Non-UNICODE compilation.\n    PR_LOCALITY_A: {id: 0x3A27, type: PropertyType.PT_STRING8},\n    // Contains the name of the recipient's state or province. UNICODE compilation.\n    PR_STATE_OR_PROVINCE_W: {id: 0x3A28, type: PropertyType.PT_UNICODE},\n    // Contains the name of the recipient's state or province. Non-UNICODE compilation.\n    PR_STATE_OR_PROVINCE_A: {id: 0x3A28, type: PropertyType.PT_STRING8},\n    // Contains the recipient's street address. UNICODE compilation.\n    PR_STREET_ADDRESS_W: {id: 0x3A29, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's street address. Non-UNICODE compilation.\n    PR_STREET_ADDRESS_A: {id: 0x3A29, type: PropertyType.PT_STRING8},\n    // Contains the postal code for the recipient's postal address. UNICODE compilation.\n    PR_POSTAL_CODE_W: {id: 0x3A2A, type: PropertyType.PT_UNICODE},\n    // Contains the postal code for the recipient's postal address. Non-UNICODE compilation.\n    PR_POSTAL_CODE_A: {id: 0x3A2A, type: PropertyType.PT_STRING8},\n    // Contains the number or identifier of the recipient's post office box. UNICODE compilation.\n    PR_POST_OFFICE_BOX_W: {id: 0x3A2B, type: PropertyType.PT_UNICODE},\n    // Contains the number or identifier of the recipient's post office box. Non-UNICODE compilation.\n    PR_POST_OFFICE_BOX_A: {id: 0x3A2B, type: PropertyType.PT_STRING8},\n    // Contains the recipient's telex number. UNICODE compilation.\n    PR_TELEX_NUMBER_W: {id: 0x3A2C, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's telex number. Non-UNICODE compilation.\n    PR_TELEX_NUMBER_A: {id: 0x3A2C, type: PropertyType.PT_STRING8},\n    // Contains the recipient's ISDN-capable telephone number. UNICODE compilation.\n    PR_ISDN_NUMBER_W: {id: 0x3A2D, type: PropertyType.PT_UNICODE},\n    // Contains the recipient's ISDN-capable telephone number. Non-UNICODE compilation.\n    PR_ISDN_NUMBER_A: {id: 0x3A2D, type: PropertyType.PT_STRING8},\n    // Contains the telephone number of the recipient's administrative assistant. UNICODE compilation.\n    PR_ASSISTANT_TELEPHONE_NUMBER_W: {id: 0x3A2E, type: PropertyType.PT_UNICODE},\n    // Contains the telephone number of the recipient's administrative assistant. Non-UNICODE compilation.\n    PR_ASSISTANT_TELEPHONE_NUMBER_A: {id: 0x3A2E, type: PropertyType.PT_STRING8},\n    // Contains a secondary telephone number at the recipient's home. UNICODE compilation.\n    PR_HOME2_TELEPHONE_NUMBER_W: {id: 0x3A2F, type: PropertyType.PT_UNICODE},\n    // Contains a secondary telephone number at the recipient's home. Non-UNICODE compilation.\n    PR_HOME2_TELEPHONE_NUMBER_A: {id: 0x3A2F, type: PropertyType.PT_STRING8},\n    // Contains the name of the recipient's administrative assistant. UNICODE compilation.\n    PR_ASSISTANT_W: {id: 0x3A30, type: PropertyType.PT_UNICODE},\n    // Contains the name of the recipient's administrative assistant. Non-UNICODE compilation.\n    PR_ASSISTANT_A: {id: 0x3A30, type: PropertyType.PT_STRING8},\n    // Contains TRUE if the recipient can receive all message content, including Rich Text Format (RTF) and Object Linking\n    // and Embedding (OLE) objects.\n    PR_SEND_RICH_INFO: {id: 0x3A40, type: PropertyType.PT_BOOLEAN},\n    // Contains a list of identifiers of message store providers in the current profile.\n    PR_STORE_PROVIDERS: {id: 0x3D00, type: PropertyType.PT_BINARY},\n    // Contains a list of identifiers for address book providers in the current profile.\n    PR_AB_PROVIDERS: {id: 0x3D01, type: PropertyType.PT_BINARY},\n    // Contains a list of identifiers of transport providers in the current profile.\n    PR_TRANSPORT_PROVIDERS: {id: 0x3D02, type: PropertyType.PT_BINARY},\n    // Contains TRUE if a messaging user profile is the MAPI default profile.\n    PR_DEFAULT_PROFILE: {id: 0x3D04, type: PropertyType.PT_BOOLEAN},\n    // Contains a list of entry identifiers for address book containers that are to be searched to resolve names.\n    PR_AB_SEARCH_PATH: {id: 0x3D05, type: PropertyType.PT_MV_BINARY},\n    // Contains the entry identifier of the address book container to display first.\n    PR_AB_DEFAULT_DIR: {id: 0x3D06, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of the address book container to use as the personal address book (PAB).\n    PR_AB_DEFAULT_PAB: {id: 0x3D07, type: PropertyType.PT_BINARY},\n    // The MAPI property PR_FILTERING_HOOKS.\n    PR_FILTERING_HOOKS: {id: 0x3D08, type: PropertyType.PT_BINARY},\n    // Contains the unicode name of a message service as set by the user in the MapiSvc.inf file.\n    PR_SERVICE_NAME_W: {id: 0x3D09, type: PropertyType.PT_UNICODE},\n    // Contains the ANSI name of a message service as set by the user in the MapiSvc.inf file.\n    PR_SERVICE_NAME_A: {id: 0x3D09, type: PropertyType.PT_STRING8},\n    // Contains the unicode filename of the DLL containing the message service provider entry point function to call for\n    // configuration.\n    PR_SERVICE_DLL_NAME_W: {id: 0x3D0A, type: PropertyType.PT_UNICODE},\n    // Contains the ANSI filename of the DLL containing the message service provider entry point function to call for\n    // configuration.\n    PR_SERVICE_DLL_NAME_A: {id: 0x3D0A, type: PropertyType.PT_STRING8},\n    // Contains the MAPIUID structure for a message service.\n    PR_SERVICE_UID: {id: 0x3D0C, type: PropertyType.PT_BINARY},\n    // Contains a list of MAPIUID structures that identify additional profile sections for the message service.\n    PR_SERVICE_EXTRA_UIDS: {id: 0x3D0D, type: PropertyType.PT_BINARY},\n    // Contains a list of identifiers of message services in the current profile.\n    PR_SERVICES: {id: 0x3D0E, type: PropertyType.PT_BINARY},\n    // Contains a ANSI list of the files that belong to the message service.\n    PR_SERVICE_SUPPORT_FILES_W: {id: 0x3D0F, type: PropertyType.PT_MV_UNICODE},\n    // Contains a ANSI list of the files that belong to the message service.\n    PR_SERVICE_SUPPORT_FILES_A: {id: 0x3D0F, type: PropertyType.PT_MV_STRING8},\n    // Contains a list of unicode filenames that are to be deleted when the message service is uninstalled.\n    PR_SERVICE_DELETE_FILES_W: {id: 0x3D10, type: PropertyType.PT_MV_UNICODE},\n    // Contains a list of filenames that are to be deleted when the message service is uninstalled.\n    PR_SERVICE_DELETE_FILES_A: {id: 0x3D10, type: PropertyType.PT_MV_STRING8},\n    // Contains a list of entry identifiers for address book containers explicitly configured by the user.\n    PR_AB_SEARCH_PATH_UPDATE: {id: 0x3D11, type: PropertyType.PT_BINARY},\n    // Contains the ANSI name of the profile.\n    PR_PROFILE_NAME_A: {id: 0x3D12, type: PropertyType.PT_STRING8},\n    // Contains the unicode name of the profile.\n    PR_PROFILE_NAME_W: {id: 0x3D12, type: PropertyType.PT_UNICODE},\n    // Contains the display name for a service provider's identity as defined within a messaging system. UNICODE\n    // compilation.\n    PR_IDENTITY_DISPLAY_W: {id: 0x3E00, type: PropertyType.PT_UNICODE},\n    // Contains the display name for a service provider's identity as defined within a messaging system. Non-UNICODE\n    // compilation.\n    PR_IDENTITY_DISPLAY_A: {id: 0x3E00, type: PropertyType.PT_STRING8},\n    // Contains the entry identifier for a service provider's identity as defined within a messaging system.\n    PR_IDENTITY_ENTRYID: {id: 0x3E01, type: PropertyType.PT_BINARY},\n    // Contains a bitmask of flags indicating the methods in the IMAPIStatus interface that are supported by the status\n    // object.\n    PR_RESOURCE_METHODS: {id: 0x3E02, type: PropertyType.PT_LONG},\n    // Contains a value indicating the service provider type.\n    PR_RESOURCE_TYPE: {id: 0x3E03, type: PropertyType.PT_LONG},\n    // Contains a bitmask of flags indicating the current status of a session resource. All service providers set status\n    // codes as does MAPI to report on the status of the subsystem, the MAPI spooler, and the integrated address book.\n    PR_STATUS_CODE: {id: 0x3E04, type: PropertyType.PT_LONG},\n    // Contains the search key for a service provider's identity as defined within a messaging system.\n    PR_IDENTITY_SEARCH_KEY: {id: 0x3E05, type: PropertyType.PT_BINARY},\n    // Contains the entry identifier of a transport's tightly coupled message store.\n    PR_OWN_STORE_ENTRYID: {id: 0x3E06, type: PropertyType.PT_BINARY},\n    // Contains a path to the service provider's server. UNICODE compilation.\n    PR_RESOURCE_PATH_W: {id: 0x3E07, type: PropertyType.PT_UNICODE},\n    // Contains a path to the service provider's server. Non-UNICODE compilation.\n    PR_RESOURCE_PATH_A: {id: 0x3E07, type: PropertyType.PT_STRING8},\n    // Contains an ASCII message indicating the current status of a session resource. UNICODE compilation.\n    PR_STATUS_STRING_W: {id: 0x3E08, type: PropertyType.PT_UNICODE},\n    // Contains an ASCII message indicating the current status of a session resource. Non-UNICODE compilation.\n    PR_STATUS_STRING_A: {id: 0x3E08, type: PropertyType.PT_STRING8},\n    // Was originally meant to contain TRUE if the message transfer system (MTS) allows X.400 deferred delivery\n    // cancellation. No longer supported.\n    PR_X400_DEFERRED_DELIVERY_CANCEL: {id: 0x3E09, type: PropertyType.PT_BOOLEAN},\n    // Was originally meant to contain the entry identifier that a remote transport provider furnishes for its header\n    // folder. No longer supported.\n    PR_HEADER_FOLDER_ENTRYID: {id: 0x3E0A, type: PropertyType.PT_BINARY},\n    // Contains a number indicating the status of a remote transfer.\n    PR_REMOTE_PROGRESS: {id: 0x3E0B, type: PropertyType.PT_LONG},\n    // Contains an ASCII string indicating the status of a remote transfer. UNICODE compilation.\n    PR_REMOTE_PROGRESS_TEXT_W: {id: 0x3E0C, type: PropertyType.PT_UNICODE},\n    // Contains an ASCII string indicating the status of a remote transfer. Non-UNICODE compilation.\n    PR_REMOTE_PROGRESS_TEXT_A: {id: 0x3E0C, type: PropertyType.PT_STRING8},\n    // Contains TRUE if the remote viewer is allowed to call the IMAPIStatus::ValidateState method.\n    PR_REMOTE_VALIDATE_OK: {id: 0x3E0D, type: PropertyType.PT_BOOLEAN},\n    // Contains a bitmask of flags governing the behavior of a control used in a dialog box built from a display table.\n    PR_CONTROL_FLAGS: {id: 0x3F00, type: PropertyType.PT_LONG},\n    // Contains a pointer to a structure for a control used in a dialog box.\n    PR_CONTROL_STRUCTURE: {id: 0x3F01, type: PropertyType.PT_BINARY},\n    // Contains a value indicating a control type for a control used in a dialog box.\n    PR_CONTROL_TYPE: {id: 0x3F02, type: PropertyType.PT_LONG},\n    // Contains the width of a dialog box control in standard Windows dialog units.\n    PR_DELTAX: {id: 0x3F03, type: PropertyType.PT_LONG},\n    // Contains the height of a dialog box control in standard Windows dialog units.\n    PR_DELTAY: {id: 0x3F04, type: PropertyType.PT_LONG},\n    // Contains the x coordinate of the starting position (the upper-left corner) of a dialog box control, in standard\n    // Windows dialog units.\n    PR_XPOS: {id: 0x3F05, type: PropertyType.PT_LONG},\n    // Contains the y coordinate of the starting position (the upper-left corner) of a dialog box control, in standard\n    // Windows dialog units.\n    PR_YPOS: {id: 0x3F06, type: PropertyType.PT_LONG},\n    // Contains a unique identifier for a control used in a dialog box.\n    PR_CONTROL_ID: {id: 0x3F07, type: PropertyType.PT_BINARY},\n    // Indicates the page of a display template to display first.\n    PR_INITIAL_DETAILS_PANE: {id: 0x3F08, type: PropertyType.PT_LONG},\n    // Contains the Windows LCID of the end user who created this message.\n    PR_MESSAGE_LOCALE_ID: {id: 0x3F08, type: PropertyType.PT_LONG},\n    // Indicates the code page used for <see cref=\"PropertyTags.PR_BODY_W\" /> (PidTagBody) or\n    // <see cref=\"PropertyTags.PR_HTML\" /> (PidTagBodyHtml) properties.\n    PR_INTERNET_CPID: {id: 0x3FDE, type: PropertyType.PT_LONG},\n    // The creators address type\n    PR_CreatorAddrType_W: {id: 0x4022, type: PropertyType.PT_UNICODE},\n    // The creators e-mail address\n    PR_CreatorEmailAddr_W: {id: 0x4023, type: PropertyType.PT_UNICODE},\n    // The creators display name\n    PR_CreatorSimpleDispName_W: {id: 0x4038, type: PropertyType.PT_UNICODE},\n    // The senders display name\n    PR_SenderSimpleDispName_W: {id: 0x4030, type: PropertyType.PT_UNICODE},\n    // Indicates the type of Message object to which this attachment is linked.\n    // Must be 0, unless overridden by other protocols that extend the\n    // Message and Attachment Object Protocol as noted in [MS-OXCMSG].\n    PR_ATTACHMENT_LINKID: {id: 0x7FFA, type: PropertyType.PT_LONG},\n    // Indicates special handling for this Attachment object.\n    // Must be 0x00000000, unless overridden by other protocols that extend the Message\n    // and Attachment Object Protocol as noted in [MS-OXCMSG]\n    PR_ATTACHMENT_FLAGS: {id: 0x7FFD, type: PropertyType.PT_LONG},\n    // Indicates whether an attachment is hidden from the end user.\n    PR_ATTACHMENT_HIDDEN: {id: 0x7FFE, type: PropertyType.PT_BOOLEAN},\n    // Specifies the format for an editor to use to display a message.\n    // By default, mail messages (with the message class IPM.Note or with a custom message\n    // class derived from IPM.Note) sent from a POP3/SMTP mail account are sent in the Transport\n    // Neutral Encapsulation Format (TNEF). The PR_MSG_EDITOR_FORMAT property can be used to enforce\n    // only plain text, and not TNEF, when sending a message. If PR_MSG_EDITOR_FORMAT is set to\n    // EDITOR_FORMAT_PLAINTEXT, the message is sent as plain text without TNEF. If PR_MSG_EDITOR_FORMAT\n    // is set to EDITOR_FORMAT_RTF, TNEF encoding is implicitly enabled, and the message is sent by using\n    // the default Internet format that is specified in the Outlook client.\n    PR_MSG_EDITOR_FORMAT: {id: 0x5909, type: PropertyType.PT_LONG},\n})\nexport type PropertyTagsEnum = $Values<typeof PropertyTags>\n","// @flow\n/** https://stackoverflow.com/a/15550284\n * Convert a Microsoft OADate to ECMAScript Date\n * Treat all values as local.\n * OADate = number of days since 30 dec 1899 as a double value\n * @param {string|number} oaDate - OADate value\n * @returns {Date}\n */\nexport function oADateToDate(oaDate: number): Date {\n\t// Treat integer part as whole days\n\tconst days = parseInt(oaDate)\n\t// Treat decimal part as part of 24hr day, always +ve\n\tconst ms = Math.abs((oaDate - days) * 8.64e7)\n\t// Add days and add ms\n\treturn new Date(1899, 11, 30 + days, 0, 0, 0, ms)\n}\n\n\n/** https://stackoverflow.com/a/15550284\n * Convert an ECMAScript Date to a Microsoft OADate\n * Treat all dates as local.\n * @param {Date} date - Date to convert\n * @returns {Date}\n */\nexport function dateToOADate(date: Date): number {\n\tconst temp = new Date(date)\n\t// Set temp to start of day and get whole days between dates,\n\tconst days = Math.round((temp.setHours(0, 0, 0, 0) - new Date(1899, 11, 30)) / 8.64e7)\n\t// Get decimal part of day, OADate always assumes 24 hours in day\n\tconst partDay = (Math.abs((date - temp) % 8.64e7) / 8.64e7)//.toFixed(10)\n\treturn days + partDay//.substr(1)\n}\n\n// Date: milliseconds since 1. January 1970 (UTC)\n// FileTime: unsigned 64 Bit, 100ns units since 1. January 1601 (UTC)\n// ms between 01.01.1970 and 01.01.1601: 11644473600\nexport function fileTimeToDate(fileTimeLower: number, fileTimeUpper: number): Date {\n\t// TODO this was using BigInts in the past\n\t// but flow didn't like it, not sure what the cause for that is\n\tconst lower = fileTimeLower / 1e4\n\tconst upper = (fileTimeUpper * Math.pow(2, 32)) / 1e4\n\treturn new Date(Number(upper + lower - 11644473600))\n}\n\nexport function dateToFileTime(date: Date): {fileTimeLower: number, fileTimeUpper: number} {\n\t// TODO this was also using bigints\n\tconst ns = (date.getTime() + 11644473600) * 1e4\n\tconst fileTimeLower = Number(ns & Number.MAX_SAFE_INTEGER)\n\tconst fileTimeUpper = Number(ns / Math.pow(2, 32))\n\treturn {fileTimeLower, fileTimeUpper}\n}","/*\r\n Copyright 2013 Daniel Wirtz <dcode@dcode.io>\r\n Copyright 2009 The Closure Library Authors. All Rights Reserved.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license long.js (c) 2013 Daniel Wirtz <dcode@dcode.io>\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/long.js for details\r\n */\r\n(function(global, factory) {\r\n\r\n    /* AMD */ if (typeof define === 'function' && define[\"amd\"])\r\n        define([], factory);\r\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === \"object\" && module && module[\"exports\"])\r\n        module[\"exports\"] = factory();\r\n    /* Global */ else\r\n        (global[\"dcodeIO\"] = global[\"dcodeIO\"] || {})[\"Long\"] = factory();\r\n\r\n})(this, function() {\r\n    \"use strict\";\r\n\r\n    /**\r\n     * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n     *  See the from* functions below for more convenient ways of constructing Longs.\r\n     * @exports Long\r\n     * @class A Long class for representing a 64 bit two's-complement integer value.\r\n     * @param {number} low The low (signed) 32 bits of the long\r\n     * @param {number} high The high (signed) 32 bits of the long\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @constructor\r\n     */\r\n    function Long(low, high, unsigned) {\r\n\r\n        /**\r\n         * The low 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.low = low | 0;\r\n\r\n        /**\r\n         * The high 32 bits as a signed value.\r\n         * @type {number}\r\n         */\r\n        this.high = high | 0;\r\n\r\n        /**\r\n         * Whether unsigned or not.\r\n         * @type {boolean}\r\n         */\r\n        this.unsigned = !!unsigned;\r\n    }\r\n\r\n    // The internal representation of a long is the two given signed, 32-bit values.\r\n    // We use 32-bit pieces because these are the size of integers on which\r\n    // Javascript performs bit-operations.  For operations like addition and\r\n    // multiplication, we split each number into 16 bit pieces, which can easily be\r\n    // multiplied within Javascript's floating-point representation without overflow\r\n    // or change in sign.\r\n    //\r\n    // In the algorithms below, we frequently reduce the negative case to the\r\n    // positive case by negating the input(s) and then post-processing the result.\r\n    // Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n    // (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n    // a positive number, it overflows back into a negative).  Not handling this\r\n    // case would often result in infinite recursion.\r\n    //\r\n    // Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n    // methods on which they depend.\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a Long or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @private\r\n     */\r\n    Long.prototype.__isLong__;\r\n\r\n    Object.defineProperty(Long.prototype, \"__isLong__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    /**\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     * @inner\r\n     */\r\n    function isLong(obj) {\r\n        return (obj && obj[\"__isLong__\"]) === true;\r\n    }\r\n\r\n    /**\r\n     * Tests if the specified object is a Long.\r\n     * @function\r\n     * @param {*} obj Object\r\n     * @returns {boolean}\r\n     */\r\n    Long.isLong = isLong;\r\n\r\n    /**\r\n     * A cache of the Long representations of small integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var INT_CACHE = {};\r\n\r\n    /**\r\n     * A cache of the Long representations of small unsigned integer values.\r\n     * @type {!Object}\r\n     * @inner\r\n     */\r\n    var UINT_CACHE = {};\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromInt(value, unsigned) {\r\n        var obj, cachedObj, cache;\r\n        if (unsigned) {\r\n            value >>>= 0;\r\n            if (cache = (0 <= value && value < 256)) {\r\n                cachedObj = UINT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n            if (cache)\r\n                UINT_CACHE[value] = obj;\r\n            return obj;\r\n        } else {\r\n            value |= 0;\r\n            if (cache = (-128 <= value && value < 128)) {\r\n                cachedObj = INT_CACHE[value];\r\n                if (cachedObj)\r\n                    return cachedObj;\r\n            }\r\n            obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n            if (cache)\r\n                INT_CACHE[value] = obj;\r\n            return obj;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given 32 bit integer value.\r\n     * @function\r\n     * @param {number} value The 32 bit integer in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromInt = fromInt;\r\n\r\n    /**\r\n     * @param {number} value\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromNumber(value, unsigned) {\r\n        if (isNaN(value) || !isFinite(value))\r\n            return unsigned ? UZERO : ZERO;\r\n        if (unsigned) {\r\n            if (value < 0)\r\n                return UZERO;\r\n            if (value >= TWO_PWR_64_DBL)\r\n                return MAX_UNSIGNED_VALUE;\r\n        } else {\r\n            if (value <= -TWO_PWR_63_DBL)\r\n                return MIN_VALUE;\r\n            if (value + 1 >= TWO_PWR_63_DBL)\r\n                return MAX_VALUE;\r\n        }\r\n        if (value < 0)\r\n            return fromNumber(-value, unsigned).neg();\r\n        return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n     * @function\r\n     * @param {number} value The number in question\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromNumber = fromNumber;\r\n\r\n    /**\r\n     * @param {number} lowBits\r\n     * @param {number} highBits\r\n     * @param {boolean=} unsigned\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromBits(lowBits, highBits, unsigned) {\r\n        return new Long(lowBits, highBits, unsigned);\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n     *  assumed to use 32 bits.\r\n     * @function\r\n     * @param {number} lowBits The low 32 bits\r\n     * @param {number} highBits The high 32 bits\r\n     * @param {boolean=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromBits = fromBits;\r\n\r\n    /**\r\n     * @function\r\n     * @param {number} base\r\n     * @param {number} exponent\r\n     * @returns {number}\r\n     * @inner\r\n     */\r\n    var pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n    /**\r\n     * @param {string} str\r\n     * @param {(boolean|number)=} unsigned\r\n     * @param {number=} radix\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromString(str, unsigned, radix) {\r\n        if (str.length === 0)\r\n            throw Error('empty string');\r\n        if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n            return ZERO;\r\n        if (typeof unsigned === 'number') {\r\n            // For goog.math.long compatibility\r\n            radix = unsigned,\r\n            unsigned = false;\r\n        } else {\r\n            unsigned = !! unsigned;\r\n        }\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n\r\n        var p;\r\n        if ((p = str.indexOf('-')) > 0)\r\n            throw Error('interior hyphen');\r\n        else if (p === 0) {\r\n            return fromString(str.substring(1), unsigned, radix).neg();\r\n        }\r\n\r\n        // Do several (8) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n        var result = ZERO;\r\n        for (var i = 0; i < str.length; i += 8) {\r\n            var size = Math.min(8, str.length - i),\r\n                value = parseInt(str.substring(i, i + size), radix);\r\n            if (size < 8) {\r\n                var power = fromNumber(pow_dbl(radix, size));\r\n                result = result.mul(power).add(fromNumber(value));\r\n            } else {\r\n                result = result.mul(radixToPower);\r\n                result = result.add(fromNumber(value));\r\n            }\r\n        }\r\n        result.unsigned = unsigned;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Returns a Long representation of the given string, written using the specified radix.\r\n     * @function\r\n     * @param {string} str The textual representation of the Long\r\n     * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to `false` for signed\r\n     * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n     * @returns {!Long} The corresponding Long value\r\n     */\r\n    Long.fromString = fromString;\r\n\r\n    /**\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n     * @returns {!Long}\r\n     * @inner\r\n     */\r\n    function fromValue(val) {\r\n        if (val /* is compatible */ instanceof Long)\r\n            return val;\r\n        if (typeof val === 'number')\r\n            return fromNumber(val);\r\n        if (typeof val === 'string')\r\n            return fromString(val);\r\n        // Throws for non-objects, converts non-instanceof Long:\r\n        return fromBits(val.low, val.high, val.unsigned);\r\n    }\r\n\r\n    /**\r\n     * Converts the specified value to a Long.\r\n     * @function\r\n     * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n     * @returns {!Long}\r\n     */\r\n    Long.fromValue = fromValue;\r\n\r\n    // NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n    // no runtime penalty for these.\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_16_DBL = 1 << 16;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24_DBL = 1 << 24;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n    /**\r\n     * @type {number}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @const\r\n     * @inner\r\n     */\r\n    var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ZERO = fromInt(0);\r\n\r\n    /**\r\n     * Signed zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.ZERO = ZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UZERO = fromInt(0, true);\r\n\r\n    /**\r\n     * Unsigned zero.\r\n     * @type {!Long}\r\n     */\r\n    Long.UZERO = UZERO;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var ONE = fromInt(1);\r\n\r\n    /**\r\n     * Signed one.\r\n     * @type {!Long}\r\n     */\r\n    Long.ONE = ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var UONE = fromInt(1, true);\r\n\r\n    /**\r\n     * Unsigned one.\r\n     * @type {!Long}\r\n     */\r\n    Long.UONE = UONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var NEG_ONE = fromInt(-1);\r\n\r\n    /**\r\n     * Signed negative one.\r\n     * @type {!Long}\r\n     */\r\n    Long.NEG_ONE = NEG_ONE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n    /**\r\n     * Maximum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_VALUE = MAX_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n    /**\r\n     * Maximum unsigned value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n    /**\r\n     * @type {!Long}\r\n     * @inner\r\n     */\r\n    var MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n    /**\r\n     * Minimum signed value.\r\n     * @type {!Long}\r\n     */\r\n    Long.MIN_VALUE = MIN_VALUE;\r\n\r\n    /**\r\n     * @alias Long.prototype\r\n     * @inner\r\n     */\r\n    var LongPrototype = Long.prototype;\r\n\r\n    /**\r\n     * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toInt = function toInt() {\r\n        return this.unsigned ? this.low >>> 0 : this.low;\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.toNumber = function toNumber() {\r\n        if (this.unsigned)\r\n            return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n        return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n    };\r\n\r\n    /**\r\n     * Converts the Long to a string written in the specified radix.\r\n     * @param {number=} radix Radix (2-36), defaults to 10\r\n     * @returns {string}\r\n     * @override\r\n     * @throws {RangeError} If `radix` is out of range\r\n     */\r\n    LongPrototype.toString = function toString(radix) {\r\n        radix = radix || 10;\r\n        if (radix < 2 || 36 < radix)\r\n            throw RangeError('radix');\r\n        if (this.isZero())\r\n            return '0';\r\n        if (this.isNegative()) { // Unsigned Longs are never negative\r\n            if (this.eq(MIN_VALUE)) {\r\n                // We need to change the Long value before it can be negated, so we remove\r\n                // the bottom-most digit in this base and then recurse to do the rest.\r\n                var radixLong = fromNumber(radix),\r\n                    div = this.div(radixLong),\r\n                    rem1 = div.mul(radixLong).sub(this);\r\n                return div.toString(radix) + rem1.toInt().toString(radix);\r\n            } else\r\n                return '-' + this.neg().toString(radix);\r\n        }\r\n\r\n        // Do several (6) digits each time through the loop, so as to\r\n        // minimize the calls to the very expensive emulated div.\r\n        var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n            rem = this;\r\n        var result = '';\r\n        while (true) {\r\n            var remDiv = rem.div(radixToPower),\r\n                intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n                digits = intval.toString(radix);\r\n            rem = remDiv;\r\n            if (rem.isZero())\r\n                return digits + result;\r\n            else {\r\n                while (digits.length < 6)\r\n                    digits = '0' + digits;\r\n                result = '' + digits + result;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as a signed integer.\r\n     * @returns {number} Signed high bits\r\n     */\r\n    LongPrototype.getHighBits = function getHighBits() {\r\n        return this.high;\r\n    };\r\n\r\n    /**\r\n     * Gets the high 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned high bits\r\n     */\r\n    LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n        return this.high >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as a signed integer.\r\n     * @returns {number} Signed low bits\r\n     */\r\n    LongPrototype.getLowBits = function getLowBits() {\r\n        return this.low;\r\n    };\r\n\r\n    /**\r\n     * Gets the low 32 bits as an unsigned integer.\r\n     * @returns {number} Unsigned low bits\r\n     */\r\n    LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n        return this.low >>> 0;\r\n    };\r\n\r\n    /**\r\n     * Gets the number of bits needed to represent the absolute value of this Long.\r\n     * @returns {number}\r\n     */\r\n    LongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n        if (this.isNegative()) // Unsigned Longs are never negative\r\n            return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n        var val = this.high != 0 ? this.high : this.low;\r\n        for (var bit = 31; bit > 0; bit--)\r\n            if ((val & (1 << bit)) != 0)\r\n                break;\r\n        return this.high != 0 ? bit + 33 : bit + 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals zero.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isZero = function isZero() {\r\n        return this.high === 0 && this.low === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is negative.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isNegative = function isNegative() {\r\n        return !this.unsigned && this.high < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is positive.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isPositive = function isPositive() {\r\n        return this.unsigned || this.high >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is odd.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isOdd = function isOdd() {\r\n        return (this.low & 1) === 1;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is even.\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.isEven = function isEven() {\r\n        return (this.low & 1) === 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.equals = function equals(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n            return false;\r\n        return this.high === other.high && this.low === other.low;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.eq = LongPrototype.equals;\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.notEquals = function notEquals(other) {\r\n        return !this.eq(/* validates */ other);\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.neq = LongPrototype.notEquals;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThan = function lessThan(other) {\r\n        return this.comp(/* validates */ other) < 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lt = LongPrototype.lessThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) <= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThan = function greaterThan(other) {\r\n        return this.comp(/* validates */ other) > 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n        return this.comp(/* validates */ other) >= 0;\r\n    };\r\n\r\n    /**\r\n     * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {boolean}\r\n     */\r\n    LongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's.\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.compare = function compare(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        if (this.eq(other))\r\n            return 0;\r\n        var thisNeg = this.isNegative(),\r\n            otherNeg = other.isNegative();\r\n        if (thisNeg && !otherNeg)\r\n            return -1;\r\n        if (!thisNeg && otherNeg)\r\n            return 1;\r\n        // At this point the sign bits are the same\r\n        if (!this.unsigned)\r\n            return this.sub(other).isNegative() ? -1 : 1;\r\n        // Both are positive if at least one is unsigned\r\n        return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n    };\r\n\r\n    /**\r\n     * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n     * @function\r\n     * @param {!Long|number|string} other Other value\r\n     * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n     *  if the given one is greater\r\n     */\r\n    LongPrototype.comp = LongPrototype.compare;\r\n\r\n    /**\r\n     * Negates this Long's value.\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.negate = function negate() {\r\n        if (!this.unsigned && this.eq(MIN_VALUE))\r\n            return MIN_VALUE;\r\n        return this.not().add(ONE);\r\n    };\r\n\r\n    /**\r\n     * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n     * @function\r\n     * @returns {!Long} Negated Long\r\n     */\r\n    LongPrototype.neg = LongPrototype.negate;\r\n\r\n    /**\r\n     * Returns the sum of this and the specified Long.\r\n     * @param {!Long|number|string} addend Addend\r\n     * @returns {!Long} Sum\r\n     */\r\n    LongPrototype.add = function add(addend) {\r\n        if (!isLong(addend))\r\n            addend = fromValue(addend);\r\n\r\n        // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = addend.high >>> 16;\r\n        var b32 = addend.high & 0xFFFF;\r\n        var b16 = addend.low >>> 16;\r\n        var b00 = addend.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 + b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 + b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 + b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 + b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long.\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.subtract = function subtract(subtrahend) {\r\n        if (!isLong(subtrahend))\r\n            subtrahend = fromValue(subtrahend);\r\n        return this.add(subtrahend.neg());\r\n    };\r\n\r\n    /**\r\n     * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n     * @function\r\n     * @param {!Long|number|string} subtrahend Subtrahend\r\n     * @returns {!Long} Difference\r\n     */\r\n    LongPrototype.sub = LongPrototype.subtract;\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long.\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.multiply = function multiply(multiplier) {\r\n        if (this.isZero())\r\n            return ZERO;\r\n        if (!isLong(multiplier))\r\n            multiplier = fromValue(multiplier);\r\n        if (multiplier.isZero())\r\n            return ZERO;\r\n        if (this.eq(MIN_VALUE))\r\n            return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n        if (multiplier.eq(MIN_VALUE))\r\n            return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n        if (this.isNegative()) {\r\n            if (multiplier.isNegative())\r\n                return this.neg().mul(multiplier.neg());\r\n            else\r\n                return this.neg().mul(multiplier).neg();\r\n        } else if (multiplier.isNegative())\r\n            return this.mul(multiplier.neg()).neg();\r\n\r\n        // If both longs are small, use float multiplication\r\n        if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n            return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n        // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n        // We can skip products that would overflow.\r\n\r\n        var a48 = this.high >>> 16;\r\n        var a32 = this.high & 0xFFFF;\r\n        var a16 = this.low >>> 16;\r\n        var a00 = this.low & 0xFFFF;\r\n\r\n        var b48 = multiplier.high >>> 16;\r\n        var b32 = multiplier.high & 0xFFFF;\r\n        var b16 = multiplier.low >>> 16;\r\n        var b00 = multiplier.low & 0xFFFF;\r\n\r\n        var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n        c00 += a00 * b00;\r\n        c16 += c00 >>> 16;\r\n        c00 &= 0xFFFF;\r\n        c16 += a16 * b00;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c16 += a00 * b16;\r\n        c32 += c16 >>> 16;\r\n        c16 &= 0xFFFF;\r\n        c32 += a32 * b00;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a16 * b16;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c32 += a00 * b32;\r\n        c48 += c32 >>> 16;\r\n        c32 &= 0xFFFF;\r\n        c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n        c48 &= 0xFFFF;\r\n        return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n     * @function\r\n     * @param {!Long|number|string} multiplier Multiplier\r\n     * @returns {!Long} Product\r\n     */\r\n    LongPrototype.mul = LongPrototype.multiply;\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n     *  unsigned if this Long is unsigned.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.divide = function divide(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        if (divisor.isZero())\r\n            throw Error('division by zero');\r\n        if (this.isZero())\r\n            return this.unsigned ? UZERO : ZERO;\r\n        var approx, rem, res;\r\n        if (!this.unsigned) {\r\n            // This section is only relevant for signed longs and is derived from the\r\n            // closure library as a whole.\r\n            if (this.eq(MIN_VALUE)) {\r\n                if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                    return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n                else if (divisor.eq(MIN_VALUE))\r\n                    return ONE;\r\n                else {\r\n                    // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                    var halfThis = this.shr(1);\r\n                    approx = halfThis.div(divisor).shl(1);\r\n                    if (approx.eq(ZERO)) {\r\n                        return divisor.isNegative() ? ONE : NEG_ONE;\r\n                    } else {\r\n                        rem = this.sub(divisor.mul(approx));\r\n                        res = approx.add(rem.div(divisor));\r\n                        return res;\r\n                    }\r\n                }\r\n            } else if (divisor.eq(MIN_VALUE))\r\n                return this.unsigned ? UZERO : ZERO;\r\n            if (this.isNegative()) {\r\n                if (divisor.isNegative())\r\n                    return this.neg().div(divisor.neg());\r\n                return this.neg().div(divisor).neg();\r\n            } else if (divisor.isNegative())\r\n                return this.div(divisor.neg()).neg();\r\n            res = ZERO;\r\n        } else {\r\n            // The algorithm below has not been made for unsigned longs. It's therefore\r\n            // required to take special care of the MSB prior to running it.\r\n            if (!divisor.unsigned)\r\n                divisor = divisor.toUnsigned();\r\n            if (divisor.gt(this))\r\n                return UZERO;\r\n            if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n                return UONE;\r\n            res = UZERO;\r\n        }\r\n\r\n        // Repeat the following until the remainder is less than other:  find a\r\n        // floating-point that approximates remainder / other *from below*, add this\r\n        // into the result, and subtract it from the remainder.  It is critical that\r\n        // the approximate value is less than or equal to the real value so that the\r\n        // remainder never becomes negative.\r\n        rem = this;\r\n        while (rem.gte(divisor)) {\r\n            // Approximate the result of division. This may be a little greater or\r\n            // smaller than the actual value.\r\n            approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n            // We will tweak the approximate result by changing it in the 48-th digit or\r\n            // the smallest non-fractional digit, whichever is larger.\r\n            var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n                delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n            // Decrease the approximation until it is smaller than the remainder.  Note\r\n            // that if it is too large, the product overflows and is negative.\r\n                approxRes = fromNumber(approx),\r\n                approxRem = approxRes.mul(divisor);\r\n            while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n                approx -= delta;\r\n                approxRes = fromNumber(approx, this.unsigned);\r\n                approxRem = approxRes.mul(divisor);\r\n            }\r\n\r\n            // We know the answer can't be zero... and actually, zero would cause\r\n            // infinite recursion since we would make no progress.\r\n            if (approxRes.isZero())\r\n                approxRes = ONE;\r\n\r\n            res = res.add(approxRes);\r\n            rem = rem.sub(approxRem);\r\n        }\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Quotient\r\n     */\r\n    LongPrototype.div = LongPrototype.divide;\r\n\r\n    /**\r\n     * Returns this Long modulo the specified.\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.modulo = function modulo(divisor) {\r\n        if (!isLong(divisor))\r\n            divisor = fromValue(divisor);\r\n        return this.sub(this.div(divisor).mul(divisor));\r\n    };\r\n\r\n    /**\r\n     * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n     * @function\r\n     * @param {!Long|number|string} divisor Divisor\r\n     * @returns {!Long} Remainder\r\n     */\r\n    LongPrototype.mod = LongPrototype.modulo;\r\n\r\n    /**\r\n     * Returns the bitwise NOT of this Long.\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.not = function not() {\r\n        return fromBits(~this.low, ~this.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise AND of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.and = function and(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise OR of this Long and the specified.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.or = function or(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns the bitwise XOR of this Long and the given one.\r\n     * @param {!Long|number|string} other Other Long\r\n     * @returns {!Long}\r\n     */\r\n    LongPrototype.xor = function xor(other) {\r\n        if (!isLong(other))\r\n            other = fromValue(other);\r\n        return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n        else\r\n            return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRight = function shiftRight(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        if ((numBits &= 63) === 0)\r\n            return this;\r\n        else if (numBits < 32)\r\n            return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n        else\r\n            return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount.\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n        if (isLong(numBits))\r\n            numBits = numBits.toInt();\r\n        numBits &= 63;\r\n        if (numBits === 0)\r\n            return this;\r\n        else {\r\n            var high = this.high;\r\n            if (numBits < 32) {\r\n                var low = this.low;\r\n                return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n            } else if (numBits === 32)\r\n                return fromBits(high, 0, this.unsigned);\r\n            else\r\n                return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n     * @function\r\n     * @param {number|!Long} numBits Number of bits\r\n     * @returns {!Long} Shifted Long\r\n     */\r\n    LongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n    /**\r\n     * Converts this Long to signed.\r\n     * @returns {!Long} Signed long\r\n     */\r\n    LongPrototype.toSigned = function toSigned() {\r\n        if (!this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, false);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to unsigned.\r\n     * @returns {!Long} Unsigned long\r\n     */\r\n    LongPrototype.toUnsigned = function toUnsigned() {\r\n        if (this.unsigned)\r\n            return this;\r\n        return fromBits(this.low, this.high, true);\r\n    };\r\n\r\n    /**\r\n     * Converts this Long to its byte representation.\r\n     * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n     * @returns {!Array.<number>} Byte representation\r\n     */\r\n    LongPrototype.toBytes = function(le) {\r\n        return le ? this.toBytesLE() : this.toBytesBE();\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its little endian byte representation.\r\n     * @returns {!Array.<number>} Little endian byte representation\r\n     */\r\n    LongPrototype.toBytesLE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n             lo         & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n             hi         & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>> 24) & 0xff\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts this Long to its big endian byte representation.\r\n     * @returns {!Array.<number>} Big endian byte representation\r\n     */\r\n    LongPrototype.toBytesBE = function() {\r\n        var hi = this.high,\r\n            lo = this.low;\r\n        return [\r\n            (hi >>> 24) & 0xff,\r\n            (hi >>> 16) & 0xff,\r\n            (hi >>>  8) & 0xff,\r\n             hi         & 0xff,\r\n            (lo >>> 24) & 0xff,\r\n            (lo >>> 16) & 0xff,\r\n            (lo >>>  8) & 0xff,\r\n             lo         & 0xff\r\n        ];\r\n    }\r\n\r\n    return Long;\r\n});\r\n","/*\r\n Copyright 2013-2014 Daniel Wirtz <dcode@dcode.io>\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n */\r\n\r\n/**\r\n * @license bytebuffer.js (c) 2015 Daniel Wirtz <dcode@dcode.io>\r\n * Backing buffer / Accessor: node Buffer\r\n * Released under the Apache License, Version 2.0\r\n * see: https://github.com/dcodeIO/bytebuffer.js for details\r\n */\r\nmodule.exports = (function() {\r\n    \"use strict\";\r\n\r\n    var buffer = require(\"buffer\"),\r\n        Buffer = buffer[\"Buffer\"],\r\n        Long = require(\"long\"),\r\n        memcpy = null; try { memcpy = require(\"memcpy\"); } catch (e) {}\r\n\r\n    /**\r\n     * Constructs a new ByteBuffer.\r\n     * @class The swiss army knife for binary data in JavaScript.\r\n     * @exports ByteBuffer\r\n     * @constructor\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @expose\r\n     */\r\n    var ByteBuffer = function(capacity, littleEndian, noAssert) {\r\n        if (typeof capacity === 'undefined')\r\n            capacity = ByteBuffer.DEFAULT_CAPACITY;\r\n        if (typeof littleEndian === 'undefined')\r\n            littleEndian = ByteBuffer.DEFAULT_ENDIAN;\r\n        if (typeof noAssert === 'undefined')\r\n            noAssert = ByteBuffer.DEFAULT_NOASSERT;\r\n        if (!noAssert) {\r\n            capacity = capacity | 0;\r\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity\");\r\n            littleEndian = !!littleEndian;\r\n            noAssert = !!noAssert;\r\n        }\r\n\r\n        /**\r\n         * Backing node Buffer.\r\n         * @type {!Buffer}\r\n         * @expose\r\n         */\r\n        this.buffer = capacity === 0 ? EMPTY_BUFFER : new Buffer(capacity);\r\n\r\n        /**\r\n         * Absolute read/write offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.offset = 0;\r\n\r\n        /**\r\n         * Marked offset.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#mark\r\n         * @see ByteBuffer#reset\r\n         */\r\n        this.markedOffset = -1;\r\n\r\n        /**\r\n         * Absolute limit of the contained data. Set to the backing buffer's capacity upon allocation.\r\n         * @type {number}\r\n         * @expose\r\n         * @see ByteBuffer#flip\r\n         * @see ByteBuffer#clear\r\n         */\r\n        this.limit = capacity;\r\n\r\n        /**\r\n         * Whether to use little endian byte order, defaults to `false` for big endian.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.littleEndian = littleEndian;\r\n\r\n        /**\r\n         * Whether to skip assertions of offsets and values, defaults to `false`.\r\n         * @type {boolean}\r\n         * @expose\r\n         */\r\n        this.noAssert = noAssert;\r\n    };\r\n\r\n    /**\r\n     * ByteBuffer version.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.VERSION = \"5.0.1\";\r\n\r\n    /**\r\n     * Little endian constant that can be used instead of its boolean value. Evaluates to `true`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.LITTLE_ENDIAN = true;\r\n\r\n    /**\r\n     * Big endian constant that can be used instead of its boolean value. Evaluates to `false`.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.BIG_ENDIAN = false;\r\n\r\n    /**\r\n     * Default initial capacity of `16`.\r\n     * @type {number}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_CAPACITY = 16;\r\n\r\n    /**\r\n     * Default endianess of `false` for big endian.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_ENDIAN = ByteBuffer.BIG_ENDIAN;\r\n\r\n    /**\r\n     * Default no assertions flag of `false`.\r\n     * @type {boolean}\r\n     * @expose\r\n     */\r\n    ByteBuffer.DEFAULT_NOASSERT = false;\r\n\r\n    /**\r\n     * A `Long` class for representing a 64-bit two's-complement integer value.\r\n     * @type {!Long}\r\n     * @const\r\n     * @see https://npmjs.org/package/long\r\n     * @expose\r\n     */\r\n    ByteBuffer.Long = Long;\r\n\r\n    /**\r\n     * @alias ByteBuffer.prototype\r\n     * @inner\r\n     */\r\n    var ByteBufferPrototype = ByteBuffer.prototype;\r\n\r\n    /**\r\n     * An indicator used to reliably determine if an object is a ByteBuffer or not.\r\n     * @type {boolean}\r\n     * @const\r\n     * @expose\r\n     * @private\r\n     */\r\n    ByteBufferPrototype.__isByteBuffer__;\r\n\r\n    Object.defineProperty(ByteBufferPrototype, \"__isByteBuffer__\", {\r\n        value: true,\r\n        enumerable: false,\r\n        configurable: false\r\n    });\r\n\r\n    // helpers\r\n\r\n    /**\r\n     * @type {!Buffer}\r\n     * @inner\r\n     */\r\n    var EMPTY_BUFFER = new Buffer(0);\r\n\r\n    /**\r\n     * String.fromCharCode reference for compile-time renaming.\r\n     * @type {function(...number):string}\r\n     * @inner\r\n     */\r\n    var stringFromCharCode = String.fromCharCode;\r\n\r\n    /**\r\n     * Creates a source function for a string.\r\n     * @param {string} s String to read from\r\n     * @returns {function():number|null} Source function returning the next char code respectively `null` if there are\r\n     *  no more characters left.\r\n     * @throws {TypeError} If the argument is invalid\r\n     * @inner\r\n     */\r\n    function stringSource(s) {\r\n        var i=0; return function() {\r\n            return i < s.length ? s.charCodeAt(i++) : null;\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Creates a destination function for a string.\r\n     * @returns {function(number=):undefined|string} Destination function successively called with the next char code.\r\n     *  Returns the final string when called without arguments.\r\n     * @inner\r\n     */\r\n    function stringDestination() {\r\n        var cs = [], ps = []; return function() {\r\n            if (arguments.length === 0)\r\n                return ps.join('')+stringFromCharCode.apply(String, cs);\r\n            if (cs.length + arguments.length > 1024)\r\n                ps.push(stringFromCharCode.apply(String, cs)),\r\n                    cs.length = 0;\r\n            Array.prototype.push.apply(cs, arguments);\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets the accessor type.\r\n     * @returns {Function} `Buffer` under node.js, `Uint8Array` respectively `DataView` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.accessor = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Allocates a new ByteBuffer backed by a buffer of the specified capacity.\r\n     * @param {number=} capacity Initial capacity. Defaults to {@link ByteBuffer.DEFAULT_CAPACITY}.\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBuffer.allocate = function(capacity, littleEndian, noAssert) {\r\n        return new ByteBuffer(capacity, littleEndian, noAssert);\r\n    };\r\n\r\n    /**\r\n     * Concatenates multiple ByteBuffers into one.\r\n     * @param {!Array.<!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string>} buffers Buffers to concatenate\r\n     * @param {(string|boolean)=} encoding String encoding if `buffers` contains a string (\"base64\", \"hex\", \"binary\",\r\n     *  defaults to \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order for the resulting ByteBuffer. Defaults\r\n     *  to {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values for the resulting ByteBuffer. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} Concatenated ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.concat = function(buffers, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding === 'boolean' || typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var capacity = 0;\r\n        for (var i=0, k=buffers.length, length; i<k; ++i) {\r\n            if (!ByteBuffer.isByteBuffer(buffers[i]))\r\n                buffers[i] = ByteBuffer.wrap(buffers[i], encoding);\r\n            length = buffers[i].limit - buffers[i].offset;\r\n            if (length > 0) capacity += length;\r\n        }\r\n        if (capacity === 0)\r\n            return new ByteBuffer(0, littleEndian, noAssert);\r\n        var bb = new ByteBuffer(capacity, littleEndian, noAssert),\r\n            bi;\r\n        i=0; while (i<k) {\r\n            bi = buffers[i++];\r\n            length = bi.limit - bi.offset;\r\n            if (length <= 0) continue;\r\n            bi.buffer.copy(bb.buffer, bb.offset, bi.offset, bi.limit);\r\n            bb.offset += length;\r\n        }\r\n        bb.limit = bb.offset;\r\n        bb.offset = 0;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Tests if the specified type is a ByteBuffer.\r\n     * @param {*} bb ByteBuffer to test\r\n     * @returns {boolean} `true` if it is a ByteBuffer, otherwise `false`\r\n     * @expose\r\n     */\r\n    ByteBuffer.isByteBuffer = function(bb) {\r\n        return (bb && bb[\"__isByteBuffer__\"]) === true;\r\n    };\r\n    /**\r\n     * Gets the backing buffer type.\r\n     * @returns {Function} `Buffer` under node.js, `ArrayBuffer` in the browser (classes)\r\n     * @expose\r\n     */\r\n    ByteBuffer.type = function() {\r\n        return Buffer;\r\n    };\r\n    /**\r\n     * Wraps a buffer or a string. Sets the allocated ByteBuffer's {@link ByteBuffer#offset} to `0` and its\r\n     *  {@link ByteBuffer#limit} to the length of the wrapped data.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string|!Array.<number>} buffer Anything that can be wrapped\r\n     * @param {(string|boolean)=} encoding String encoding if `buffer` is a string (\"base64\", \"hex\", \"binary\", defaults to\r\n     *  \"utf8\")\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} A ByteBuffer wrapping `buffer`\r\n     * @expose\r\n     */\r\n    ByteBuffer.wrap = function(buffer, encoding, littleEndian, noAssert) {\r\n        if (typeof encoding !== 'string') {\r\n            noAssert = littleEndian;\r\n            littleEndian = encoding;\r\n            encoding = undefined;\r\n        }\r\n        if (typeof buffer === 'string') {\r\n            if (typeof encoding === 'undefined')\r\n                encoding = \"utf8\";\r\n            switch (encoding) {\r\n                case \"base64\":\r\n                    return ByteBuffer.fromBase64(buffer, littleEndian);\r\n                case \"hex\":\r\n                    return ByteBuffer.fromHex(buffer, littleEndian);\r\n                case \"binary\":\r\n                    return ByteBuffer.fromBinary(buffer, littleEndian);\r\n                case \"utf8\":\r\n                    return ByteBuffer.fromUTF8(buffer, littleEndian);\r\n                case \"debug\":\r\n                    return ByteBuffer.fromDebug(buffer, littleEndian);\r\n                default:\r\n                    throw Error(\"Unsupported encoding: \"+encoding);\r\n            }\r\n        }\r\n        if (buffer === null || typeof buffer !== 'object')\r\n            throw TypeError(\"Illegal buffer\");\r\n        var bb;\r\n        if (ByteBuffer.isByteBuffer(buffer)) {\r\n            bb = ByteBufferPrototype.clone.call(buffer);\r\n            bb.markedOffset = -1;\r\n            return bb;\r\n        }\r\n        var i = 0,\r\n            k = 0,\r\n            b;\r\n        if (buffer instanceof Uint8Array) { // Extract bytes from Uint8Array\r\n            b = new Buffer(buffer.length);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer.buffer, buffer.byteOffset, buffer.byteOffset + buffer.length);\r\n            } else { // Slow\r\n                for (i=0, k=buffer.length; i<k; ++i)\r\n                    b[i] = buffer[i];\r\n            }\r\n            buffer = b;\r\n        } else if (buffer instanceof ArrayBuffer) { // Convert ArrayBuffer to Buffer\r\n            b = new Buffer(buffer.byteLength);\r\n            if (memcpy) { // Fast\r\n                memcpy(b, 0, buffer, 0, buffer.byteLength);\r\n            } else { // Slow\r\n                buffer = new Uint8Array(buffer);\r\n                for (i=0, k=buffer.length; i<k; ++i) {\r\n                    b[i] = buffer[i];\r\n                }\r\n            }\r\n            buffer = b;\r\n        } else if (!(buffer instanceof Buffer)) { // Create from octets if it is an error, otherwise fail\r\n            if (Object.prototype.toString.call(buffer) !== \"[object Array]\")\r\n                throw TypeError(\"Illegal buffer\");\r\n            buffer = new Buffer(buffer);\r\n        }\r\n        bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        if (buffer.length > 0) { // Avoid references to more than one EMPTY_BUFFER\r\n            bb.buffer = buffer;\r\n            bb.limit = buffer.length;\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Writes the array as a bitset.\r\n     * @param {Array<boolean>} value Array of booleans to write\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBitSet = function(value, offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n      if (!this.noAssert) {\r\n        if (!(value instanceof Array))\r\n          throw TypeError(\"Illegal BitSet: Not an array\");\r\n        if (typeof offset !== 'number' || offset % 1 !== 0)\n            throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n        offset >>>= 0;\n        if (offset < 0 || offset + 0 > this.buffer.length)\n            throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n      }\r\n\r\n      var start = offset,\r\n          bits = value.length,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          k;\r\n\r\n      offset += this.writeVarint32(bits,offset);\r\n\r\n      while(bytes--) {\r\n        k = (!!value[bit++] & 1) |\r\n            ((!!value[bit++] & 1) << 1) |\r\n            ((!!value[bit++] & 1) << 2) |\r\n            ((!!value[bit++] & 1) << 3) |\r\n            ((!!value[bit++] & 1) << 4) |\r\n            ((!!value[bit++] & 1) << 5) |\r\n            ((!!value[bit++] & 1) << 6) |\r\n            ((!!value[bit++] & 1) << 7);\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0; k = 0;\r\n        while(bit < bits) k = k | ((!!value[bit++] & 1) << (m++));\r\n        this.writeByte(k,offset++);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n        return this;\r\n      }\r\n      return offset - start;\r\n    }\r\n\r\n    /**\r\n     * Reads a BitSet as an array of booleans.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {Array<boolean>\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBitSet = function(offset) {\r\n      var relative = typeof offset === 'undefined';\n      if (relative) offset = this.offset;\n\r\n      var ret = this.readVarint32(offset),\r\n          bits = ret.value,\r\n          bytes = (bits >> 3),\r\n          bit = 0,\r\n          value = [],\r\n          k;\r\n\r\n      offset += ret.length;\r\n\r\n      while(bytes--) {\r\n        k = this.readByte(offset++);\r\n        value[bit++] = !!(k & 0x01);\r\n        value[bit++] = !!(k & 0x02);\r\n        value[bit++] = !!(k & 0x04);\r\n        value[bit++] = !!(k & 0x08);\r\n        value[bit++] = !!(k & 0x10);\r\n        value[bit++] = !!(k & 0x20);\r\n        value[bit++] = !!(k & 0x40);\r\n        value[bit++] = !!(k & 0x80);\r\n      }\r\n\r\n      if(bit < bits) {\r\n        var m = 0;\r\n        k = this.readByte(offset++);\r\n        while(bit < bits) value[bit++] = !!((k >> (m++)) & 1);\r\n      }\r\n\r\n      if (relative) {\r\n        this.offset = offset;\r\n      }\r\n      return value;\r\n    }\r\n    /**\r\n     * Reads the specified number of bytes.\r\n     * @param {number} length Number of bytes to read\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `length` if omitted.\r\n     * @returns {!ByteBuffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readBytes = function(length, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + length > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n        }\r\n        var slice = this.slice(offset, offset + length);\r\n        if (relative) this.offset += length;\n        return slice;\r\n    };\r\n\r\n    /**\r\n     * Writes a payload of bytes. This is an alias of {@link ByteBuffer#append}.\r\n     * @function\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to write. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeBytes = ByteBufferPrototype.append;\r\n\r\n    // types/ints/int8\r\n\r\n    /**\r\n     * Writes an 8bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity0 = this.buffer.length;\n        if (offset > capacity0)\n            this.resize((capacity0 *= 2) > offset ? capacity0 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit signed integer. This is an alias of {@link ByteBuffer#writeInt8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeByte = ByteBufferPrototype.writeInt8;\r\n\r\n    /**\r\n     * Reads an 8bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if ((value & 0x80) === 0x80) value = -(0xFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit signed integer. This is an alias of {@link ByteBuffer#readInt8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readByte = ByteBufferPrototype.readInt8;\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint8 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 1;\n        var capacity1 = this.buffer.length;\n        if (offset > capacity1)\n            this.resize((capacity1 *= 2) > offset ? capacity1 : offset);\n        offset -= 1;\n        this.buffer[offset] = value;\r\n        if (relative) this.offset += 1;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes an 8bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint8}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt8 = ByteBufferPrototype.writeUint8;\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint8 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.buffer[offset];\r\n        if (relative) this.offset += 1;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads an 8bit unsigned integer. This is an alias of {@link ByteBuffer#readUint8}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `1` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt8 = ByteBufferPrototype.readUint8;\r\n\r\n    // types/ints/int16\r\n\r\n    /**\r\n     * Writes a 16bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity2 = this.buffer.length;\n        if (offset > capacity2)\n            this.resize((capacity2 *= 2) > offset ? capacity2 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit signed integer. This is an alias of {@link ByteBuffer#writeInt16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeShort = ByteBufferPrototype.writeInt16;\r\n\r\n    /**\r\n     * Reads a 16bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if ((value & 0x8000) === 0x8000) value = -(0xFFFF - value + 1); // Cast to signed\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit signed integer. This is an alias of {@link ByteBuffer#readInt16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readShort = ByteBufferPrototype.readInt16;\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint16 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 2;\n        var capacity3 = this.buffer.length;\n        if (offset > capacity3)\n            this.resize((capacity3 *= 2) > offset ? capacity3 : offset);\n        offset -= 2;\n        if (this.littleEndian) {\r\n            this.buffer[offset+1] = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset  ] =  value & 0x00FF;\r\n        } else {\r\n            this.buffer[offset]   = (value & 0xFF00) >>> 8;\r\n            this.buffer[offset+1] =  value & 0x00FF;\r\n        }\r\n        if (relative) this.offset += 2;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 16bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint16}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @throws {TypeError} If `offset` or `value` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt16 = ByteBufferPrototype.writeUint16;\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint16 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 2 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+2+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\r\n            value  = this.buffer[offset  ];\r\n            value |= this.buffer[offset+1] << 8;\r\n        } else {\r\n            value  = this.buffer[offset  ] << 8;\r\n            value |= this.buffer[offset+1];\r\n        }\r\n        if (relative) this.offset += 2;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 16bit unsigned integer. This is an alias of {@link ByteBuffer#readUint16}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `2` if omitted.\r\n     * @returns {number} Value read\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt16 = ByteBufferPrototype.readUint16;\r\n\r\n    // types/ints/int32\r\n\r\n    /**\r\n     * Writes a 32bit signed integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity4 = this.buffer.length;\n        if (offset > capacity4)\n            this.resize((capacity4 *= 2) > offset ? capacity4 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit signed integer. This is an alias of {@link ByteBuffer#writeInt32}.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeInt = ByteBufferPrototype.writeInt32;\r\n\r\n    /**\r\n     * Reads a 32bit signed integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        value |= 0; // Cast to signed\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit signed integer. This is an alias of {@link ByteBuffer#readInt32}.\r\n     * @param {number=} offset Offset to read from. Will use and advance {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readInt = ByteBufferPrototype.readInt32;\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value >>>= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity5 = this.buffer.length;\n        if (offset > capacity5)\n            this.resize((capacity5 *= 2) > offset ? capacity5 : offset);\n        offset -= 4;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (value >>> 24) & 0xFF;\n            this.buffer[offset+2] = (value >>> 16) & 0xFF;\n            this.buffer[offset+1] = (value >>>  8) & 0xFF;\n            this.buffer[offset  ] =  value         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (value >>> 24) & 0xFF;\n            this.buffer[offset+1] = (value >>> 16) & 0xFF;\n            this.buffer[offset+2] = (value >>>  8) & 0xFF;\n            this.buffer[offset+3] =  value         & 0xFF;\n        }\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUInt32 = ByteBufferPrototype.writeUint32;\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = 0;\r\n        if (this.littleEndian) {\n            value  = this.buffer[offset+2] << 16;\n            value |= this.buffer[offset+1] <<  8;\n            value |= this.buffer[offset  ];\n            value += this.buffer[offset+3] << 24 >>> 0;\n        } else {\n            value  = this.buffer[offset+1] << 16;\n            value |= this.buffer[offset+2] <<  8;\n            value |= this.buffer[offset+3];\n            value += this.buffer[offset  ] << 24 >>> 0;\n        }\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit unsigned integer. This is an alias of {@link ByteBuffer#readUint32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number} Value read\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUInt32 = ByteBufferPrototype.readUint32;\r\n\r\n    // types/ints/int64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Writes a 64bit signed integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeInt64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity6 = this.buffer.length;\n            if (offset > capacity6)\n                this.resize((capacity6 *= 2) > offset ? capacity6 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit signed integer. This is an alias of {@link ByteBuffer#writeInt64}.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeLong = ByteBufferPrototype.writeInt64;\r\n\r\n        /**\r\n         * Reads a 64bit signed integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readInt64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, false);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit signed integer. This is an alias of {@link ByteBuffer#readInt64}.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readLong = ByteBufferPrototype.readInt64;\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer.\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            offset += 8;\n            var capacity7 = this.buffer.length;\n            if (offset > capacity7)\n                this.resize((capacity7 *= 2) > offset ? capacity7 : offset);\n            offset -= 8;\n            var lo = value.low,\r\n                hi = value.high;\r\n            if (this.littleEndian) {\r\n                this.buffer[offset+3] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+2] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+1] = (lo >>>  8) & 0xFF;\n                this.buffer[offset  ] =  lo         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset+3] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+2] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+1] = (hi >>>  8) & 0xFF;\n                this.buffer[offset  ] =  hi         & 0xFF;\n            } else {\r\n                this.buffer[offset  ] = (hi >>> 24) & 0xFF;\n                this.buffer[offset+1] = (hi >>> 16) & 0xFF;\n                this.buffer[offset+2] = (hi >>>  8) & 0xFF;\n                this.buffer[offset+3] =  hi         & 0xFF;\n                offset += 4;\r\n                this.buffer[offset  ] = (lo >>> 24) & 0xFF;\n                this.buffer[offset+1] = (lo >>> 16) & 0xFF;\n                this.buffer[offset+2] = (lo >>>  8) & 0xFF;\n                this.buffer[offset+3] =  lo         & 0xFF;\n            }\r\n            if (relative) this.offset += 8;\n            return this;\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit unsigned integer. This is an alias of {@link ByteBuffer#writeUint64}.\r\n         * @function\r\n         * @param {number|!Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!ByteBuffer} this\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeUInt64 = ByteBufferPrototype.writeUint64;\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 8 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n            }\r\n            var lo = 0,\r\n                hi = 0;\r\n            if (this.littleEndian) {\r\n                lo  = this.buffer[offset+2] << 16;\n                lo |= this.buffer[offset+1] <<  8;\n                lo |= this.buffer[offset  ];\n                lo += this.buffer[offset+3] << 24 >>> 0;\n                offset += 4;\r\n                hi  = this.buffer[offset+2] << 16;\n                hi |= this.buffer[offset+1] <<  8;\n                hi |= this.buffer[offset  ];\n                hi += this.buffer[offset+3] << 24 >>> 0;\n            } else {\r\n                hi  = this.buffer[offset+1] << 16;\n                hi |= this.buffer[offset+2] <<  8;\n                hi |= this.buffer[offset+3];\n                hi += this.buffer[offset  ] << 24 >>> 0;\n                offset += 4;\r\n                lo  = this.buffer[offset+1] << 16;\n                lo |= this.buffer[offset+2] <<  8;\n                lo |= this.buffer[offset+3];\n                lo += this.buffer[offset  ] << 24 >>> 0;\n            }\r\n            var value = new Long(lo, hi, true);\r\n            if (relative) this.offset += 8;\n            return value;\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit unsigned integer. This is an alias of {@link ByteBuffer#readUint64}.\r\n         * @function\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n         * @returns {!Long}\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readUInt64 = ByteBufferPrototype.readUint64;\r\n\r\n    } // Long\r\n\r\n\r\n    // types/floats/float32\r\n\r\n    /**\r\n     * Writes a 32bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 4;\n        var capacity8 = this.buffer.length;\n        if (offset > capacity8)\n            this.resize((capacity8 *= 2) > offset ? capacity8 : offset);\n        offset -= 4;\n        this.littleEndian\r\n            ? this.buffer.writeFloatLE(value, offset, true)\r\n            : this.buffer.writeFloatBE(value, offset, true);\r\n        if (relative) this.offset += 4;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit float. This is an alias of {@link ByteBuffer#writeFloat32}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat = ByteBufferPrototype.writeFloat32;\r\n\r\n    /**\r\n     * Reads a 32bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readFloatLE(offset, true)\r\n            : this.buffer.readFloatBE(offset, true);\r\n        if (relative) this.offset += 4;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit float. This is an alias of {@link ByteBuffer#readFloat32}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `4` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat = ByteBufferPrototype.readFloat32;\r\n\r\n    // types/floats/float64\r\n\r\n    /**\r\n     * Writes a 64bit float.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeFloat64 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number')\r\n                throw TypeError(\"Illegal value: \"+value+\" (not a number)\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        offset += 8;\n        var capacity9 = this.buffer.length;\n        if (offset > capacity9)\n            this.resize((capacity9 *= 2) > offset ? capacity9 : offset);\n        offset -= 8;\n        this.littleEndian\r\n            ? this.buffer.writeDoubleLE(value, offset, true)\r\n            : this.buffer.writeDoubleBE(value, offset, true);\r\n        if (relative) this.offset += 8;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Writes a 64bit float. This is an alias of {@link ByteBuffer#writeFloat64}.\r\n     * @function\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeDouble = ByteBufferPrototype.writeFloat64;\r\n\r\n    /**\r\n     * Reads a 64bit float.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readFloat64 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 8 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+8+\") <= \"+this.buffer.length);\n        }\r\n        var value = this.littleEndian\r\n            ? this.buffer.readDoubleLE(offset, true)\r\n            : this.buffer.readDoubleBE(offset, true);\r\n        if (relative) this.offset += 8;\n        return value;\r\n    };\r\n\r\n    /**\r\n     * Reads a 64bit float. This is an alias of {@link ByteBuffer#readFloat64}.\r\n     * @function\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by `8` if omitted.\r\n     * @returns {number}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readDouble = ByteBufferPrototype.readFloat64;\r\n\r\n\r\n    // types/varints/varint32\r\n\r\n    /**\r\n     * Maximum number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @type {number}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.MAX_VARINT32_BYTES = 5;\r\n\r\n    /**\r\n     * Calculates the actual number of bytes required to store a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to encode\r\n     * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT32_BYTES}\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateVarint32 = function(value) {\r\n        // ref: src/google/protobuf/io/coded_stream.cc\r\n        value = value >>> 0;\r\n             if (value < 1 << 7 ) return 1;\r\n        else if (value < 1 << 14) return 2;\r\n        else if (value < 1 << 21) return 3;\r\n        else if (value < 1 << 28) return 4;\r\n        else                      return 5;\r\n    };\r\n\r\n    /**\r\n     * Zigzag encodes a signed 32bit integer so that it can be effectively used with varint encoding.\r\n     * @param {number} n Signed 32bit integer\r\n     * @returns {number} Unsigned zigzag encoded 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagEncode32 = function(n) {\r\n        return (((n |= 0) << 1) ^ (n >> 31)) >>> 0; // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Decodes a zigzag encoded signed 32bit integer.\r\n     * @param {number} n Unsigned zigzag encoded 32bit integer\r\n     * @returns {number} Signed 32bit integer\r\n     * @expose\r\n     */\r\n    ByteBuffer.zigZagDecode32 = function(n) {\r\n        return ((n >>> 1) ^ -(n & 1)) | 0; // // ref: src/google/protobuf/wire_format_lite.h\r\n    };\r\n\r\n    /**\r\n     * Writes a 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32 = function(value, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var size = ByteBuffer.calculateVarint32(value),\r\n            b;\r\n        offset += size;\n        var capacity10 = this.buffer.length;\n        if (offset > capacity10)\n            this.resize((capacity10 *= 2) > offset ? capacity10 : offset);\n        offset -= size;\n        value >>>= 0;\r\n        while (value >= 0x80) {\r\n            b = (value & 0x7f) | 0x80;\r\n            this.buffer[offset++] = b;\r\n            value >>>= 7;\r\n        }\r\n        this.buffer[offset++] = value;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return size;\r\n    };\r\n\r\n    /**\r\n     * Writes a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number} value Value to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} this if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeVarint32ZigZag = function(value, offset) {\r\n        return this.writeVarint32(ByteBuffer.zigZagEncode32(value), offset);\r\n    };\r\n\r\n    /**\r\n     * Reads a 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint. Has a property `truncated = true` if there is not enough data available\r\n     *  to fully decode the varint.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32 = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var c = 0,\r\n            value = 0 >>> 0,\r\n            b;\r\n        do {\r\n            if (!this.noAssert && offset > this.limit) {\r\n                var err = Error(\"Truncated\");\r\n                err['truncated'] = true;\r\n                throw err;\r\n            }\r\n            b = this.buffer[offset++];\r\n            if (c < 5)\r\n                value |= (b & 0x7f) << (7*c);\r\n            ++c;\r\n        } while ((b & 0x80) !== 0);\r\n        value |= 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return value;\r\n        }\r\n        return {\r\n            \"value\": value,\r\n            \"length\": c\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Reads a zig-zag encoded (signed) 32bit base 128 variable-length integer.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {number|!{value: number, length: number}} The value read if offset is omitted, else the value read\r\n     *  and the actual number of bytes read.\r\n     * @throws {Error} If it's not a valid varint\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readVarint32ZigZag = function(offset) {\r\n        var val = this.readVarint32(offset);\r\n        if (typeof val === 'object')\r\n            val[\"value\"] = ByteBuffer.zigZagDecode32(val[\"value\"]);\r\n        else\r\n            val = ByteBuffer.zigZagDecode32(val);\r\n        return val;\r\n    };\r\n\r\n    // types/varints/varint64\r\n\r\n    if (Long) {\r\n\r\n        /**\r\n         * Maximum number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @type {number}\r\n         * @const\r\n         * @expose\r\n         */\r\n        ByteBuffer.MAX_VARINT64_BYTES = 10;\r\n\r\n        /**\r\n         * Calculates the actual number of bytes required to store a 64bit base 128 variable-length integer.\r\n         * @param {number|!Long} value Value to encode\r\n         * @returns {number} Number of bytes required. Capped to {@link ByteBuffer.MAX_VARINT64_BYTES}\r\n         * @expose\r\n         */\r\n        ByteBuffer.calculateVarint64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value);\n            else if (typeof value === 'string')\n                value = Long.fromString(value);\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            if (part2 == 0) {\r\n                if (part1 == 0) {\r\n                    if (part0 < 1 << 14)\r\n                        return part0 < 1 << 7 ? 1 : 2;\r\n                    else\r\n                        return part0 < 1 << 21 ? 3 : 4;\r\n                } else {\r\n                    if (part1 < 1 << 14)\r\n                        return part1 < 1 << 7 ? 5 : 6;\r\n                    else\r\n                        return part1 < 1 << 21 ? 7 : 8;\r\n                }\r\n            } else\r\n                return part2 < 1 << 7 ? 9 : 10;\r\n        };\r\n\r\n        /**\r\n         * Zigzag encodes a signed 64bit integer so that it can be effectively used with varint encoding.\r\n         * @param {number|!Long} value Signed long\r\n         * @returns {!Long} Unsigned zigzag encoded long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagEncode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftLeft(1).xor(value.shiftRight(63)).toUnsigned();\r\n        };\r\n\r\n        /**\r\n         * Decodes a zigzag encoded signed 64bit integer.\r\n         * @param {!Long|number} value Unsigned zigzag encoded long or JavaScript number\r\n         * @returns {!Long} Signed long\r\n         * @expose\r\n         */\r\n        ByteBuffer.zigZagDecode64 = function(value) {\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            // ref: src/google/protobuf/wire_format_lite.h\r\n            return value.shiftRightUnsigned(1).xor(value.and(Long.ONE).toSigned().negate()).toSigned();\r\n        };\r\n\r\n        /**\r\n         * Writes a 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64 = function(value, offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof value === 'number')\n                    value = Long.fromNumber(value);\n                else if (typeof value === 'string')\n                    value = Long.fromString(value);\n                else if (!(value && value instanceof Long))\n                    throw TypeError(\"Illegal value: \"+value+\" (not an integer or Long)\");\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 0 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n            }\r\n            if (typeof value === 'number')\n                value = Long.fromNumber(value, false);\n            else if (typeof value === 'string')\n                value = Long.fromString(value, false);\n            else if (value.unsigned !== false) value = value.toSigned();\n            var size = ByteBuffer.calculateVarint64(value),\r\n                part0 = value.toInt() >>> 0,\r\n                part1 = value.shiftRightUnsigned(28).toInt() >>> 0,\r\n                part2 = value.shiftRightUnsigned(56).toInt() >>> 0;\r\n            offset += size;\n            var capacity11 = this.buffer.length;\n            if (offset > capacity11)\n                this.resize((capacity11 *= 2) > offset ? capacity11 : offset);\n            offset -= size;\n            switch (size) {\r\n                case 10: this.buffer[offset+9] = (part2 >>>  7) & 0x01;\r\n                case 9 : this.buffer[offset+8] = size !== 9 ? (part2       ) | 0x80 : (part2       ) & 0x7F;\r\n                case 8 : this.buffer[offset+7] = size !== 8 ? (part1 >>> 21) | 0x80 : (part1 >>> 21) & 0x7F;\r\n                case 7 : this.buffer[offset+6] = size !== 7 ? (part1 >>> 14) | 0x80 : (part1 >>> 14) & 0x7F;\r\n                case 6 : this.buffer[offset+5] = size !== 6 ? (part1 >>>  7) | 0x80 : (part1 >>>  7) & 0x7F;\r\n                case 5 : this.buffer[offset+4] = size !== 5 ? (part1       ) | 0x80 : (part1       ) & 0x7F;\r\n                case 4 : this.buffer[offset+3] = size !== 4 ? (part0 >>> 21) | 0x80 : (part0 >>> 21) & 0x7F;\r\n                case 3 : this.buffer[offset+2] = size !== 3 ? (part0 >>> 14) | 0x80 : (part0 >>> 14) & 0x7F;\r\n                case 2 : this.buffer[offset+1] = size !== 2 ? (part0 >>>  7) | 0x80 : (part0 >>>  7) & 0x7F;\r\n                case 1 : this.buffer[offset  ] = size !== 1 ? (part0       ) | 0x80 : (part0       ) & 0x7F;\r\n            }\r\n            if (relative) {\r\n                this.offset += size;\r\n                return this;\r\n            } else {\r\n                return size;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Writes a zig-zag encoded 64bit base 128 variable-length integer.\r\n         * @param {number|Long} value Value to write\r\n         * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  written if omitted.\r\n         * @returns {!ByteBuffer|number} `this` if offset is omitted, else the actual number of bytes written.\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.writeVarint64ZigZag = function(value, offset) {\r\n            return this.writeVarint64(ByteBuffer.zigZagEncode64(value), offset);\r\n        };\r\n\r\n        /**\r\n         * Reads a 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64 = function(offset) {\r\n            var relative = typeof offset === 'undefined';\n            if (relative) offset = this.offset;\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + 1 > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n            }\r\n            // ref: src/google/protobuf/io/coded_stream.cc\r\n            var start = offset,\r\n                part0 = 0,\r\n                part1 = 0,\r\n                part2 = 0,\r\n                b  = 0;\r\n            b = this.buffer[offset++]; part0  = (b & 0x7F)      ; if ( b & 0x80                                                   ) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part0 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 14; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part1 |= (b & 0x7F) << 21; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2  = (b & 0x7F)      ; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            b = this.buffer[offset++]; part2 |= (b & 0x7F) <<  7; if ((b & 0x80) || (this.noAssert && typeof b === 'undefined')) {\r\n            throw Error(\"Buffer overrun\"); }}}}}}}}}}\r\n            var value = Long.fromBits(part0 | (part1 << 28), (part1 >>> 4) | (part2) << 24, false);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return value;\r\n            } else {\r\n                return {\r\n                    'value': value,\r\n                    'length': offset-start\r\n                };\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Reads a zig-zag encoded 64bit base 128 variable-length integer. Requires Long.js.\r\n         * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n         *  read if omitted.\r\n         * @returns {!Long|!{value: Long, length: number}} The value read if offset is omitted, else the value read and\r\n         *  the actual number of bytes read.\r\n         * @throws {Error} If it's not a valid varint\r\n         * @expose\r\n         */\r\n        ByteBufferPrototype.readVarint64ZigZag = function(offset) {\r\n            var val = this.readVarint64(offset);\r\n            if (val && val['value'] instanceof Long)\r\n                val[\"value\"] = ByteBuffer.zigZagDecode64(val[\"value\"]);\r\n            else\r\n                val = ByteBuffer.zigZagDecode64(val);\r\n            return val;\r\n        };\r\n\r\n    } // Long\r\n\r\n\r\n    // types/strings/cstring\r\n\r\n    /**\r\n     * Writes a NULL-terminated UTF8 encoded string. For this to work the specified string must not contain any NULL\r\n     *  characters itself.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  contained in `str` + 1 if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeCString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        var i,\r\n            k = str.length;\r\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            for (i=0; i<k; ++i) {\r\n                if (str.charCodeAt(i) === 0)\r\n                    throw RangeError(\"Illegal str: Contains NULL-characters\");\r\n            }\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character, so:\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k+1;\n        var capacity12 = this.buffer.length;\n        if (offset > capacity12)\n            this.resize((capacity12 *= 2) > offset ? capacity12 : offset);\n        offset -= k+1;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        this.buffer[offset++] = 0;\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Reads a NULL-terminated UTF8 encoded string. For this to work the string read must not contain any NULL characters\r\n     *  itself.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readCString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            temp;\r\n        // UTF8 strings do not contain zero bytes in between except for the zero character itself, so:\r\n        do {\r\n            if (offset >= this.buffer.length)\r\n                throw RangeError(\"Index out of range: \"+offset+\" <= \"+this.buffer.length);\r\n            temp = this.buffer[offset++];\r\n        } while (temp !== 0);\r\n        var str = this.buffer.toString(\"utf8\", start, offset-1);\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str;\r\n        } else {\r\n            return {\r\n                \"string\": str,\r\n                \"length\": offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/istring\r\n\r\n    /**\r\n     * Writes a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeIString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += 4+k;\n        var capacity13 = this.buffer.length;\n        if (offset > capacity13)\n            this.resize((capacity13 *= 2) > offset ? capacity13 : offset);\n        offset -= 4+k;\n        if (this.littleEndian) {\n            this.buffer[offset+3] = (k >>> 24) & 0xFF;\n            this.buffer[offset+2] = (k >>> 16) & 0xFF;\n            this.buffer[offset+1] = (k >>>  8) & 0xFF;\n            this.buffer[offset  ] =  k         & 0xFF;\n        } else {\n            this.buffer[offset  ] = (k >>> 24) & 0xFF;\n            this.buffer[offset+1] = (k >>> 16) & 0xFF;\n            this.buffer[offset+2] = (k >>>  8) & 0xFF;\n            this.buffer[offset+3] =  k         & 0xFF;\n        }\n        offset += 4;\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as uint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readIString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 4 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+4+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readUint32(offset);\r\n        var str = this.readUTF8String(len, ByteBuffer.METRICS_BYTES, offset += 4);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n    // types/strings/utf8string\r\n\r\n    /**\r\n     * Metrics representing number of UTF8 characters. Evaluates to `c`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_CHARS = 'c';\r\n\r\n    /**\r\n     * Metrics representing number of bytes. Evaluates to `b`.\r\n     * @type {string}\r\n     * @const\r\n     * @expose\r\n     */\r\n    ByteBuffer.METRICS_BYTES = 'b';\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeUTF8String = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var k;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        offset += k;\n        var capacity14 = this.buffer.length;\n        if (offset > capacity14)\n            this.resize((capacity14 *= 2) > offset ? capacity14 : offset);\n        offset -= k;\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return k;\r\n    };\r\n\r\n    /**\r\n     * Writes an UTF8 encoded string. This is an alias of {@link ByteBuffer#writeUTF8String}.\r\n     * @function\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} if omitted.\r\n     * @returns {!ByteBuffer|number} this if offset is omitted, else the actual number of bytes written.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.writeString = ByteBufferPrototype.writeUTF8String;\r\n\r\n    /**\r\n     * Calculates the number of UTF8 characters of a string. JavaScript itself uses UTF-16, so that a string's\r\n     *  `length` property does not reflect its actual UTF8 size if it contains code points larger than 0xFFFF.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 characters\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Chars = function(str) {\r\n        return utfx.calculateUTF16asUTF8(stringSource(str))[0];\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string.\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateUTF8Bytes = function(str) {\r\n        if (typeof str !== 'string')\r\n            throw TypeError(\"Illegal argument: \"+(typeof str));\r\n        return Buffer.byteLength(str, \"utf8\");\r\n    };\r\n\r\n    /**\r\n     * Calculates the number of UTF8 bytes of a string. This is an alias of {@link ByteBuffer.calculateUTF8Bytes}.\r\n     * @function\r\n     * @param {string} str String to calculate\r\n     * @returns {number} Number of UTF8 bytes\r\n     * @expose\r\n     */\r\n    ByteBuffer.calculateString = ByteBuffer.calculateUTF8Bytes;\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string.\r\n     * @param {number} length Number of characters or bytes to read.\r\n     * @param {string=} metrics Metrics specifying what `length` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readUTF8String = function(length, metrics, offset) {\r\n        if (typeof metrics === 'number') {\r\n            offset = metrics;\r\n            metrics = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (typeof metrics === 'undefined') metrics = ByteBuffer.METRICS_CHARS;\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var i = 0,\r\n            start = offset,\r\n            temp,\r\n            sd;\r\n        if (metrics === ByteBuffer.METRICS_CHARS) { // The same for node and the browser\r\n            sd = stringDestination();\r\n            utfx.decodeUTF8(function() {\r\n                return i < length && offset < this.limit ? this.buffer[offset++] : null;\r\n            }.bind(this), function(cp) {\r\n                ++i; utfx.UTF8toUTF16(cp, sd);\r\n            });\r\n            if (i !== length)\r\n                throw RangeError(\"Illegal range: Truncated data, \"+i+\" == \"+length);\r\n            if (relative) {\r\n                this.offset = offset;\r\n                return sd();\r\n            } else {\r\n                return {\r\n                    \"string\": sd(),\r\n                    \"length\": offset - start\r\n                };\r\n            }\r\n        } else if (metrics === ByteBuffer.METRICS_BYTES) {\r\n            if (!this.noAssert) {\r\n                if (typeof offset !== 'number' || offset % 1 !== 0)\n                    throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n                offset >>>= 0;\n                if (offset < 0 || offset + length > this.buffer.length)\n                    throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+length+\") <= \"+this.buffer.length);\n            }\r\n            temp = this.buffer.toString(\"utf8\", offset, offset+length);\r\n            if (relative) {\r\n                this.offset += length;\r\n                return temp;\r\n            } else {\r\n                return {\r\n                    'string': temp,\r\n                    'length': length\r\n                };\r\n            }\r\n        } else\r\n            throw TypeError(\"Unsupported metrics: \"+metrics);\r\n    };\r\n\r\n    /**\r\n     * Reads an UTF8 encoded string. This is an alias of {@link ByteBuffer#readUTF8String}.\r\n     * @function\r\n     * @param {number} length Number of characters or bytes to read\r\n     * @param {number=} metrics Metrics specifying what `n` is meant to count. Defaults to\r\n     *  {@link ByteBuffer.METRICS_CHARS}.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.readString = ByteBufferPrototype.readUTF8String;\r\n\r\n    // types/strings/vstring\r\n\r\n    /**\r\n     * Writes a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {string} str String to write\r\n     * @param {number=} offset Offset to write to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer|number} `this` if `offset` is omitted, else the actual number of bytes written\r\n     * @expose\r\n     * @see ByteBuffer#writeVarint32\r\n     */\r\n    ByteBufferPrototype.writeVString = function(str, offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset,\r\n            k, l;\r\n        k = Buffer.byteLength(str, \"utf8\");\r\n        l = ByteBuffer.calculateVarint32(k);\r\n        offset += l+k;\n        var capacity15 = this.buffer.length;\n        if (offset > capacity15)\n            this.resize((capacity15 *= 2) > offset ? capacity15 : offset);\n        offset -= l+k;\n        offset += this.writeVarint32(k, offset);\r\n        offset += this.buffer.write(str, offset, k, \"utf8\");\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return this;\r\n        }\r\n        return offset - start;\r\n    };\r\n\r\n    /**\r\n     * Reads a length as varint32 prefixed UTF8 encoded string.\r\n     * @param {number=} offset Offset to read from. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {string|!{string: string, length: number}} The string read if offset is omitted, else the string\r\n     *  read and the actual number of bytes read.\r\n     * @expose\r\n     * @see ByteBuffer#readVarint32\r\n     */\r\n    ByteBufferPrototype.readVString = function(offset) {\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 1 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+1+\") <= \"+this.buffer.length);\n        }\r\n        var start = offset;\r\n        var len = this.readVarint32(offset);\r\n        var str = this.readUTF8String(len['value'], ByteBuffer.METRICS_BYTES, offset += len['length']);\r\n        offset += str['length'];\r\n        if (relative) {\r\n            this.offset = offset;\r\n            return str['string'];\r\n        } else {\r\n            return {\r\n                'string': str['string'],\r\n                'length': offset - start\r\n            };\r\n        }\r\n    };\r\n\r\n\r\n    /**\r\n     * Appends some data to this ByteBuffer. This will overwrite any contents behind the specified offset up to the appended\r\n     *  data's length.\r\n     * @param {!ByteBuffer|!Buffer|!ArrayBuffer|!Uint8Array|string} source Data to append. If `source` is a ByteBuffer, its\r\n     * offsets will be modified according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to append at. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `<01 02>03.append(<04 05>)` will result in `<01 02 04 05>, 04 05|`\r\n     * @example An absolute `<01 02>03.append(04 05>, 1)` will result in `<01 04>05, 04 05|`\r\n     */\r\n    ByteBufferPrototype.append = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var length = source.limit - source.offset;\r\n        if (length <= 0) return this; // Nothing to append\r\n        offset += length;\n        var capacity16 = this.buffer.length;\n        if (offset > capacity16)\n            this.resize((capacity16 *= 2) > offset ? capacity16 : offset);\n        offset -= length;\n        source.buffer.copy(this.buffer, offset, source.offset, source.limit);\r\n        source.offset += length;\r\n        if (relative) this.offset += length;\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Appends this ByteBuffer's contents to another ByteBuffer. This will overwrite any contents at and after the\r\n        specified offset up to the length of this ByteBuffer's data.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to append to. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  read if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#append\r\n     */\r\n    ByteBufferPrototype.appendTo = function(target, offset) {\r\n        target.append(this, offset);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Enables or disables assertions of argument types and offsets. Assertions are enabled by default but you can opt to\r\n     *  disable them if your code already makes sure that everything is valid.\r\n     * @param {boolean} assert `true` to enable assertions, otherwise `false`\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.assert = function(assert) {\r\n        this.noAssert = !assert;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Gets the capacity of this ByteBuffer's backing buffer.\r\n     * @returns {number} Capacity of the backing buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.capacity = function() {\r\n        return this.buffer.length;\r\n    };\r\n    /**\r\n     * Clears this ByteBuffer's offsets by setting {@link ByteBuffer#offset} to `0` and {@link ByteBuffer#limit} to the\r\n     *  backing buffer's capacity. Discards {@link ByteBuffer#markedOffset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clear = function() {\r\n        this.offset = 0;\r\n        this.limit = this.buffer.length;\r\n        this.markedOffset = -1;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a cloned instance of this ByteBuffer, preset with this ByteBuffer's values for {@link ByteBuffer#offset},\r\n     *  {@link ByteBuffer#markedOffset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} copy Whether to copy the backing buffer or to return another view on the same, defaults to `false`\r\n     * @returns {!ByteBuffer} Cloned instance\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.clone = function(copy) {\r\n        var bb = new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        if (copy) {\r\n            var buffer = new Buffer(this.buffer.length);\r\n            this.buffer.copy(buffer);\r\n            bb.buffer = buffer;\r\n        } else {\r\n            bb.buffer = this.buffer;\r\n        }\r\n        bb.offset = this.offset;\r\n        bb.markedOffset = this.markedOffset;\r\n        bb.limit = this.limit;\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Compacts this ByteBuffer to be backed by a {@link ByteBuffer#buffer} of its contents' length. Contents are the bytes\r\n     *  between {@link ByteBuffer#offset} and {@link ByteBuffer#limit}. Will set `offset = 0` and `limit = capacity` and\r\n     *  adapt {@link ByteBuffer#markedOffset} to the same relative position if set.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.compact = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === 0 && end === this.buffer.length)\r\n            return this; // Already compacted\r\n        var len = end - begin;\r\n        if (len === 0) {\r\n            this.buffer = EMPTY_BUFFER;\r\n            if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n            this.offset = 0;\r\n            this.limit = 0;\r\n            return this;\r\n        }\r\n        var buffer = new Buffer(len);\r\n        this.buffer.copy(buffer, 0, begin, end);\r\n        this.buffer = buffer;\r\n        if (this.markedOffset >= 0) this.markedOffset -= begin;\r\n        this.offset = 0;\r\n        this.limit = len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Creates a copy of this ByteBuffer's contents. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Copy\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copy = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return new ByteBuffer(0, this.littleEndian, this.noAssert);\r\n        var capacity = end - begin,\r\n            bb = new ByteBuffer(capacity, this.littleEndian, this.noAssert);\r\n        bb.offset = 0;\r\n        bb.limit = capacity;\r\n        if (bb.markedOffset >= 0) bb.markedOffset -= begin;\r\n        this.copyTo(bb, 0, begin, end);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Copies this ByteBuffer's contents to another ByteBuffer. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} targetOffset Offset to copy to. Will use and increase the target's {@link ByteBuffer#offset}\r\n     *  by the number of bytes copied if omitted.\r\n     * @param {number=} sourceOffset Offset to start copying from. Will use and increase {@link ByteBuffer#offset} by the\r\n     *  number of bytes copied if omitted.\r\n     * @param {number=} sourceLimit Offset to end copying from, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.copyTo = function(target, targetOffset, sourceOffset, sourceLimit) {\r\n        var relative,\r\n            targetRelative;\r\n        if (!this.noAssert) {\r\n            if (!ByteBuffer.isByteBuffer(target))\r\n                throw TypeError(\"Illegal target: Not a ByteBuffer\");\r\n        }\r\n        targetOffset = (targetRelative = typeof targetOffset === 'undefined') ? target.offset : targetOffset | 0;\r\n        sourceOffset = (relative = typeof sourceOffset === 'undefined') ? this.offset : sourceOffset | 0;\r\n        sourceLimit = typeof sourceLimit === 'undefined' ? this.limit : sourceLimit | 0;\r\n\r\n        if (targetOffset < 0 || targetOffset > target.buffer.length)\r\n            throw RangeError(\"Illegal target range: 0 <= \"+targetOffset+\" <= \"+target.buffer.length);\r\n        if (sourceOffset < 0 || sourceLimit > this.buffer.length)\r\n            throw RangeError(\"Illegal source range: 0 <= \"+sourceOffset+\" <= \"+this.buffer.length);\r\n\r\n        var len = sourceLimit - sourceOffset;\r\n        if (len === 0)\r\n            return target; // Nothing to copy\r\n\r\n        target.ensureCapacity(targetOffset + len);\r\n\r\n        this.buffer.copy(target.buffer, targetOffset, sourceOffset, sourceLimit);\r\n\r\n        if (relative) this.offset += len;\r\n        if (targetRelative) target.offset += len;\r\n\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes sure that this ByteBuffer is backed by a {@link ByteBuffer#buffer} of at least the specified capacity. If the\r\n     *  current capacity is exceeded, it will be doubled. If double the current capacity is less than the required capacity,\r\n     *  the required capacity will be used instead.\r\n     * @param {number} capacity Required capacity\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.ensureCapacity = function(capacity) {\r\n        var current = this.buffer.length;\r\n        if (current < capacity)\r\n            return this.resize((current *= 2) > capacity ? current : capacity);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Overwrites this ByteBuffer's contents with the specified value. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {number|string} value Byte value to fill with. If given as a string, the first character is used.\r\n     * @param {number=} begin Begin offset. Will use and increase {@link ByteBuffer#offset} by the number of bytes\r\n     *  written if omitted. defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example `someByteBuffer.clear().fill(0)` fills the entire backing buffer with zeroes\r\n     */\r\n    ByteBufferPrototype.fill = function(value, begin, end) {\r\n        var relative = typeof begin === 'undefined';\n        if (relative) begin = this.offset;\n        if (typeof value === 'string' && value.length > 0)\r\n            value = value.charCodeAt(0);\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof value !== 'number' || value % 1 !== 0)\n                throw TypeError(\"Illegal value: \"+value+\" (not an integer)\");\n            value |= 0;\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin >= end)\r\n            return this; // Nothing to fill\r\n        this.buffer.fill(value, begin, end);\r\n        begin = end;\r\n        if (relative) this.offset = begin;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Makes this ByteBuffer ready for a new sequence of write or relative read operations. Sets `limit = offset` and\r\n     *  `offset = 0`. Make sure always to flip a ByteBuffer when all relative read or write operations are complete.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.flip = function() {\r\n        this.limit = this.offset;\r\n        this.offset = 0;\r\n        return this;\r\n    };\r\n    /**\r\n     * Marks an offset on this ByteBuffer to be used later.\r\n     * @param {number=} offset Offset to mark. Defaults to {@link ByteBuffer#offset}.\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `offset` is not a valid number\r\n     * @throws {RangeError} If `offset` is out of bounds\r\n     * @see ByteBuffer#reset\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.mark = function(offset) {\r\n        offset = typeof offset === 'undefined' ? this.offset : offset;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        this.markedOffset = offset;\r\n        return this;\r\n    };\r\n    /**\r\n     * Sets the byte order.\r\n     * @param {boolean} littleEndian `true` for little endian byte order, `false` for big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.order = function(littleEndian) {\r\n        if (!this.noAssert) {\r\n            if (typeof littleEndian !== 'boolean')\r\n                throw TypeError(\"Illegal littleEndian: Not a boolean\");\r\n        }\r\n        this.littleEndian = !!littleEndian;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) little endian byte order.\r\n     * @param {boolean=} littleEndian Defaults to `true`, otherwise uses big endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.LE = function(littleEndian) {\r\n        this.littleEndian = typeof littleEndian !== 'undefined' ? !!littleEndian : true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Switches (to) big endian byte order.\r\n     * @param {boolean=} bigEndian Defaults to `true`, otherwise uses little endian\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.BE = function(bigEndian) {\r\n        this.littleEndian = typeof bigEndian !== 'undefined' ? !bigEndian : false;\r\n        return this;\r\n    };\r\n    /**\r\n     * Prepends some data to this ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer|string||!Buffer} source Data to prepend. If `source` is a ByteBuffer, its offset will be modified\r\n     *  according to the performed read operation.\r\n     * @param {(string|number)=} encoding Encoding if `data` is a string (\"base64\", \"hex\", \"binary\", defaults to \"utf8\")\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @example A relative `00<01 02 03>.prepend(<04 05>)` results in `<04 05 01 02 03>, 04 05|`\r\n     * @example An absolute `00<01 02 03>.prepend(<04 05>, 2)` results in `04<05 02 03>, 04 05|`\r\n     */\r\n    ByteBufferPrototype.prepend = function(source, encoding, offset) {\r\n        if (typeof encoding === 'number' || typeof encoding !== 'string') {\r\n            offset = encoding;\r\n            encoding = undefined;\r\n        }\r\n        var relative = typeof offset === 'undefined';\n        if (relative) offset = this.offset;\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: \"+offset+\" (not an integer)\");\n            offset >>>= 0;\n            if (offset < 0 || offset + 0 > this.buffer.length)\n                throw RangeError(\"Illegal offset: 0 <= \"+offset+\" (+\"+0+\") <= \"+this.buffer.length);\n        }\r\n        if (!(source instanceof ByteBuffer))\r\n            source = ByteBuffer.wrap(source, encoding);\r\n        var len = source.limit - source.offset;\r\n        if (len <= 0) return this; // Nothing to prepend\r\n        var diff = len - offset;\r\n        if (diff > 0) { // Not enough space before offset, so resize + move\r\n            var buffer = new Buffer(this.buffer.length + diff);\r\n            this.buffer.copy(buffer, len, offset, this.buffer.length);\r\n            this.buffer = buffer;\r\n            this.offset += diff;\r\n            if (this.markedOffset >= 0) this.markedOffset += diff;\r\n            this.limit += diff;\r\n            offset += diff;\r\n        }        source.buffer.copy(this.buffer, offset - len, source.offset, source.limit);\r\n\r\n        source.offset = source.limit;\r\n        if (relative)\r\n            this.offset -= len;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Prepends this ByteBuffer to another ByteBuffer. This will overwrite any contents before the specified offset up to the\r\n     *  prepended data's length. If there is not enough space available before the specified `offset`, the backing buffer\r\n     *  will be resized and its contents moved accordingly.\r\n     * @param {!ByteBuffer} target Target ByteBuffer\r\n     * @param {number=} offset Offset to prepend at. Will use and decrease {@link ByteBuffer#offset} by the number of bytes\r\n     *  prepended if omitted.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     * @see ByteBuffer#prepend\r\n     */\r\n    ByteBufferPrototype.prependTo = function(target, offset) {\r\n        target.prepend(this, offset);\r\n        return this;\r\n    };\r\n    /**\r\n     * Prints debug information about this ByteBuffer's contents.\r\n     * @param {function(string)=} out Output function to call, defaults to console.log\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.printDebug = function(out) {\r\n        if (typeof out !== 'function') out = console.log.bind(console);\r\n        out(\r\n            this.toString()+\"\\n\"+\r\n            \"-------------------------------------------------------------------\\n\"+\r\n            this.toDebug(/* columns */ true)\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Gets the number of remaining readable bytes. Contents are the bytes between {@link ByteBuffer#offset} and\r\n     *  {@link ByteBuffer#limit}, so this returns `limit - offset`.\r\n     * @returns {number} Remaining readable bytes. May be negative if `offset > limit`.\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.remaining = function() {\r\n        return this.limit - this.offset;\r\n    };\r\n    /**\r\n     * Resets this ByteBuffer's {@link ByteBuffer#offset}. If an offset has been marked through {@link ByteBuffer#mark}\r\n     *  before, `offset` will be set to {@link ByteBuffer#markedOffset}, which will then be discarded. If no offset has been\r\n     *  marked, sets `offset = 0`.\r\n     * @returns {!ByteBuffer} this\r\n     * @see ByteBuffer#mark\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reset = function() {\r\n        if (this.markedOffset >= 0) {\r\n            this.offset = this.markedOffset;\r\n            this.markedOffset = -1;\r\n        } else {\r\n            this.offset = 0;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Resizes this ByteBuffer to be backed by a buffer of at least the given capacity. Will do nothing if already that\r\n     *  large or larger.\r\n     * @param {number} capacity Capacity required\r\n     * @returns {!ByteBuffer} this\r\n     * @throws {TypeError} If `capacity` is not a number\r\n     * @throws {RangeError} If `capacity < 0`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.resize = function(capacity) {\r\n        if (!this.noAssert) {\r\n            if (typeof capacity !== 'number' || capacity % 1 !== 0)\n                throw TypeError(\"Illegal capacity: \"+capacity+\" (not an integer)\");\n            capacity |= 0;\n            if (capacity < 0)\r\n                throw RangeError(\"Illegal capacity: 0 <= \"+capacity);\r\n        }\r\n        if (this.buffer.length < capacity) {\r\n            var buffer = new Buffer(capacity);\r\n            this.buffer.copy(buffer);\r\n            this.buffer = buffer;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Reverses this ByteBuffer's contents.\r\n     * @param {number=} begin Offset to start at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.reverse = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        if (begin === end)\r\n            return this; // Nothing to reverse\r\n        Array.prototype.reverse.call(this.buffer.slice(begin, end));\r\n        return this;\r\n    };\r\n    /**\r\n     * Skips the next `length` bytes. This will just advance\r\n     * @param {number} length Number of bytes to skip. May also be negative to move the offset back.\r\n     * @returns {!ByteBuffer} this\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.skip = function(length) {\r\n        if (!this.noAssert) {\r\n            if (typeof length !== 'number' || length % 1 !== 0)\n                throw TypeError(\"Illegal length: \"+length+\" (not an integer)\");\n            length |= 0;\n        }\r\n        var offset = this.offset + length;\r\n        if (!this.noAssert) {\r\n            if (offset < 0 || offset > this.buffer.length)\r\n                throw RangeError(\"Illegal length: 0 <= \"+this.offset+\" + \"+length+\" <= \"+this.buffer.length);\r\n        }\r\n        this.offset = offset;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Slices this ByteBuffer by creating a cloned instance with `offset = begin` and `limit = end`.\r\n     * @param {number=} begin Begin offset, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end End offset, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {!ByteBuffer} Clone of this ByteBuffer with slicing applied, backed by the same {@link ByteBuffer#buffer}\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.slice = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        var bb = this.clone();\r\n        bb.offset = begin;\r\n        bb.limit = end;\r\n        return bb;\r\n    };\r\n    /**\r\n     * Returns a copy of the backing buffer that contains this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @param {boolean=} forceCopy If `true` returns a copy, otherwise returns a view referencing the same memory if\r\n     *  possible. Defaults to `false`\r\n     * @returns {!Buffer} Contents as a Buffer\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBuffer = function(forceCopy) {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        if (forceCopy) {\r\n            var buffer = new Buffer(limit - offset);\r\n            this.buffer.copy(buffer, 0, offset, limit);\r\n            return buffer;\r\n        } else {\r\n            if (offset === 0 && limit === this.buffer.length)\r\n                return this.buffer;\r\n            else\r\n                return this.buffer.slice(offset, limit);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns a copy of the backing buffer compacted to contain this ByteBuffer's contents. Contents are the bytes between\r\n     *  {@link ByteBuffer#offset} and {@link ByteBuffer#limit}.\r\n     * @returns {!ArrayBuffer} Contents as an ArrayBuffer\r\n     */\r\n    ByteBufferPrototype.toArrayBuffer = function() {\r\n        var offset = this.offset,\r\n            limit = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof offset !== 'number' || offset % 1 !== 0)\n                throw TypeError(\"Illegal offset: Not an integer\");\n            offset >>>= 0;\n            if (typeof limit !== 'number' || limit % 1 !== 0)\n                throw TypeError(\"Illegal limit: Not an integer\");\n            limit >>>= 0;\n            if (offset < 0 || offset > limit || limit > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+offset+\" <= \"+limit+\" <= \"+this.buffer.length);\n        }\r\n        var ab = new ArrayBuffer(limit - offset);\r\n        if (memcpy) { // Fast\r\n            memcpy(ab, 0, this.buffer, offset, limit);\r\n        } else { // Slow\r\n            var dst = new Uint8Array(ab);\r\n            for (var i=offset; i<limit; ++i)\r\n                dst[i-offset] = this.buffer[i];\r\n        }\r\n        return ab;\r\n    };\r\n\r\n    /**\r\n     * Converts the ByteBuffer's contents to a string.\r\n     * @param {string=} encoding Output encoding. Returns an informative string representation if omitted but also allows\r\n     *  direct conversion to \"utf8\", \"hex\", \"base64\" and \"binary\" encoding. \"debug\" returns a hex representation with\r\n     *  highlighted offsets.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}\r\n     * @returns {string} String representation\r\n     * @throws {Error} If `encoding` is invalid\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toString = function(encoding, begin, end) {\r\n        if (typeof encoding === 'undefined')\r\n            return \"ByteBufferNB(offset=\"+this.offset+\",markedOffset=\"+this.markedOffset+\",limit=\"+this.limit+\",capacity=\"+this.capacity()+\")\";\r\n        if (typeof encoding === 'number')\r\n            encoding = \"utf8\",\r\n            begin = encoding,\r\n            end = begin;\r\n        switch (encoding) {\r\n            case \"utf8\":\r\n                return this.toUTF8(begin, end);\r\n            case \"base64\":\r\n                return this.toBase64(begin, end);\r\n            case \"hex\":\r\n                return this.toHex(begin, end);\r\n            case \"binary\":\r\n                return this.toBinary(begin, end);\r\n            case \"debug\":\r\n                return this.toDebug();\r\n            case \"columns\":\r\n                return this.toColumns();\r\n            default:\r\n                throw Error(\"Unsupported encoding: \"+encoding);\r\n        }\r\n    };\r\n\r\n    // encodings/base64\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a base64 encoded string.\r\n     * @param {number=} begin Offset to begin at, defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at, defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Base64 encoded string\r\n     * @throws {RangeError} If `begin` or `end` is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBase64 = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin = begin | 0; end = end | 0;\r\n        if (begin < 0 || end > this.capacity || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"base64\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBase64 = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"base64\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    /**\r\n     * Encodes a binary string to base64 like `window.btoa` does.\r\n     * @param {string} str Binary string\r\n     * @returns {string} Base64 encoded string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa\r\n     * @expose\r\n     */\r\n    ByteBuffer.btoa = function(str) {\r\n        return ByteBuffer.fromBinary(str).toBase64();\r\n    };\r\n\r\n    /**\r\n     * Decodes a base64 encoded string to binary like `window.atob` does.\r\n     * @param {string} b64 Base64 encoded string\r\n     * @returns {string} Binary string\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Window.atob\r\n     * @expose\r\n     */\r\n    ByteBuffer.atob = function(b64) {\r\n        return ByteBuffer.fromBase64(b64).toBinary();\r\n    };\r\n\r\n    // encodings/binary\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a binary encoded string, that is using only characters 0x00-0xFF as bytes.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Binary encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toBinary = function(begin, end) {\r\n        if (typeof begin === 'undefined')\r\n            begin = this.offset;\r\n        if (typeof end === 'undefined')\r\n            end = this.limit;\r\n        begin |= 0; end |= 0;\r\n        if (begin < 0 || end > this.capacity() || begin > end)\r\n            throw RangeError(\"begin, end\");\r\n        return this.buffer.toString(\"binary\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a binary encoded string, that is using only characters 0x00-0xFF as bytes, to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromBinary = function(str, littleEndian) {\r\n        return ByteBuffer.wrap(new Buffer(str, \"binary\"), littleEndian);\r\n        return bb;\r\n    };\r\n\r\n    // encodings/debug\r\n\r\n    /**\r\n     * Encodes this ByteBuffer to a hex encoded string with marked offsets. Offset symbols are:\r\n     * * `<` : offset,\r\n     * * `'` : markedOffset,\r\n     * * `>` : limit,\r\n     * * `|` : offset and limit,\r\n     * * `[` : offset and markedOffset,\r\n     * * `]` : markedOffset and limit,\r\n     * * `!` : offset, markedOffset and limit\r\n     * @param {boolean=} columns If `true` returns two columns hex + ascii, defaults to `false`\r\n     * @returns {string|!Array.<string>} Debug string or array of lines if `asArray = true`\r\n     * @expose\r\n     * @example `>00'01 02<03` contains four bytes with `limit=0, markedOffset=1, offset=3`\r\n     * @example `00[01 02 03>` contains four bytes with `offset=markedOffset=1, limit=4`\r\n     * @example `00|01 02 03` contains four bytes with `offset=limit=1, markedOffset=-1`\r\n     * @example `|` contains zero bytes with `offset=limit=0, markedOffset=-1`\r\n     */\r\n    ByteBufferPrototype.toDebug = function(columns) {\r\n        var i = -1,\r\n            k = this.buffer.length,\r\n            b,\r\n            hex = \"\",\r\n            asc = \"\",\r\n            out = \"\";\r\n        while (i<k) {\r\n            if (i !== -1) {\r\n                b = this.buffer[i];\r\n                if (b < 0x10) hex += \"0\"+b.toString(16).toUpperCase();\r\n                else hex += b.toString(16).toUpperCase();\r\n                if (columns)\r\n                    asc += b > 32 && b < 127 ? String.fromCharCode(b) : '.';\r\n            }\r\n            ++i;\r\n            if (columns) {\r\n                if (i > 0 && i % 16 === 0 && i !== k) {\r\n                    while (hex.length < 3*16+3) hex += \" \";\r\n                    out += hex+asc+\"\\n\";\r\n                    hex = asc = \"\";\r\n                }\r\n            }\r\n            if (i === this.offset && i === this.limit)\r\n                hex += i === this.markedOffset ? \"!\" : \"|\";\r\n            else if (i === this.offset)\r\n                hex += i === this.markedOffset ? \"[\" : \"<\";\r\n            else if (i === this.limit)\r\n                hex += i === this.markedOffset ? \"]\" : \">\";\r\n            else\r\n                hex += i === this.markedOffset ? \"'\" : (columns || (i !== 0 && i !== k) ? \" \" : \"\");\r\n        }\r\n        if (columns && hex !== \" \") {\r\n            while (hex.length < 3*16+3)\r\n                hex += \" \";\r\n            out += hex + asc + \"\\n\";\r\n        }\r\n        return columns ? out : hex;\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string with marked offsets to a ByteBuffer.\r\n     * @param {string} str Debug string to decode (not be generated with `columns = true`)\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     * @see ByteBuffer#toDebug\r\n     */\r\n    ByteBuffer.fromDebug = function(str, littleEndian, noAssert) {\r\n        var k = str.length,\r\n            bb = new ByteBuffer(((k+1)/3)|0, littleEndian, noAssert);\r\n        var i = 0, j = 0, ch, b,\r\n            rs = false, // Require symbol next\r\n            ho = false, hm = false, hl = false, // Already has offset (ho), markedOffset (hm), limit (hl)?\r\n            fail = false;\r\n        while (i<k) {\r\n            switch (ch = str.charAt(i++)) {\r\n                case '!':\r\n                    if (!noAssert) {\r\n                        if (ho || hm || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = hl = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '|':\r\n                    if (!noAssert) {\r\n                        if (ho || hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hl = true;\r\n                    }\r\n                    bb.offset = bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case '[':\r\n                    if (!noAssert) {\r\n                        if (ho || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = hm = true;\r\n                    }\r\n                    bb.offset = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '<':\r\n                    if (!noAssert) {\r\n                        if (ho) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        ho = true;\r\n                    }\r\n                    bb.offset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ']':\r\n                    if (!noAssert) {\r\n                        if (hl || hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = hm = true;\r\n                    }\r\n                    bb.limit = bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case '>':\r\n                    if (!noAssert) {\r\n                        if (hl) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hl = true;\r\n                    }\r\n                    bb.limit = j;\r\n                    rs = false;\r\n                    break;\r\n                case \"'\":\r\n                    if (!noAssert) {\r\n                        if (hm) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                        hm = true;\r\n                    }\r\n                    bb.markedOffset = j;\r\n                    rs = false;\r\n                    break;\r\n                case ' ':\r\n                    rs = false;\r\n                    break;\r\n                default:\r\n                    if (!noAssert) {\r\n                        if (rs) {\r\n                            fail = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    b = parseInt(ch+str.charAt(i++), 16);\r\n                    if (!noAssert) {\r\n                        if (isNaN(b) || b < 0 || b > 255)\r\n                            throw TypeError(\"Illegal str: Not a debug encoded string\");\r\n                    }\r\n                    bb.buffer[j++] = b;\r\n                    rs = true;\r\n            }\r\n            if (fail)\r\n                throw TypeError(\"Illegal str: Invalid symbol at \"+i);\r\n        }\r\n        if (!noAssert) {\r\n            if (!ho || !hl)\r\n                throw TypeError(\"Illegal str: Missing offset or limit\");\r\n            if (j<bb.buffer.length)\r\n                throw TypeError(\"Illegal str: Not a debug encoded string (is it hex?) \"+j+\" < \"+k);\r\n        }\r\n        return bb;\r\n    };\r\n\r\n    // encodings/hex\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents to a hex encoded string.\r\n     * @param {number=} begin Offset to begin at. Defaults to {@link ByteBuffer#offset}.\r\n     * @param {number=} end Offset to end at. Defaults to {@link ByteBuffer#limit}.\r\n     * @returns {string} Hex encoded string\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toHex = function(begin, end) {\r\n        begin = typeof begin === 'undefined' ? this.offset : begin;\r\n        end = typeof end === 'undefined' ? this.limit : end;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"hex\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes a hex encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromHex = function(str, littleEndian, noAssert) {\r\n        if (!noAssert) {\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n            if (str.length % 2 !== 0)\r\n                throw TypeError(\"Illegal str: Length not a multiple of 2\");\r\n        }\r\n        var bb = new ByteBuffer(0, littleEndian, true);\r\n        bb.buffer = new Buffer(str, \"hex\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n    // utfx-embeddable\r\n\r\n    /**\r\n     * utfx-embeddable (c) 2014 Daniel Wirtz <dcode@dcode.io>\r\n     * Released under the Apache License, Version 2.0\r\n     * see: https://github.com/dcodeIO/utfx for details\r\n     */\r\n    var utfx = function() {\r\n        \"use strict\";\r\n\r\n        /**\r\n         * utfx namespace.\r\n         * @inner\r\n         * @type {!Object.<string,*>}\r\n         */\r\n        var utfx = {};\r\n\r\n        /**\r\n         * Maximum valid code point.\r\n         * @type {number}\r\n         * @const\r\n         */\r\n        utfx.MAX_CODEPOINT = 0x10FFFF;\r\n\r\n        /**\r\n         * Encodes UTF8 code points to UTF8 bytes.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte\r\n         */\r\n        utfx.encodeUTF8 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src,\r\n                src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp < 0x80)\r\n                    dst(cp&0x7F);\r\n                else if (cp < 0x800)\r\n                    dst(((cp>>6)&0x1F)|0xC0),\r\n                    dst((cp&0x3F)|0x80);\r\n                else if (cp < 0x10000)\r\n                    dst(((cp>>12)&0x0F)|0xE0),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                else\r\n                    dst(((cp>>18)&0x07)|0xF0),\r\n                    dst(((cp>>12)&0x3F)|0x80),\r\n                    dst(((cp>>6)&0x3F)|0x80),\r\n                    dst((cp&0x3F)|0x80);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Decodes UTF8 bytes to UTF8 code points.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each decoded code point.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the\r\n         *  remaining bytes.\r\n         */\r\n        utfx.decodeUTF8 = function(src, dst) {\r\n            var a, b, c, d, fail = function(b) {\r\n                b = b.slice(0, b.indexOf(null));\r\n                var err = Error(b.toString());\r\n                err.name = \"TruncatedError\";\r\n                err['bytes'] = b;\r\n                throw err;\r\n            };\r\n            while ((a = src()) !== null) {\r\n                if ((a&0x80) === 0)\r\n                    dst(a);\r\n                else if ((a&0xE0) === 0xC0)\r\n                    ((b = src()) === null) && fail([a, b]),\r\n                    dst(((a&0x1F)<<6) | (b&0x3F));\r\n                else if ((a&0xF0) === 0xE0)\r\n                    ((b=src()) === null || (c=src()) === null) && fail([a, b, c]),\r\n                    dst(((a&0x0F)<<12) | ((b&0x3F)<<6) | (c&0x3F));\r\n                else if ((a&0xF8) === 0xF0)\r\n                    ((b=src()) === null || (c=src()) === null || (d=src()) === null) && fail([a, b, c ,d]),\r\n                    dst(((a&0x07)<<18) | ((b&0x3F)<<12) | ((c&0x3F)<<6) | (d&0x3F));\r\n                else throw RangeError(\"Illegal starting byte: \"+a);\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts UTF16 characters to UTF8 code points.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @param {!function(number)} dst Code points destination as a function successively called with each converted code\r\n         *  point.\r\n         */\r\n        utfx.UTF16toUTF8 = function(src, dst) {\r\n            var c1, c2 = null;\r\n            while (true) {\r\n                if ((c1 = c2 !== null ? c2 : src()) === null)\r\n                    break;\r\n                if (c1 >= 0xD800 && c1 <= 0xDFFF) {\r\n                    if ((c2 = src()) !== null) {\r\n                        if (c2 >= 0xDC00 && c2 <= 0xDFFF) {\r\n                            dst((c1-0xD800)*0x400+c2-0xDC00+0x10000);\r\n                            c2 = null; continue;\r\n                        }\r\n                    }\r\n                }\r\n                dst(c1);\r\n            }\r\n            if (c2 !== null) dst(c2);\r\n        };\r\n\r\n        /**\r\n         * Converts UTF8 code points to UTF16 characters.\r\n         * @param {(!function():number|null) | number} src Code points source, either as a function returning the next code point\r\n         *  respectively `null` if there are no more code points left or a single numeric code point.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a code point is out of range\r\n         */\r\n        utfx.UTF8toUTF16 = function(src, dst) {\r\n            var cp = null;\r\n            if (typeof src === 'number')\r\n                cp = src, src = function() { return null; };\r\n            while (cp !== null || (cp = src()) !== null) {\r\n                if (cp <= 0xFFFF)\r\n                    dst(cp);\r\n                else\r\n                    cp -= 0x10000,\r\n                    dst((cp>>10)+0xD800),\r\n                    dst((cp%0x400)+0xDC00);\r\n                cp = null;\r\n            }\r\n        };\r\n\r\n        /**\r\n         * Converts and encodes UTF16 characters to UTF8 bytes.\r\n         * @param {!function():number|null} src Characters source as a function returning the next char code respectively `null`\r\n         *  if there are no more characters left.\r\n         * @param {!function(number)} dst Bytes destination as a function successively called with the next byte.\r\n         */\r\n        utfx.encodeUTF16toUTF8 = function(src, dst) {\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                utfx.encodeUTF8(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Decodes and converts UTF8 bytes to UTF16 characters.\r\n         * @param {!function():number|null} src Bytes source as a function returning the next byte respectively `null` if there\r\n         *  are no more bytes left.\r\n         * @param {!function(number)} dst Characters destination as a function successively called with each converted char code.\r\n         * @throws {RangeError} If a starting byte is invalid in UTF8\r\n         * @throws {Error} If the last sequence is truncated. Has an array property `bytes` holding the remaining bytes.\r\n         */\r\n        utfx.decodeUTF8toUTF16 = function(src, dst) {\r\n            utfx.decodeUTF8(src, function(cp) {\r\n                utfx.UTF8toUTF16(cp, dst);\r\n            });\r\n        };\r\n\r\n        /**\r\n         * Calculates the byte length of an UTF8 code point.\r\n         * @param {number} cp UTF8 code point\r\n         * @returns {number} Byte length\r\n         */\r\n        utfx.calculateCodePoint = function(cp) {\r\n            return (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 bytes required to store UTF8 code points.\r\n         * @param {(!function():number|null)} src Code points source as a function returning the next code point respectively\r\n         *  `null` if there are no more code points left.\r\n         * @returns {number} The number of UTF8 bytes required\r\n         */\r\n        utfx.calculateUTF8 = function(src) {\r\n            var cp, l=0;\r\n            while ((cp = src()) !== null)\r\n                l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            return l;\r\n        };\r\n\r\n        /**\r\n         * Calculates the number of UTF8 code points respectively UTF8 bytes required to store UTF16 char codes.\r\n         * @param {(!function():number|null)} src Characters source as a function returning the next char code respectively\r\n         *  `null` if there are no more characters left.\r\n         * @returns {!Array.<number>} The number of UTF8 code points at index 0 and the number of UTF8 bytes required at index 1.\r\n         */\r\n        utfx.calculateUTF16asUTF8 = function(src) {\r\n            var n=0, l=0;\r\n            utfx.UTF16toUTF8(src, function(cp) {\r\n                ++n; l += (cp < 0x80) ? 1 : (cp < 0x800) ? 2 : (cp < 0x10000) ? 3 : 4;\r\n            });\r\n            return [n,l];\r\n        };\r\n\r\n        return utfx;\r\n    }();\r\n\r\n    // encodings/utf8\r\n\r\n    /**\r\n     * Encodes this ByteBuffer's contents between {@link ByteBuffer#offset} and {@link ByteBuffer#limit} to an UTF8 encoded\r\n     *  string.\r\n     * @returns {string} Hex encoded string\r\n     * @throws {RangeError} If `offset > limit`\r\n     * @expose\r\n     */\r\n    ByteBufferPrototype.toUTF8 = function(begin, end) {\r\n        if (typeof begin === 'undefined') begin = this.offset;\r\n        if (typeof end === 'undefined') end = this.limit;\r\n        if (!this.noAssert) {\r\n            if (typeof begin !== 'number' || begin % 1 !== 0)\n                throw TypeError(\"Illegal begin: Not an integer\");\n            begin >>>= 0;\n            if (typeof end !== 'number' || end % 1 !== 0)\n                throw TypeError(\"Illegal end: Not an integer\");\n            end >>>= 0;\n            if (begin < 0 || begin > end || end > this.buffer.length)\n                throw RangeError(\"Illegal range: 0 <= \"+begin+\" <= \"+end+\" <= \"+this.buffer.length);\n        }\r\n        return this.buffer.toString(\"utf8\", begin, end);\r\n    };\r\n\r\n    /**\r\n     * Decodes an UTF8 encoded string to a ByteBuffer.\r\n     * @param {string} str String to decode\r\n     * @param {boolean=} littleEndian Whether to use little or big endian byte order. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_ENDIAN}.\r\n     * @param {boolean=} noAssert Whether to skip assertions of offsets and values. Defaults to\r\n     *  {@link ByteBuffer.DEFAULT_NOASSERT}.\r\n     * @returns {!ByteBuffer} ByteBuffer\r\n     * @expose\r\n     */\r\n    ByteBuffer.fromUTF8 = function(str, littleEndian, noAssert) {\r\n        if (!noAssert)\r\n            if (typeof str !== 'string')\r\n                throw TypeError(\"Illegal str: Not a string\");\r\n        var bb = new ByteBuffer(0, littleEndian, noAssert);\r\n        bb.buffer = new Buffer(str, \"utf8\");\r\n        bb.limit = bb.buffer.length;\r\n        return bb;\r\n    };\r\n\r\n\r\n    /**\r\n     * node-memcpy. This is an optional binding dependency and may not be present.\r\n     * @function\r\n     * @param {!(Buffer|ArrayBuffer|Uint8Array)} target Destination\r\n     * @param {number|!(Buffer|ArrayBuffer)} targetStart Destination start, defaults to 0.\r\n     * @param {(!(Buffer|ArrayBuffer|Uint8Array)|number)=} source Source\r\n     * @param {number=} sourceStart Source start, defaults to 0.\r\n     * @param {number=} sourceEnd Source end, defaults to capacity.\r\n     * @returns {number} Number of bytes copied\r\n     * @throws {Error} If any index is out of bounds\r\n     * @expose\r\n     */\r\n    ByteBuffer.memcpy = memcpy;\r\n\r\n    return ByteBuffer;\r\n\r\n})();\r\n","// @flow\n\nexport function from(lcid: number): string {\n\tconst locale = lcidToLocale[lcid.toString()]\n\tif (locale) return locale\n\telse throw new Error(`unknown LCID ${lcid}`)\n}\n\nexport function to(locale: string): number {\n\tconst lcid = localeToLcid[locale]\n\tif (lcid) return lcid\n\telse throw new Error(`unkown locale ${locale}`)\n}\n\nconst lcidToLocale = {\n\t'4': 'zh_CHS',\n\t'1025': 'ar_SA',\n\t'1026': 'bg_BG',\n\t'1027': 'ca_ES',\n\t'1028': 'zh_TW',\n\t'1029': 'cs_CZ',\n\t'1030': 'da_DK',\n\t'1031': 'de_DE',\n\t'1032': 'el_GR',\n\t'1033': 'en_US',\n\t'1034': 'es_ES',\n\t'1035': 'fi_FI',\n\t'1036': 'fr_FR',\n\t'1037': 'he_IL',\n\t'1038': 'hu_HU',\n\t'1039': 'is_IS',\n\t'1040': 'it_IT',\n\t'1041': 'ja_JP',\n\t'1042': 'ko_KR',\n\t'1043': 'nl_NL',\n\t'1044': 'nb_NO',\n\t'1045': 'pl_PL',\n\t'1046': 'pt_BR',\n\t'1047': 'rm_CH',\n\t'1048': 'ro_RO',\n\t'1049': 'ru_RU',\n\t'1050': 'hr_HR',\n\t'1051': 'sk_SK',\n\t'1052': 'sq_AL',\n\t'1053': 'sv_SE',\n\t'1054': 'th_TH',\n\t'1055': 'tr_TR',\n\t'1056': 'ur_PK',\n\t'1057': 'id_ID',\n\t'1058': 'uk_UA',\n\t'1059': 'be_BY',\n\t'1060': 'sl_SI',\n\t'1061': 'et_EE',\n\t'1062': 'lv_LV',\n\t'1063': 'lt_LT',\n\t'1064': 'tg_TJ',\n\t'1065': 'fa_IR',\n\t'1066': 'vi_VN',\n\t'1067': 'hy_AM',\n\t'1069': 'eu_ES',\n\t'1070': 'wen_DE',\n\t'1071': 'mk_MK',\n\t'1074': 'tn_ZA',\n\t'1076': 'xh_ZA',\n\t'1077': 'zu_ZA',\n\t'1078': 'af_ZA',\n\t'1079': 'ka_GE',\n\t'1080': 'fo_FO',\n\t'1081': 'hi_IN',\n\t'1082': 'mt_MT',\n\t'1083': 'se_NO',\n\t'1086': 'ms_MY',\n\t'1087': 'kk_KZ',\n\t'1088': 'ky_KG',\n\t'1089': 'sw_KE',\n\t'1090': 'tk_TM',\n\t'1092': 'tt_RU',\n\t'1093': 'bn_IN',\n\t'1094': 'pa_IN',\n\t'1095': 'gu_IN',\n\t'1096': 'or_IN',\n\t'1097': 'ta_IN',\n\t'1098': 'te_IN',\n\t'1099': 'kn_IN',\n\t'1100': 'ml_IN',\n\t'1101': 'as_IN',\n\t'1102': 'mr_IN',\n\t'1103': 'sa_IN',\n\t'1104': 'mn_MN',\n\t'1105': 'bo_CN',\n\t'1106': 'cy_GB',\n\t'1107': 'kh_KH',\n\t'1108': 'lo_LA',\n\t'1109': 'my_MM',\n\t'1110': 'gl_ES',\n\t'1111': 'kok_IN',\n\t'1114': 'syr_SY',\n\t'1115': 'si_LK',\n\t'1118': 'am_ET',\n\t'1121': 'ne_NP',\n\t'1122': 'fy_NL',\n\t'1123': 'ps_AF',\n\t'1124': 'fil_PH',\n\t'1125': 'div_MV',\n\t'1128': 'ha_NG',\n\t'1130': 'yo_NG',\n\t'1131': 'quz_BO',\n\t'1132': 'ns_ZA',\n\t'1133': 'ba_RU',\n\t'1134': 'lb_LU',\n\t'1135': 'kl_GL',\n\t'1144': 'ii_CN',\n\t'1146': 'arn_CL',\n\t'1148': 'moh_CA',\n\t'1150': 'br_FR',\n\t'1152': 'ug_CN',\n\t'1153': 'mi_NZ',\n\t'1154': 'oc_FR',\n\t'1155': 'co_FR',\n\t'1156': 'gsw_FR',\n\t'1157': 'sah_RU',\n\t'1158': 'qut_GT',\n\t'1159': 'rw_RW',\n\t'1160': 'wo_SN',\n\t'1164': 'gbz_AF',\n\t'2049': 'ar_IQ',\n\t'2052': 'zh_CN',\n\t'2055': 'de_CH',\n\t'2057': 'en_GB',\n\t'2058': 'es_MX',\n\t'2060': 'fr_BE',\n\t'2064': 'it_CH',\n\t'2067': 'nl_BE',\n\t'2068': 'nn_NO',\n\t'2070': 'pt_PT',\n\t'2077': 'sv_FI',\n\t'2080': 'ur_IN',\n\t'2092': 'az_AZ',\n\t'2094': 'dsb_DE',\n\t'2107': 'se_SE',\n\t'2108': 'ga_IE',\n\t'2110': 'ms_BN',\n\t'2115': 'uz_UZ',\n\t'2128': 'mn_CN',\n\t'2129': 'bo_BT',\n\t'2141': 'iu_CA',\n\t'2143': 'tmz_DZ',\n\t'2155': 'quz_EC',\n\t'3073': 'ar_EG',\n\t'3076': 'zh_HK',\n\t'3079': 'de_AT',\n\t'3081': 'en_AU',\n\t'3082': 'es_ES',\n\t'3084': 'fr_CA',\n\t'3098': 'sr_SP',\n\t'3131': 'se_FI',\n\t'3179': 'quz_PE',\n\t'4097': 'ar_LY',\n\t'4100': 'zh_SG',\n\t'4103': 'de_LU',\n\t'4105': 'en_CA',\n\t'4106': 'es_GT',\n\t'4108': 'fr_CH',\n\t'4122': 'hr_BA',\n\t'4155': 'smj_NO',\n\t'5121': 'ar_DZ',\n\t'5124': 'zh_MO',\n\t'5127': 'de_LI',\n\t'5129': 'en_NZ',\n\t'5130': 'es_CR',\n\t'5132': 'fr_LU',\n\t'5179': 'smj_SE',\n\t'6145': 'ar_MA',\n\t'6153': 'en_IE',\n\t'6154': 'es_PA',\n\t'6156': 'fr_MC',\n\t'6203': 'sma_NO',\n\t'7169': 'ar_TN',\n\t'7177': 'en_ZA',\n\t'7178': 'es_DO',\n\t'7194': 'sr_BA',\n\t'7227': 'sma_SE',\n\t'8193': 'ar_OM',\n\t'8201': 'en_JA',\n\t'8202': 'es_VE',\n\t'8218': 'bs_BA',\n\t'8251': 'sms_FI',\n\t'9217': 'ar_YE',\n\t'9225': 'en_CB',\n\t'9226': 'es_CO',\n\t'9275': 'smn_FI',\n\t'10241': 'ar_SY',\n\t'10249': 'en_BZ',\n\t'10250': 'es_PE',\n\t'11265': 'ar_JO',\n\t'11273': 'en_TT',\n\t'11274': 'es_AR',\n\t'12289': 'ar_LB',\n\t'12297': 'en_ZW',\n\t'12298': 'es_EC',\n\t'13313': 'ar_KW',\n\t'13321': 'en_PH',\n\t'13322': 'es_CL',\n\t'14337': 'ar_AE',\n\t'14346': 'es_UR',\n\t'15361': 'ar_BH',\n\t'15370': 'es_PY',\n\t'16385': 'ar_QA',\n\t'16394': 'es_BO',\n\t'17417': 'en_MY',\n\t'17418': 'es_SV',\n\t'18441': 'en_IN',\n\t'18442': 'es_HN',\n\t'19466': 'es_NI',\n\t'20490': 'es_PR',\n\t'21514': 'es_US',\n\t'31748': 'zh_CHT'\n}\nconst localeToLcid = Object.entries(lcidToLocale)\n\t\t\t\t\t\t   .reduce((acc, [k, v]) => Object.assign(acc, {[(v: any)]: k}), {})","// @flow\nimport type {PropertyTag} from \"../property_tags\"\nimport {PropertyTagLiterals} from \"../property_tags\"\nimport type {Property} from \"../property\"\nimport ByteBuffer from \"bytebuffer\"\nimport * as lcid from \"./lcid\"\n\n// TODO text encoder should be available on global object already but for some reason isn't (in node)\n// $FlowFixMe[missing-export]\nimport {TextEncoder} from \"util\"\n\nfunction Xp(n: number, p: number): string {\n\treturn n.toString(16).padStart(p, '0').toUpperCase()\n}\n\nfunction xp(n: number, p: number): string {\n\treturn n.toString(16).padStart(p, '0')\n}\n\nexport function x2(n: number): string {\n\treturn xp(n, 2)\n}\n\n/**\n * get an uppercase hex string of a number zero-padded to 2 digits\n * @param n {number}\n * @returns {string}\n */\nexport function X2(n: number): string {\n\treturn Xp(n, 2)\n}\n\n/**\n * get an uppercase hex string of a number zero-padded to 4 digits\n * @param n {number} the number\n * @returns {string} 4-digit uppercase hex representation of the number\n */\nexport function X4(n: number): string {\n\treturn Xp(n, 4)\n}\n\n/**\n * get an uppercase hex string of a number zero-padded to 8 digits\n * @param n {number} the number\n * @returns {string}\n */\nexport function X8(n: number): string {\n\treturn Xp(n, 8)\n}\n\n\nexport function name(tag: PropertyTag | Property): string {\n\treturn PropertyTagLiterals.SubStorageStreamPrefix + X4(tag.id) + X4(tag.type)\n}\n\nexport function shortName(tag: PropertyTag | Property): string {\n\treturn X4(tag.id)\n}\n\n/**\n * convert UTF-8 Uint8Array to string\n * @param array {Uint8Array}\n * @returns {string}\n */\nexport function utf8ArrayToString(array: Uint8Array): string {\n\treturn new TextDecoder().decode(array)\n}\n\n/**\n * convert string to UTF-8 Uint8Array\n * @param str {string}\n * @returns {Uint8Array}\n */\nexport function stringToUtf8Array(str: string): Uint8Array {\n\treturn new TextEncoder().encode(str)\n}\n\n/**\n * convert string to UTF-16LE Uint8Array\n * @param str {string}\n * @returns {Uint8Array|Uint8Array}\n */\nexport function stringToUtf16LeArray(str: string): Uint8Array {\n\tconst u16 = Uint16Array.from(str.split('').map(c => c.charCodeAt(0)))\n\treturn new Uint8Array(u16.buffer, u16.byteOffset, u16.byteLength)\n}\n\n/**\n * convert UTF-16LE Uint8Array to string\n * @param u8 {Uint8Array} raw bytes\n * @returns {string}\n */\nexport function utf16LeArrayToString(u8: Uint8Array): string {\n\tconst u16 = new Uint16Array(u8.buffer, u8.byteOffset, u8.byteLength)\n\t// mapping directly over u16 insists on converting the result to Uint16Array again.\n\treturn Array.from(u16).map(c => String.fromCharCode(c)).join('')\n}\n\n/**\n * convert a string to a Uint8Array with terminating 0 byte\n * @throws if the string contains characters not in the ANSI range (0-255)\n * @param str\n */\nexport function stringToAnsiArray(str: string): Uint8Array {\n\tconst codes = str.split('').map(c => c.charCodeAt(0))\n\tif (codes.findIndex(c => c > 255) > -1) throw new Error(\"can't encode ansi string with char codes > 255!\")\n\tcodes.push(0)\n\treturn Uint8Array.from(codes)\n}\n\n/**\n * decode a string from a Uint8Array with terminating 0, interpreting the values as\n * ANSI characters.\n * @throws if the array does not have a terminating 0\n * @param u8 {Uint8Array}\n * @returns {string}\n */\nexport function ansiArrayToString(u8: Uint8Array): string {\n\tif (u8.length === 0 || u8[u8.length - 1] !== 0) throw new Error(\"can't decode ansi array without terminating 0 byte!\")\n\treturn Array.from(new Uint8Array(u8.buffer, u8.byteOffset, u8.byteLength - 1))\n\t\t\t\t.map(c => String.fromCharCode(c))\n\t\t\t\t.join('')\n}\n\n/**\n * convert a file name to its DOS 8.3 version.\n * @param fileName {string} a file name (not a path!)\n */\nexport function fileNameToDosFileName(fileName: string): string {\n\tconst parts = fileName.split(\".\")\n\tlet name, extension\n\tif (parts.length < 2) {\n\t\tname = parts[0]\n\t\textension = null\n\t} else {\n\t\tname = parts.slice(0, -1).join('')\n\t\textension = parts[parts.length - 1]\n\t}\n\tif (name !== \"\") {\n\t\tname = (name.length > 8 ? name.substring(0, 6) + \"~1\" : name).toUpperCase()\n\t}\n\tif (extension != null) {\n\t\tname += \".\" + (\n\t\t\textension.length > 3\n\t\t\t\t? extension.substring(0, 3)\n\t\t\t\t: extension\n\t\t).toUpperCase()\n\t}\n\n\treturn name\n}\n\n/**\n * turn a ByteBuffer into a Uint8Array, using the current offset as a limit.\n * buf.limit will change to buf.offset, and its buf.offset will be reset to 0.\n * @param buf {ByteBuffer} the buffer to convert\n * @returns {Uint8Array} a new Uint8Array containing the\n */\nexport function byteBufferAsUint8Array(buf: ByteBuffer): Uint8Array {\n\tbuf.limit = buf.offset\n\tbuf.offset = 0\n\treturn new Uint8Array(buf.toBuffer(true))\n}\n\n/**\n * make an new byte buffer with the correct settings\n * @param otherBuffer {ByteBuffer | ArrayBuffer | Uint8Array} other buffer to wrap into a ByteBuffer\n * @param initCap {number?} initial capacity. ignored if otherBuffer is given.\n */\nexport function makeByteBuffer(initCap: ?number, otherBuffer?: ByteBuffer | ArrayBuffer | Uint8Array): ByteBuffer {\n\tif (initCap != null && initCap < 0) throw new Error(\"initCap must be non-negative!\")\n\treturn otherBuffer == null\n\t\t? new ByteBuffer(initCap || 1, ByteBuffer.LITTLE_ENDIAN)\n\t\t: ByteBuffer.wrap(otherBuffer, null, ByteBuffer.LITTLE_ENDIAN)\n}\n\nexport function getPathExtension(p: string): string {\n\tif (!p.includes(\".\")) return \"\"\n\tconst parts = p.split(\".\")\n\treturn \".\" + parts[parts.length - 1]\n}\n\nexport function isNullOrEmpty(str: ?string): boolean {\n\treturn !str || str === \"\"\n}\n\nexport function isNullOrWhiteSpace(str: ?string): boolean {\n\treturn str == null || str.trim() === \"\"\n}\n\nexport function splitAtUnquoted(input: string, sep: string): Array<string> {\n\tif (sep.length !== 1) throw new Error(\"sep needs to be a char!\")\n\tconst elements = []\n\n\tlet lastSplitLocation = 0\n\tlet insideQuote = false\n\tconst characters = input.split(\"\")\n\n\tfor (let i = 0; i < characters.length; i++) {\n\t\tlet character = characters[i]\n\t\tif (character === '\\\"') insideQuote = !insideQuote\n\n\t\t// Only split if we are not inside quotes\n\t\tif (character !== sep || insideQuote) continue\n\t\t// We need to split\n\t\tconst length = i - lastSplitLocation\n\t\telements.push(input.substring(lastSplitLocation, lastSplitLocation + length))\n\n\t\t// Update last split location\n\t\t// + 1 so that we do not include the character used to split with next time\n\t\tlastSplitLocation = i + 1\n\t}\n\n\t// Add the last part\n\telements.push(input.substring(lastSplitLocation));\n\n\treturn elements\n}\n\nexport function unquote(input: string): string {\n\tif (input == null) throw new Error(\"text needs to be a string\")\n\treturn input.length > 1 && input[0] === '\"' && input[input.length - 1] === '\"'\n\t\t? input.substring(1, input.length - 1)\n\t\t: input\n}\n\nexport function localeId(): number {\n\treturn lcid.to(getLang())\n}\n\nfunction getLang(): string {\n\tif (typeof navigator != 'undefined')\n\t\tif (navigator.language != null) return navigator.language\n\t\telse return (navigator.languages || [\"en_US\"]) [0]\n\telse\n\t\treturn \"en_US\"\n}","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// @flow\nimport {oADateToDate, fileTimeToDate, } from \"./utils/time\"\nimport {name, utf8ArrayToString, X4} from './utils/utils'\nimport type {PropertyTypeEnum} from \"./enums\"\nimport {PropertyFlag, PropertyType} from \"./enums\"\nimport {v4} from 'uuid'\n\n/**\n * A property inside the MSG file\n */\nexport class Property {\n    id: number\n    type: PropertyTypeEnum\n    _flags: number\n    _multiValue: boolean\n    _data: Uint8Array\n\n    constructor(obj: { id: number, type: PropertyTypeEnum, data: Uint8Array, multiValue?: boolean, flags?: number }) {\n        this.id = obj.id\n        this.type = obj.type\n        this._data = obj.data\n        this._multiValue = obj.multiValue == null ? false : obj.multiValue\n        this._flags = obj.flags == null ? 0 : obj.flags\n    }\n\n    name(): string {\n        return name(this)\n    }\n\n    shortName(): string {\n        return X4(this.id)\n    }\n\n    flagsCollection(): Array<number> {\n        const result = [];\n\n        if ((this._flags & PropertyFlag.PROPATTR_MANDATORY) !== 0)\n            result.push(PropertyFlag.PROPATTR_MANDATORY)\n\n        if ((this._flags & PropertyFlag.PROPATTR_READABLE) !== 0)\n            result.push(PropertyFlag.PROPATTR_READABLE)\n\n        if ((this._flags & PropertyFlag.PROPATTR_WRITABLE) !== 0)\n            result.push(PropertyFlag.PROPATTR_WRITABLE)\n\n        return result\n    }\n\n    asInt(): number {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_SHORT:\n                return view.getInt16(0, false)\n            case PropertyType.PT_LONG:\n                return view.getInt32(0, false)\n            default:\n                throw new Error(\"type is not PT_SHORT or PT_LONG\")\n        }\n    }\n\n    asSingle(): number {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_FLOAT:\n                return view.getFloat32(0, false)\n            default:\n                throw new Error(\"type is not PT_FLOAT\")\n        }\n    }\n\n    asDouble(): number {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_FLOAT:\n                return view.getFloat64(0, false)\n            default:\n                throw new Error(\"type is not PT_DOUBLE\")\n        }\n    }\n\n    asDecimal(): number {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_FLOAT:\n                // TODO: is there a .Net decimal equivalent for js?\n                return view.getFloat32(0, false)\n            default:\n                throw new Error(\"type is not PT_FLOAT\")\n        }\n    }\n\n    asDateTime(): Date {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_APPTIME:\n                // msg stores .Net DateTime as OADate, number of days since 30 dec 1899 as a double value\n                const oaDate = view.getFloat64(0, false)\n                return oADateToDate(oaDate)\n            case PropertyType.PT_SYSTIME:\n                // https://docs.microsoft.com/de-de/office/client-developer/outlook/mapi/filetime\n                const fileTimeLower = view.getUint32(0, false)\n                const fileTimeUpper = view.getUint32(4, false)\n                return fileTimeToDate(fileTimeLower, fileTimeUpper)\n            default:\n                throw new Error(\"type is not PT_APPTIME or PT_SYSTIME\")\n        }\n    }\n\n    asBool(): boolean {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_BOOLEAN:\n                return Boolean(this._data[0])\n            default:\n                throw new Error(\"type is not PT_BOOLEAN\")\n        }\n    }\n\n    // TODO: this will fail for very large numbers\n    asLong(): number {\n        const view = new DataView(this._data.buffer, 0)\n        switch (this.type) {\n            case PropertyType.PT_LONG:\n            case PropertyType.PT_LONGLONG:\n                const val = view.getFloat64(0, false)\n                if (val > Number.MAX_SAFE_INTEGER) throw new Error(\"implementation can't handle big longs yet\")\n                return parseInt(val)\n            default:\n                throw new Error(\"type is not PT_LONG\")\n        }\n    }\n\n    asString(): string {\n        switch (this.type) {\n            case PropertyType.PT_UNICODE:\n                return utf8ArrayToString(this._data)\n            case PropertyType.PT_STRING8:\n                return String.fromCharCode(...this._data)\n            default:\n                throw new Error(\"Type is not PT_UNICODE or PT_STRING8\");\n        }\n    }\n\n    asGuid(): Uint8Array {\n        switch (this.type) {\n            case PropertyType.PT_CLSID:\n                return v4({random: this._data.slice(0, 16)})\n            default:\n                throw new Error(\"Type is not PT_CLSID\");\n        }\n    }\n\n    asBinary(): Uint8Array {\n        switch (this.type) {\n            case PropertyType.PT_BINARY:\n                return this._data.slice()\n            default:\n                throw new Error(\"Type is not PT_BINARY\");\n        }\n    }\n}","// @flow\nimport type {PropertyTagsEnum} from \"./property_tags\"\nimport {PropertyTagLiterals, PropertyTags} from \"./property_tags\"\nimport {PropertyFlag, PropertyType} from \"./enums\"\nimport {Property} from \"./property\"\nimport ByteBuffer from \"bytebuffer\"\nimport {\n    byteBufferAsUint8Array,\n    makeByteBuffer,\n    stringToAnsiArray,\n    stringToUtf16LeArray,\n    stringToUtf8Array\n} from \"./utils/utils\"\nimport type {CFBStorage} from \"./cfb_storage\"\n\n\nexport class Properties extends Array<Property> {\n\n    /**\n     * add a prop it it doesn't exist, otherwise replace it\n     */\n    addOrReplaceProperty(tag: PropertyTagsEnum, obj: any, flags: number = PropertyFlag.PROPATTR_READABLE | PropertyFlag.PROPATTR_WRITABLE) {\n        const index = this.findIndex(p => p.id === tag.id)\n        if (index >= 0) this.splice(index, 1)\n        this.addProperty(tag, obj, flags)\n    }\n\n    addProperty(\n        tag: PropertyTagsEnum,\n        value: any,\n        flags: number = PropertyFlag.PROPATTR_READABLE | PropertyFlag.PROPATTR_WRITABLE\n    ) {\n        if (value == null) return\n        let data = new Uint8Array(0)\n        let view\n        switch (tag.type) {\n            case PropertyType.PT_APPTIME:\n                data = new Uint8Array(8)\n                view = new DataView(data.buffer)\n                view.setFloat64(0, value, true)\n                break\n\n            case PropertyType.PT_SYSTIME:\n                data = new Uint8Array(8)\n                view = new DataView(data.buffer)\n                view.setInt32(0, value.fileTimeLower, true)\n                view.setInt32(4, value.fileTimeUpper, true)\n                break\n\n            case PropertyType.PT_SHORT:\n                data = new Uint8Array(2)\n                view = new DataView(data.buffer)\n                view.setInt16(0, value, true)\n                break\n\n            case PropertyType.PT_ERROR:\n            case PropertyType.PT_LONG:\n                data = new Uint8Array(4)\n                view = new DataView(data.buffer)\n                view.setInt32(0, value, true)\n                break\n\n            case PropertyType.PT_FLOAT:\n                data = new Uint8Array(4)\n                view = new DataView(data.buffer)\n                view.setFloat32(0, value, true)\n                break\n\n            case PropertyType.PT_DOUBLE:\n                data = new Uint8Array(8)\n                view = new DataView(data.buffer)\n                view.setFloat64(0, value, true)\n                break\n\n            //case PropertyType.PT_CURRENCY:\n            //    data = (byte[]) obj\n            //    break\n\n            case PropertyType.PT_BOOLEAN:\n                data = Uint8Array.from([value ? 1 : 0])\n                break\n\n            case PropertyType.PT_I8:\n                // TODO:\n                throw new Error(\"PT_I8 property type is not supported (64 bit ints)!\")\n            // data = BitConverter.GetBytes((long)obj)\n\n            case PropertyType.PT_UNICODE:\n                data = stringToUtf16LeArray(value)\n                break;\n\n            case PropertyType.PT_STRING8:\n                data = stringToAnsiArray(value)\n                break\n\n            case PropertyType.PT_CLSID:\n                // GUIDs should be Uint8Arrays already\n                data = value\n                break;\n\n            case PropertyType.PT_BINARY:\n                // TODO: make user convert object to Uint8Array and just assign.\n                if (value instanceof Uint8Array) {\n                    data = value\n                    break\n                }\n                const objType = typeof value\n                switch (objType) {\n                    case \"boolean\":\n                        data = Uint8Array.from(value)\n                        break\n                    case \"TypeCode.SByte\":\n                        //data = BitConverter.GetBytes((sbyte)obj)\n                        break\n                    case \"TypeCode.Byte\":\n                        //data = BitConverter.GetBytes((byte)obj)\n                        break\n                    case \"TypeCode.Int16\":\n                        //data = BitConverter.GetBytes((short)obj)\n                        break\n                    case \"TypeCode.UInt16\":\n                        // data = BitConverter.GetBytes((uint)obj)\n                        break\n                    case \"TypeCode.Int32\":\n                        //data = BitConverter.GetBytes((int)obj)\n                        break\n                    case \"TypeCode.UInt32\":\n                        // data = BitConverter.GetBytes((uint)obj)\n                        break\n                    case \"TypeCode.Int64\":\n                        // data = BitConverter.GetBytes((long)obj)\n                        break\n                    case \"TypeCode.UInt64\":\n                        // data = BitConverter.GetBytes((ulong)obj)\n                        break\n                    case \"TypeCode.Single\":\n                        // data = BitConverter.GetBytes((float)obj)\n                        break\n                    case \"TypeCode.Double\":\n                        // data = BitConverter.GetBytes((double)obj)\n                        break\n                    case \"TypeCode.DateTime\":\n                        // DateTime.Ticks is a long.\n                        //  time elapsed time since 12:00:00 midnight, January 1, 0001 in 100-ns-intervals\n                        // data = BitConverter.GetBytes(((DateTime)obj).Ticks)\n                        break\n                    case \"string\":\n                        data = stringToUtf8Array(value)\n                        break\n                    default:\n                        throw new Error(\"PT_BINARY property type value out of range!\")\n                }\n                break\n            case PropertyType.PT_NULL:\n                break\n            case PropertyType.PT_ACTIONS:\n                throw new Error(\"PT_ACTIONS property type is not supported\")\n            case PropertyType.PT_UNSPECIFIED:\n                throw new Error(\"PT_UNSPECIFIED property type is not supported\")\n            case PropertyType.PT_OBJECT:\n                // TODO: Add support for MSG\n                break\n            case PropertyType.PT_SVREID:\n                throw new Error(\"PT_SVREID property type is not supported\")\n            case PropertyType.PT_SRESTRICT:\n                throw new Error(\"PT_SRESTRICT property type is not supported\")\n            default:\n                throw new Error(\"type is out of range!\")\n        }\n\n        this.push(new Property({\n            id: tag.id,\n            type: tag.type,\n            flags,\n            data\n        }))\n    }\n\n    /**\n     * writes the properties structure to a cfb stream in storage\n     * @param storage\n     * @param messageSize\n     * @param prefix a function that will be called with the buffer before the properties get written to it.\n     * @returns {number}\n     */\n    writeProperties(storage: CFBStorage, prefix: ByteBuffer=> void, messageSize?: number): number {\n        const buf = makeByteBuffer()\n        prefix(buf)\n        let size = 0\n\n        // The data inside the property stream (1) MUST be an array of 16-byte entries. The number of properties,\n        // each represented by one entry, can be determined by first measuring the size of the property stream (1),\n        // then subtracting the size of the header from it, and then dividing the result by the size of one entry.\n        // The structure of each entry, representing one property, depends on whether the property is a fixed length\n        // property or not.\n        this.forEach(property => {\n            // property tag: A 32-bit value that contains a property type and a property ID. The low-order 16 bits\n            // represent the property type. The high-order 16 bits represent the property ID.\n            buf.writeUint16(property.type) // 2 bytes\n            buf.writeUint16(property.id) // 2 bytes\n            buf.writeUint32(property._flags) // 4 bytes\n            switch (property.type) {\n                //case PropertyType.PT_ACTIONS:\n                //    break\n\n                case PropertyType.PT_I8:\n                case PropertyType.PT_APPTIME:\n                case PropertyType.PT_SYSTIME:\n                case PropertyType.PT_DOUBLE:\n                    buf.append(property._data)\n                    break\n\n                case PropertyType.PT_ERROR:\n                case PropertyType.PT_LONG:\n                case PropertyType.PT_FLOAT:\n                    buf.append(property._data)\n                    buf.writeUint32(0)\n                    break\n\n                case PropertyType.PT_SHORT:\n                    buf.append(property._data)\n                    buf.writeUint32(0)\n                    buf.writeUint16(0)\n                    break\n\n                case PropertyType.PT_BOOLEAN:\n                    buf.append(property._data)\n                    buf.append(new Uint8Array(7))\n                    break\n\n                //case PropertyType.PT_CURRENCY:\n                //    binaryWriter.Write(property.Data)\n                //    break\n\n                case PropertyType.PT_UNICODE:\n                    // Write the length of the property to the propertiesstream\n                    buf.writeInt32(property._data.length + 2)\n                    buf.writeUint32(0)\n                    storage.addStream(property.name(), property._data)\n                    size += property._data.length\n                    break\n\n                case PropertyType.PT_STRING8:\n                    // Write the length of the property to the propertiesstream\n                    buf.writeInt32(property._data.length + 1)\n                    buf.writeUint32(0)\n                    storage.addStream(property.name(), property._data)\n                    size += property._data.length\n                    break\n\n                case PropertyType.PT_CLSID:\n                    buf.append(property._data)\n                    break\n\n                //case PropertyType.PT_SVREID:\n                //    break\n\n                //case PropertyType.PT_SRESTRICT:\n                //    storage.AddStream(property.Name).SetData(property.Data)\n                //    break\n\n                case PropertyType.PT_BINARY:\n                    // Write the length of the property to the propertiesstream\n                    buf.writeInt32(property._data.length)\n                    buf.writeUint32(0)\n                    storage.addStream(property.name(), property._data)\n                    size += property._data.length\n                    break\n\n                case PropertyType.PT_MV_SHORT:\n                    break\n                case PropertyType.PT_MV_LONG:\n                    break\n\n                case PropertyType.PT_MV_FLOAT:\n                    break\n\n                case PropertyType.PT_MV_DOUBLE:\n                    break\n\n                case PropertyType.PT_MV_CURRENCY:\n                    break\n\n                case PropertyType.PT_MV_APPTIME:\n                    break\n\n                case PropertyType.PT_MV_LONGLONG:\n                    break\n\n                case PropertyType.PT_MV_UNICODE:\n                    // PropertyType.PT_MV_TSTRING\n                    break\n\n                case PropertyType.PT_MV_STRING8:\n                    break\n\n                case PropertyType.PT_MV_SYSTIME:\n                    break\n\n                //case PropertyType.PT_MV_CLSID:\n                //    break\n\n                case PropertyType.PT_MV_BINARY:\n                    break\n\n                case PropertyType.PT_UNSPECIFIED:\n                    break\n\n                case PropertyType.PT_NULL:\n                    break\n\n                case PropertyType.PT_OBJECT:\n                    // TODO: Adding new MSG file\n                    break\n            }\n        })\n\n        if (messageSize != null) {\n            buf.writeUint16(PropertyTags.PR_MESSAGE_SIZE.type)  // 2 bytes\n            buf.writeUint16(PropertyTags.PR_MESSAGE_SIZE.id)    // 2 bytes\n            buf.writeUint32(PropertyFlag.PROPATTR_READABLE | PropertyFlag.PROPATTR_WRITABLE) // 4 bytes\n            buf.writeUint64(messageSize + size + 8)\n            buf.writeUint32(0)\n        }\n\n        // Make the properties stream\n        size += buf.offset\n        storage.addStream(PropertyTagLiterals.PropertiesStreamName, byteBufferAsUint8Array(buf))\n        // if(!storage.TryGetStream(PropertyTags.PropertiesStreamName, out var propertiesStream))\n        // propertiesStream = storage.AddStream(PropertyTags.PropertiesStreamName);\n        // TODO: is this the written length?\n        return size\n    }\n}","// @flow\n\nimport {Properties} from \"../properties\"\nimport type ByteBuffer from \"bytebuffer\"\nimport type {CFBStorage} from \"../cfb_storage\"\n\n/**\n * The properties stream contained inside the top level of the .msg file, which represents the Message object itself.\n */\nexport class TopLevelProperties extends Properties {\n    nextRecipientId: number\n    nextAttachmentId: number\n    recipientCount: number\n    attachmentCount: number\n\n    // TODO: add constructor to read in existing CFB stream\n\n    /**\n     *\n     * @param storage\n     * @param prefix\n     * @param messageSize\n     */\n    writeProperties(storage: CFBStorage, prefix: ByteBuffer => void, messageSize?: number): number {\n        // prefix required by the standard: 32 bytes\n        const topLevelPropPrefix = buf => {\n            prefix(buf)\n            // Reserved(8 bytes): This field MUST be set to zero when writing a .msg file and MUST be ignored\n            // when reading a.msg file.\n            buf.writeUint64(0)\n            // Next Recipient ID(4 bytes): The ID to use for naming the next Recipient object storage if one is\n            // created inside the .msg file. The naming convention to be used is specified in section 2.2.1.If\n            // no Recipient object storages are contained in the.msg file, this field MUST be set to 0.\n            buf.writeUint32(this.nextRecipientId)\n            // Next Attachment ID (4 bytes): The ID to use for naming the next Attachment object storage if one\n            // is created inside the .msg file. The naming convention to be used is specified in section 2.2.2.\n            // If no Attachment object storages are contained in the.msg file, this field MUST be set to 0.\n            buf.writeUint32(this.nextAttachmentId)\n            // Recipient Count(4 bytes): The number of Recipient objects.\n            buf.writeUint32(this.recipientCount)\n            // Attachment Count (4 bytes): The number of Attachment objects.\n            buf.writeUint32(this.attachmentCount)\n            // Reserved(8 bytes): This field MUST be set to 0 when writing a msg file and MUST be ignored when\n            // reading a msg file.\n            buf.writeUint64(0)\n        }\n        return super.writeProperties(storage, topLevelPropPrefix, messageSize);\n    }\n}","// @flow\n\nimport {byteBufferAsUint8Array, makeByteBuffer} from \"../utils/utils\"\nimport {PropertyTagLiterals} from \"../property_tags\"\nimport type {PropertyKindEnum} from \"../enums\"\nimport type ByteBuffer from 'bytebuffer'\n\n/**\n * The entry stream MUST be named \"__substg1.0_00030102\" and consist of 8-byte entries, one for each\n * named property being stored. The properties are assigned unique numeric IDs (distinct from any property\n * ID assignment) starting from a base of 0x8000. The IDs MUST be numbered consecutively, like an array.\n * In this stream, there MUST be exactly one entry for each named property of the Message object or any of\n * its subobjects. The index of the entry for a particular ID is calculated by subtracting 0x8000 from it.\n * For example, if the ID is 0x8005, the index for the corresponding 8-byte entry would be 0x8005 – 0x8000 = 5.\n * The index can then be multiplied by 8 to get the actual byte offset into the stream from where to start\n * reading the corresponding entry.\n *\n * see: https://msdn.microsoft.com/en-us/library/ee159689(v=exchg.80).aspx\n */\nexport class EntryStream extends Array<EntryStreamItem> {\n\n    /**\n     * creates this object and reads all the EntryStreamItems from\n     * the given storage\n     * @param storage {any}\n     */\n    constructor(storage?: any) {\n        super();\n        if (storage == null) return\n        const stream = storage.getStream(PropertyTagLiterals.EntryStream)\n        if (stream.byteLength <= 0) {\n            storage.addStream(PropertyTagLiterals.EntryStream, Uint8Array.of())\n        }\n\n        const buf = makeByteBuffer(null, stream)\n        while (buf.offset < buf.limit) {\n            const entryStreamItem = EntryStreamItem.fromBuffer(buf)\n            this.push(entryStreamItem)\n        }\n    }\n\n    /**\n     * writes all the EntryStreamItems as a stream to the storage\n     * @param storage {any}\n     * @param streamName {string?}\n     */\n    write(storage: any, streamName: ?string = PropertyTagLiterals.EntryStream): void {\n        const buf = makeByteBuffer()\n        this.forEach(entry => entry.write(buf))\n        storage.addStream(streamName, byteBufferAsUint8Array(buf))\n    }\n}\n\n/**\n * Represents one item in the EntryStream\n */\nexport class EntryStreamItem {\n\n    /**\n     * the Property Kind subfield of the Index and Kind Information field), this value is the LID part of the\n     * PropertyName structure, as specified in [MS-OXCDATA] section 2.6.1. If this property is a string named\n     * property, this value is the offset in bytes into the strings stream where the value of the Name field of\n     * the PropertyName structure is located.\n     * was ushort\n     * */\n    nameIdentifierOrStringOffset: number\n    nameIdentifierOrStringOffsetHex: string\n    /**\n     * The following structure specifies the stream indexes and whether the property is a numerical\n     * named property or a string named property\n     * @type {IndexAndKindInformation}\n     */\n    indexAndKindInformation: IndexAndKindInformation\n\n\n    /**\n     * creates this objcet and reads all the properties from the given buffer\n     * @param buf {ByteBuffer}\n     */\n    static fromBuffer(buf: ByteBuffer): EntryStreamItem {\n        const nameIdentifierOrStringOffset = buf.readUint16()\n        const indexAndKindInformation = IndexAndKindInformation.fromBuffer(buf)\n\n        return new EntryStreamItem(nameIdentifierOrStringOffset, indexAndKindInformation)\n    }\n\n    /**\n     * creates this object from the properties\n     * @param nameIdentifierOrStringOffset {number}\n     * @param indexAndKindInformation {IndexAndKindInformation}\n     */\n    constructor(nameIdentifierOrStringOffset: number, indexAndKindInformation: IndexAndKindInformation) {\n        this.nameIdentifierOrStringOffset = nameIdentifierOrStringOffset\n        this.nameIdentifierOrStringOffsetHex = nameIdentifierOrStringOffset\n            .toString(16).toUpperCase().padStart(4, '0')\n        this.indexAndKindInformation = indexAndKindInformation\n    }\n\n    /**\n     * write all the internal properties to the given buffer\n     * @param buf {ByteBuffer}\n     */\n    write(buf: ByteBuffer): void {\n        buf.writeUint32(this.nameIdentifierOrStringOffset)\n        const packed = (this.indexAndKindInformation.guidIndex << 1) | this.indexAndKindInformation.propertyKind\n        buf.writeUint16(packed)\n        buf.writeUint16(this.indexAndKindInformation.propertyIndex) //Doesn't seem to be the case in the spec.\n        // Fortunately section 3.2 clears this up.\n    }\n}\n\nexport class IndexAndKindInformation {\n    // System.Uint16\n    propertyIndex: number\n    guidIndex: number\n    // 1 byte\n    propertyKind: PropertyKindEnum\n\n    static fromBuffer(buf: ByteBuffer): IndexAndKindInformation {\n        const propertyIndex = buf.readUint16()\n        const packedValue = buf.readUint16()\n        const guidIndex = (packedValue >>> 1) & 0xFFFF\n        const propertyKind = packedValue & 0x07\n        if (![0xFF, 0x01, 0x00].includes(propertyKind)) throw new Error(\"invalid propertyKind:\" + propertyKind)\n        return new IndexAndKindInformation(propertyIndex, guidIndex, (propertyKind: any))\n    }\n\n    constructor(propertyIndex: number, guidIndex: number, propertyKind: PropertyKindEnum) {\n        this.guidIndex = guidIndex\n        this.propertyIndex = propertyIndex\n        this.propertyKind = propertyKind\n    }\n\n    write(buf: ByteBuffer): void {\n        buf.writeUint16(this.propertyIndex)\n        buf.writeUint32(this.guidIndex + this.propertyKind)\n    }\n}","// @flow\nimport {makeByteBuffer} from \"../utils/utils\"\nimport {PropertyTagLiterals, PropertyTags} from \"../property_tags\"\n\n\n/**\n * The GUID stream MUST be named \"__substg1.0_00020102\". It MUST store the property set GUID\n * part of the property name of all named properties in the Message object or any of its subobjects,\n * except for those named properties that have PS_MAPI or PS_PUBLIC_STRINGS, as described in [MSOXPROPS]\n * section 1.3.2, as their property set GUID.\n * The GUIDs are stored in the stream consecutively like an array. If there are multiple named properties\n * that have the same property set GUID, then the GUID is stored only once and all the named\n * properties will refer to it by its index\n */\nexport class GuidStream extends Array<Uint8Array> {\n\n    /**\n     * create this object\n     * @param storage the storage that contains the PropertyTags.GuidStream\n     */\n    constructor(storage?: any) {\n        super()\n        if (storage == null) return\n        const stream = storage.getStream(PropertyTagLiterals.GuidStream)\n\n        const buf = makeByteBuffer(null, stream)\n        while (buf.offset < buf.limit) {\n            const guid = buf.slice(buf.offset, buf.offset + 16).toArrayBuffer(true)\n            this.push(new Uint8Array(guid))\n        }\n\n    }\n\n    /**\n     * writes all the guids as a stream to the storage\n     * @param storage\n     */\n    write(storage: any): void {\n        const buf = makeByteBuffer()\n        this.forEach(g => {\n            buf.append(g)\n            storage.addStream(PropertyTagLiterals.GuidStream, buf)\n        })\n    }\n}","// @flow\n\nimport {PropertyTagLiterals, PropertyTags} from \"../property_tags\"\nimport {makeByteBuffer} from \"../utils/utils\"\nimport type ByteBuffer from \"bytebuffer\"\nimport type {CFBStorage} from '../cfb_storage'\n\n/**\n * The string stream MUST be named \"__substg1.0_00040102\". It MUST consist of one entry for each\n * string named property, and all entries MUST be arranged consecutively, like in an array.\n * As specified in section 2.2.3.1.2, the offset, in bytes, to use for a particular property is stored in the\n * corresponding entry in the entry stream.That is a byte offset into the string stream from where the\n * entry for the property can be read.The strings MUST NOT be null-terminated. Implementers can add a\n * terminating null character to the string\n * See https://msdn.microsoft.com/en-us/library/ee124409(v=exchg.80).aspx\n */\nexport class StringStream extends Array<StringStreamItem> {\n\n    /**\n     * create StringStream and read all the StringStreamItems from the given storage, if any.\n     */\n    constructor(storage?: CFBStorage) {\n        super()\n        if (storage == null) return\n        const stream = storage.getStream(PropertyTagLiterals.StringStream)\n        const buf = makeByteBuffer(null, stream)\n        while (buf.offset < buf.limit) {\n            this.push(StringStreamItem.fromBuffer(buf))\n        }\n    }\n\n    /**\n     * write all the StringStreamItems as a stream to the storage\n     * @param storage\n     */\n    write(storage: any): void {\n        const buf = makeByteBuffer()\n        this.forEach(s => s.write(buf))\n        storage.addStream(PropertyTagLiterals.StringStream, buf)\n    }\n}\n\n/**\n * Represents one Item in the StringStream\n */\nexport class StringStreamItem {\n\n\n    /**\n     * the length of the following name field in bytes\n     * was uint\n     * @type number\n     */\n    length: number\n\n    /**\n     * A Unicode string that is the name of the property. A new entry MUST always start\n     * on a 4 byte boundary; therefore, if the size of the Name field is not an exact multiple of 4, and\n     * another Name field entry occurs after it, null characters MUST be appended to the stream after it\n     * until the 4-byte boundary is reached.The Name Length field for the next entry will then start at\n     * the beginning of the next 4-byte boundary\n     * @type {string}\n     */\n    name: string\n\n    /**\n     * create a StringStreamItem from a byte buffer\n     * @param buf {ByteBuffer}\n     */\n    static fromBuffer(buf: ByteBuffer): StringStreamItem {\n        const length = buf.readUint32()\n        // Encoding.Unicode.GetString(binaryReader.ReadBytes((int) Length)).Trim('\\0');\n        const name = buf.readUTF8String(length)\n        const boundary = StringStreamItem.get4BytesBoundary(length)\n        buf.offset = buf.offset + boundary\n        return new StringStreamItem(name)\n    }\n\n    constructor(name: string) {\n        this.length = name.length\n        this.name = name\n    }\n\n    /**\n     * write this item to the ByteBuffer\n     * @param buf {ByteBuffer}\n     */\n    write(buf: ByteBuffer): void {\n        buf.writeUint32(this.length)\n        buf.writeUTF8String(this.name)\n        const boundary = StringStreamItem.get4BytesBoundary(this.length)\n        for (let i = 0; i < boundary; i++) {\n            buf.writeUint8(0)\n        }\n    }\n\n    /**\n     * Extract 4 from the given <paramref name=\"length\"/> until the result is smaller\n     * than 4 and then returns this result\n     * @param length {number} was uint\n     */\n    static get4BytesBoundary(length: number): number {\n        if (length === 0) return 4\n        while (length >= 4) length -= 4\n        return length\n    }\n}","// @flow\nimport {TopLevelProperties} from \"./top_level_properties\"\nimport type {PropertyKindEnum, PropertyTypeEnum} from \"../enums\"\nimport {PropertyKind} from \"../enums\"\nimport {PropertyTagLiterals, PropertyTags} from \"../property_tags\"\nimport {EntryStream, EntryStreamItem, IndexAndKindInformation} from \"./entry_stream\"\nimport {GuidStream} from \"./guid_stream\";\nimport {StringStream} from \"./string_stream\";\n\ntype NamedProperty = {|\n    nameIdentifier: number,\n    kind: PropertyKindEnum,\n    nameSize: number,\n    name: string,\n    guid: Uint8Array\n|}\n\ntype NamedPropertyTag = {|\n    id: number,\n    name: string,\n    guid: Uint8Array,\n    propertyType: PropertyTypeEnum\n|}\n\nexport class NamedProperties extends Array<NamedProperty> {\n    _topLevelProperties: TopLevelProperties\n\n    // The offset index for a named property\n    _namedPropertyIndex: number\n\n    constructor(topLevelProperties: TopLevelProperties) {\n        super();\n        this._topLevelProperties = topLevelProperties\n    }\n\n    /**\n     * adds a NamedPropertyTag. Only support for properties by ID for now.\n     * @param mapiTag {NamedProperty}\n     * @param obj {any}\n     */\n    addProperty(mapiTag: NamedPropertyTag, obj: any): void {\n        // Named property field 0000. 0x8000 + property offset\n        this._topLevelProperties.addProperty({\n            id: 0x8000 + this._namedPropertyIndex,\n            type: obj\n        })\n        this._namedPropertyIndex += 1\n        this.push({\n            nameIdentifier: mapiTag.id,\n            guid: mapiTag.guid,\n            kind: PropertyKind.Lid,\n            nameSize: 0,\n            name: \"\",\n        })\n    }\n\n    /**\n     * Writes the properties to the storage. Unfortunately this is going to have to be used after we already written the top level properties.\n     * @param storage {any}\n     * @param messageSize {number}\n     */\n    writeProperties(storage: any, messageSize: number = 0): void {\n        // Grab the nameIdStorage, 3.1 on the SPEC\n        storage = storage.getStorage(PropertyTagLiterals.NameIdStorage)\n\n        const entryStream = new EntryStream(storage)\n        const stringStream = new StringStream(storage)\n        const guidStream = new GuidStream(storage)\n        const entryStream2 = new EntryStream(storage)\n\n        // TODO:\n        const guids = this.map(np => np.guid)\n            .filter(/* TODO: unique*/ () => {\n                throw new Error()\n            })\n\n        guids.forEach(g => guidStream.push(g))\n        this.forEach((np, propertyIndex) => {\n            // (ushort) (guids.IndexOf(namedProperty.Guid) + 3);\n            const guidIndex = guids.indexOf(np.guid) + 3\n\n            // Depending on the property type. This is doing name.\n            entryStream.push(new EntryStreamItem(np.nameIdentifier, new IndexAndKindInformation(propertyIndex, guidIndex, PropertyKind.Lid))) //+3 as per spec.\n            entryStream2.push(new EntryStreamItem(np.nameIdentifier, new IndexAndKindInformation(propertyIndex, guidIndex, PropertyKind.Lid)))\n\n            //3.2.2 of the SPEC [MS-OXMSG]\n            entryStream2.write(storage, NamedProperties._generateStreamString(np.nameIdentifier, guidIndex, np.kind));\n\n            // 3.2.2 of the SPEC Needs to be written, because the stream changes as per named object.\n            entryStream2.splice(0, entryStream2.length)\n        })\n\n        guidStream.write(storage)\n        entryStream.write(storage)\n        stringStream.write(storage)\n    }\n\n    /**\n     * generates the stream strings\n     * @param nameIdentifier {number} was uint\n     * @param guidTarget {number} was uint\n     * @param propertyKind {PropertyKindEnum} 1 byte\n     */\n    static _generateStreamString(nameIdentifier: number, guidTarget: number, propertyKind: PropertyKindEnum): string {\n        switch (propertyKind) {\n            case PropertyKind.Lid:\n                const number = (((4096 + (nameIdentifier ^ (guidTarget << 1)) % 0x1F) << 16) | 0x00000102)\n                return \"__substg1.0_\" + number.toString(16).toUpperCase().padStart(8, '0')\n            default:\n                throw new Error(\"not implemented!\")\n        }\n    }\n}","// @flow\n\nimport type {AddressType} from \"../enums\"\nimport {isNullOrWhiteSpace} from \"../utils/utils\"\n\nexport class Address {\n    addressType: AddressType\n    email: string\n    displayName: string\n\n    constructor(email: string, displayName: string, addressType: AddressType = 'SMTP') {\n        this.email = email\n        this.displayName = isNullOrWhiteSpace(this.displayName)\n            ? email\n            : displayName\n        this.addressType = addressType;\n    }\n}","// @flow\nimport {v4} from 'uuid'\nimport {stringToUtf16LeArray} from \"./utils\"\n\n/// contains MAPI related helper methods\n\nfunction makeUUIDBuffer(): Uint8Array {\n    return v4({}, new Uint8Array(16), 0)\n}\n\nlet instanceKey = null\n\n// A search key is used to compare the data in two objects. An object's search key is stored in its\n// <see cref=\"PropertyTags.PR_SEARCH_KEY\" /> (PidTagSearchKey) property. Because a search key\n// represents an object's data and not the object itself, two different objects with the same data can have the same\n// search key. When an object is copied, for example, both the original object and its copy have the same data and the\n// same search key. Messages and messaging users have search keys. The search key of a message is a unique identifier\n// of  the message's data. Message store providers furnish a message's <see cref=\"PropertyTags.PR_SEARCH_KEY\" />\n// property at message creation time.The search key of an address book entry is computed from its address type(\n// <see cref=\"PropertyTags.PR_ADDRTYPE_W\" /> (PidTagAddressType)) and address\n// (<see cref=\"PropertyTags.PR_EMAIL_ADDRESS_W\" /> (PidTagEmailAddress)). If the address book entry is writable,\n// its search key might not be available until the address type and address have been set by using the\n// IMAPIProp::SetProps method and the entry has been saved by using the IMAPIProp::SaveChanges method.When these\n// address properties change, it is possible for the corresponding search key not to be synchronized with the new\n// values until the changes have been committed with a SaveChanges call. The value of an object's record key can be\n// the same as or different than the value of its search key, depending on the service provider. Some service providers\n// use the same value for an object's search key, record key, and entry identifier.Other service providers assign unique\n// values for each of its objects identifiers.\nexport function generateSearchKey(addressType: string, emailAddress: string): Uint8Array {\n    return stringToUtf16LeArray(addressType + emailAddress)\n}\n\n// A record key is used to compare two objects. Message store and address book objects must have record keys, which\n// are stored in their <see cref=\"PropertyTags.PR_RECORD_KEY\" /> (PidTagRecordKey) property. Because a record key\n// identifies an object and not its data, every instance of an object has a unique record key. The scope of a record\n// key for folders and messages is the message store. The scope for address book containers, messaging users, and\n// distribution lists is the set of top-level containers provided by MAPI for use in the integrated address book.\n// Record keys can be duplicated in another resource. For example, different messages in two different message stores\n// can have the same record key. This is different from long-term entry identifiers; because long-term entry\n// identifiers contain a reference to the service provider, they have a wider scope.A message store's record key is\n// similar in scope to a long-term entry identifier; it should be unique across all message store providers. To ensure\n// this uniqueness, message store providers typically set their record key to a value that is the combination of their\n// <see cref=\"PropertyTags.PR_MDB_PROVIDER\" /> (PidTagStoreProvider) property and an identifier that is unique to the\n// message store.\nexport function generateRecordKey(): Uint8Array {\n    return makeUUIDBuffer()\n}\n\n// This property is a binary value that uniquely identifies a row in a table view. It is a required column in most\n// tables. If a row is included in two views, there are two different instance keys. The instance key of a row may\n// differ each time the table is opened, but remains constant while the table is open. Rows added while a table is in\n// use do not reuse an instance key that was previously used.\n// message store.\nexport function generateInstanceKey(): Uint8Array {\n    if (instanceKey == null) {\n        instanceKey = makeUUIDBuffer().slice(0, 4)\n    }\n    return instanceKey\n}\n\n// The PR_ENTRYID property contains a MAPI entry identifier used to open and edit properties of a particular MAPI\n// object.\n// The PR_ENTRYID property identifies an object for OpenEntry to instantiate and provides access to all of its\n// properties through the appropriate derived interface of IMAPIProp. PR_ENTRYID is one of the base address properties\n// for all messaging users. The PR_ENTRYID for CEMAPI always contains long-term identifiers.\n// - Required on folder objects\n// - Required on message store objects\n// - Required on status objects\n// - Changed in a copy operation\n// - Unique within entire world\nexport function generateEntryId(): Uint8Array {\n    // Encoding.Unicode.GetBytes(Guid.NewGuid().ToString());\n    const val = v4()\n    // v4 without args gives a string\n    return new stringToUtf16LeArray((val: any))\n}","// @flow\nimport {Properties} from '../properties'\nimport type {CFBStorage} from \"../cfb_storage\";\nimport type ByteBuffer from \"bytebuffer\";\n\n/**\n * The properties stream contained inside an Recipient storage object.\n */\nexport class RecipientProperties extends Properties {\n    writeProperties(storage: CFBStorage, prefix: ByteBuffer => void, messageSize?: number): number {\n        const recipPropPrefix = buf => {\n            prefix(buf)\n            // Reserved(8 bytes): This field MUST be set to zero when writing a .msg file and MUST be ignored\n            // when reading a.msg file.\n            buf.writeUint64(0)\n        }\n        return super.writeProperties(storage, recipPropPrefix, messageSize);\n    }\n}","// @flow\n\nimport {Address} from \"./address\"\nimport type {AddressType, MapiObjectTypeEnum, RecipientRowDisplayTypeEnum, RecipientTypeEnum} from \"../enums\"\nimport {MapiObjectType, RecipientRowDisplayType, RecipientType} from \"../enums\"\nimport {PropertyTagLiterals, PropertyTags} from \"../property_tags\"\nimport {generateEntryId, generateInstanceKey, generateSearchKey} from \"../utils/mapi\"\nimport {RecipientProperties} from \"../streams/recipient_properties\"\nimport {X8} from \"../utils/utils\"\nimport type {CFBStorage} from '../cfb_storage'\n\n/**\n * Wrapper around a list of recipients\n */\nexport class Recipients extends Array<Recipient> {\n\n    /**\n     * add a new To-Recipient to the list\n     * @param email email address of the recipient\n     * @param displayName display name of the recipient (optional)\n     * @param addressType address type of the recipient (default SMTP)\n     * @param objectType mapiObjectType of the recipient (default MAPI_MAILUSER)\n     * @param displayType recipientRowDisplayType of the recipient (default MessagingUser)\n     */\n    addTo(\n        email: string,\n        displayName: string = \"\",\n        addressType: AddressType = 'SMTP',\n        objectType: MapiObjectTypeEnum = MapiObjectType.MAPI_MAILUSER,\n        displayType: RecipientRowDisplayTypeEnum = RecipientRowDisplayType.MessagingUser\n    ) {\n        this.push(new Recipient(this.length,\n            email,\n            displayName,\n            addressType,\n            RecipientType.To,\n            objectType,\n            displayType\n        ))\n    }\n\n    /**\n     * add a new Cc-Recipient to the list\n     * @param email email address of the recipient\n     * @param displayName display name of the recipient (optional)\n     * @param addressType address type of the recipient (default SMTP)\n     * @param objectType mapiObjectType of the recipient (default MAPI_MAILUSER)\n     * @param displayType recipientRowDisplayType of the recipient (default MessagingUser)\n     */\n    addCc(\n        email: string,\n        displayName: string = \"\",\n        addressType: AddressType = 'SMTP',\n        objectType: MapiObjectTypeEnum = MapiObjectType.MAPI_MAILUSER,\n        displayType: RecipientRowDisplayTypeEnum = RecipientRowDisplayType.MessagingUser\n    ) {\n        this.push(new Recipient(this.length,\n            email,\n            displayName,\n            addressType,\n            RecipientType.Cc,\n            objectType,\n            displayType\n        ))\n    }\n\n    addBcc(\n        email: string,\n        displayName: string = \"\",\n        addressType: AddressType = 'SMTP',\n        objectType: MapiObjectTypeEnum = MapiObjectType.MAPI_MAILUSER,\n        displayType: RecipientRowDisplayTypeEnum = RecipientRowDisplayType.MessagingUser\n    ) {\n        this.push(new Recipient(this.length,\n            email,\n            displayName,\n            addressType,\n            RecipientType.Bcc,\n            objectType,\n            displayType\n        ))\n    }\n\n    writeToStorage(rootStorage: CFBStorage): number {\n        let size = 0\n        for (let i = 0; i < this.length; i++) {\n            const recipient = this[i]\n            const storage = rootStorage.addStorage(PropertyTagLiterals.RecipientStoragePrefix + X8(i))\n            size += recipient.writeProperties(storage)\n        }\n        return size\n    }\n}\n\nexport class Recipient extends Address {\n    _rowId: number\n    recipientType: RecipientTypeEnum\n    _displayType: RecipientRowDisplayTypeEnum\n    _objectType: MapiObjectTypeEnum\n\n    constructor(\n        rowId: number,\n        email: string,\n        displayName: string,\n        addressType: AddressType,\n        recipientType: RecipientTypeEnum,\n        objectType: MapiObjectTypeEnum,\n        displayType: RecipientRowDisplayTypeEnum\n    ) {\n        super(email, displayName, addressType);\n\n        this._rowId = rowId;\n        this.recipientType = recipientType;\n        this._displayType = displayType;\n        this._objectType = objectType;\n    }\n\n    writeProperties(storage: any): number {\n        const propertiesStream = new RecipientProperties();\n        propertiesStream.addProperty(PropertyTags.PR_ROWID, this._rowId);\n        propertiesStream.addProperty(PropertyTags.PR_ENTRYID, generateEntryId());\n        propertiesStream.addProperty(PropertyTags.PR_INSTANCE_KEY, generateInstanceKey());\n        propertiesStream.addProperty(PropertyTags.PR_RECIPIENT_TYPE, this.recipientType);\n        propertiesStream.addProperty(PropertyTags.PR_ADDRTYPE_W, this.addressType);\n        propertiesStream.addProperty(PropertyTags.PR_EMAIL_ADDRESS_W, this.email);\n        propertiesStream.addProperty(PropertyTags.PR_OBJECT_TYPE, this._objectType);\n        propertiesStream.addProperty(PropertyTags.PR_DISPLAY_TYPE, this._displayType);\n        propertiesStream.addProperty(PropertyTags.PR_DISPLAY_NAME_W, this.displayName);\n        propertiesStream.addProperty(PropertyTags.PR_SEARCH_KEY, generateSearchKey(this.addressType, this.email));\n        return propertiesStream.writeProperties(storage, () => {\n        });\n    }\n}","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","\n// email-addresses.js - RFC 5322 email address parser\n// v 3.1.0\n//\n// http://tools.ietf.org/html/rfc5322\n//\n// This library does not validate email addresses.\n// emailAddresses attempts to parse addresses using the (fairly liberal)\n// grammar specified in RFC 5322.\n//\n// email-addresses returns {\n//     ast: <an abstract syntax tree based on rfc5322>,\n//     addresses: [{\n//            node: <node in ast for this address>,\n//            name: <display-name>,\n//            address: <addr-spec>,\n//            local: <local-part>,\n//            domain: <domain>\n//         }, ...]\n// }\n//\n// emailAddresses.parseOneAddress and emailAddresses.parseAddressList\n// work as you might expect. Try it out.\n//\n// Many thanks to Dominic Sayers and his documentation on the is_email function,\n// http://code.google.com/p/isemail/ , which helped greatly in writing this parser.\n\n(function (global) {\n\"use strict\";\n\nfunction parse5322(opts) {\n\n    // tokenizing functions\n\n    function inStr() { return pos < len; }\n    function curTok() { return parseString[pos]; }\n    function getPos() { return pos; }\n    function setPos(i) { pos = i; }\n    function nextTok() { pos += 1; }\n    function initialize() {\n        pos = 0;\n        len = parseString.length;\n    }\n\n    // parser helper functions\n\n    function o(name, value) {\n        return {\n            name: name,\n            tokens: value || \"\",\n            semantic: value || \"\",\n            children: []\n        };\n    }\n\n    function wrap(name, ast) {\n        var n;\n        if (ast === null) { return null; }\n        n = o(name);\n        n.tokens = ast.tokens;\n        n.semantic = ast.semantic;\n        n.children.push(ast);\n        return n;\n    }\n\n    function add(parent, child) {\n        if (child !== null) {\n            parent.tokens += child.tokens;\n            parent.semantic += child.semantic;\n        }\n        parent.children.push(child);\n        return parent;\n    }\n\n    function compareToken(fxnCompare) {\n        var tok;\n        if (!inStr()) { return null; }\n        tok = curTok();\n        if (fxnCompare(tok)) {\n            nextTok();\n            return o('token', tok);\n        }\n        return null;\n    }\n\n    function literal(lit) {\n        return function literalFunc() {\n            return wrap('literal', compareToken(function (tok) {\n                return tok === lit;\n            }));\n        };\n    }\n\n    function and() {\n        var args = arguments;\n        return function andFunc() {\n            var i, s, result, start;\n            start = getPos();\n            s = o('and');\n            for (i = 0; i < args.length; i += 1) {\n                result = args[i]();\n                if (result === null) {\n                    setPos(start);\n                    return null;\n                }\n                add(s, result);\n            }\n            return s;\n        };\n    }\n\n    function or() {\n        var args = arguments;\n        return function orFunc() {\n            var i, result, start;\n            start = getPos();\n            for (i = 0; i < args.length; i += 1) {\n                result = args[i]();\n                if (result !== null) {\n                    return result;\n                }\n                setPos(start);\n            }\n            return null;\n        };\n    }\n\n    function opt(prod) {\n        return function optFunc() {\n            var result, start;\n            start = getPos();\n            result = prod();\n            if (result !== null) {\n                return result;\n            }\n            else {\n                setPos(start);\n                return o('opt');\n            }\n        };\n    }\n\n    function invis(prod) {\n        return function invisFunc() {\n            var result = prod();\n            if (result !== null) {\n                result.semantic = \"\";\n            }\n            return result;\n        };\n    }\n\n    function colwsp(prod) {\n        return function collapseSemanticWhitespace() {\n            var result = prod();\n            if (result !== null && result.semantic.length > 0) {\n                result.semantic = \" \";\n            }\n            return result;\n        };\n    }\n\n    function star(prod, minimum) {\n        return function starFunc() {\n            var s, result, count, start, min;\n            start = getPos();\n            s = o('star');\n            count = 0;\n            min = minimum === undefined ? 0 : minimum;\n            while ((result = prod()) !== null) {\n                count = count + 1;\n                add(s, result);\n            }\n            if (count >= min) {\n                return s;\n            }\n            else {\n                setPos(start);\n                return null;\n            }\n        };\n    }\n\n    // One expects names to get normalized like this:\n    // \"  First  Last \" -> \"First Last\"\n    // \"First Last\" -> \"First Last\"\n    // \"First   Last\" -> \"First Last\"\n    function collapseWhitespace(s) {\n        return s.replace(/([ \\t]|\\r\\n)+/g, ' ').replace(/^\\s*/, '').replace(/\\s*$/, '');\n    }\n\n    // UTF-8 pseudo-production (RFC 6532)\n    // RFC 6532 extends RFC 5322 productions to include UTF-8\n    // using the following productions:\n    // UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n    // UTF8-2          =   <Defined in Section 4 of RFC3629>\n    // UTF8-3          =   <Defined in Section 4 of RFC3629>\n    // UTF8-4          =   <Defined in Section 4 of RFC3629>\n    //\n    // For reference, the extended RFC 5322 productions are:\n    // VCHAR   =/  UTF8-non-ascii\n    // ctext   =/  UTF8-non-ascii\n    // atext   =/  UTF8-non-ascii\n    // qtext   =/  UTF8-non-ascii\n    // dtext   =/  UTF8-non-ascii\n    function isUTF8NonAscii(tok) {\n        // In JavaScript, we just deal directly with Unicode code points,\n        // so we aren't checking individual bytes for UTF-8 encoding.\n        // Just check that the character is non-ascii.\n        return tok.charCodeAt(0) >= 128;\n    }\n\n\n    // common productions (RFC 5234)\n    // http://tools.ietf.org/html/rfc5234\n    // B.1. Core Rules\n\n    // CR             =  %x0D\n    //                         ; carriage return\n    function cr() { return wrap('cr', literal('\\r')()); }\n\n    // CRLF           =  CR LF\n    //                         ; Internet standard newline\n    function crlf() { return wrap('crlf', and(cr, lf)()); }\n\n    // DQUOTE         =  %x22\n    //                         ; \" (Double Quote)\n    function dquote() { return wrap('dquote', literal('\"')()); }\n\n    // HTAB           =  %x09\n    //                         ; horizontal tab\n    function htab() { return wrap('htab', literal('\\t')()); }\n\n    // LF             =  %x0A\n    //                         ; linefeed\n    function lf() { return wrap('lf', literal('\\n')()); }\n\n    // SP             =  %x20\n    function sp() { return wrap('sp', literal(' ')()); }\n\n    // VCHAR          =  %x21-7E\n    //                         ; visible (printing) characters\n    function vchar() {\n        return wrap('vchar', compareToken(function vcharFunc(tok) {\n            var code = tok.charCodeAt(0);\n            var accept = (0x21 <= code && code <= 0x7E);\n            if (opts.rfc6532) {\n                accept = accept || isUTF8NonAscii(tok);\n            }\n            return accept;\n        }));\n    }\n\n    // WSP            =  SP / HTAB\n    //                         ; white space\n    function wsp() { return wrap('wsp', or(sp, htab)()); }\n\n\n    // email productions (RFC 5322)\n    // http://tools.ietf.org/html/rfc5322\n    // 3.2.1. Quoted characters\n\n    // quoted-pair     =   (\"\\\" (VCHAR / WSP)) / obs-qp\n    function quotedPair() {\n        var qp = wrap('quoted-pair',\n        or(\n            and(literal('\\\\'), or(vchar, wsp)),\n            obsQP\n        )());\n        if (qp === null) { return null; }\n        // a quoted pair will be two characters, and the \"\\\" character\n        // should be semantically \"invisible\" (RFC 5322 3.2.1)\n        qp.semantic = qp.semantic[1];\n        return qp;\n    }\n\n    // 3.2.2. Folding White Space and Comments\n\n    // FWS             =   ([*WSP CRLF] 1*WSP) /  obs-FWS\n    function fws() {\n        return wrap('fws', or(\n            obsFws,\n            and(\n                opt(and(\n                    star(wsp),\n                    invis(crlf)\n                   )),\n                star(wsp, 1)\n            )\n        )());\n    }\n\n    // ctext           =   %d33-39 /          ; Printable US-ASCII\n    //                     %d42-91 /          ;  characters not including\n    //                     %d93-126 /         ;  \"(\", \")\", or \"\\\"\n    //                     obs-ctext\n    function ctext() {\n        return wrap('ctext', or(\n            function ctextFunc1() {\n                return compareToken(function ctextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 <= code && code <= 39) ||\n                        (42 <= code && code <= 91) ||\n                        (93 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsCtext\n        )());\n    }\n\n    // ccontent        =   ctext / quoted-pair / comment\n    function ccontent() {\n        return wrap('ccontent', or(ctext, quotedPair, comment)());\n    }\n\n    // comment         =   \"(\" *([FWS] ccontent) [FWS] \")\"\n    function comment() {\n        return wrap('comment', and(\n            literal('('),\n            star(and(opt(fws), ccontent)),\n            opt(fws),\n            literal(')')\n        )());\n    }\n\n    // CFWS            =   (1*([FWS] comment) [FWS]) / FWS\n    function cfws() {\n        return wrap('cfws', or(\n            and(\n                star(\n                    and(opt(fws), comment),\n                    1\n                ),\n                opt(fws)\n            ),\n            fws\n        )());\n    }\n\n    // 3.2.3. Atom\n\n    //atext           =   ALPHA / DIGIT /    ; Printable US-ASCII\n    //                       \"!\" / \"#\" /        ;  characters not including\n    //                       \"$\" / \"%\" /        ;  specials.  Used for atoms.\n    //                       \"&\" / \"'\" /\n    //                       \"*\" / \"+\" /\n    //                       \"-\" / \"/\" /\n    //                       \"=\" / \"?\" /\n    //                       \"^\" / \"_\" /\n    //                       \"`\" / \"{\" /\n    //                       \"|\" / \"}\" /\n    //                       \"~\"\n    function atext() {\n        return wrap('atext', compareToken(function atextFunc(tok) {\n            var accept =\n                ('a' <= tok && tok <= 'z') ||\n                ('A' <= tok && tok <= 'Z') ||\n                ('0' <= tok && tok <= '9') ||\n                (['!', '#', '$', '%', '&', '\\'', '*', '+', '-', '/',\n                  '=', '?', '^', '_', '`', '{', '|', '}', '~'].indexOf(tok) >= 0);\n            if (opts.rfc6532) {\n                accept = accept || isUTF8NonAscii(tok);\n            }\n            return accept;\n        }));\n    }\n\n    // atom            =   [CFWS] 1*atext [CFWS]\n    function atom() {\n        return wrap('atom', and(colwsp(opt(cfws)), star(atext, 1), colwsp(opt(cfws)))());\n    }\n\n    // dot-atom-text   =   1*atext *(\".\" 1*atext)\n    function dotAtomText() {\n        var s, maybeText;\n        s = wrap('dot-atom-text', star(atext, 1)());\n        if (s === null) { return s; }\n        maybeText = star(and(literal('.'), star(atext, 1)))();\n        if (maybeText !== null) {\n            add(s, maybeText);\n        }\n        return s;\n    }\n\n    // dot-atom        =   [CFWS] dot-atom-text [CFWS]\n    function dotAtom() {\n        return wrap('dot-atom', and(invis(opt(cfws)), dotAtomText, invis(opt(cfws)))());\n    }\n\n    // 3.2.4. Quoted Strings\n\n    //  qtext           =   %d33 /             ; Printable US-ASCII\n    //                      %d35-91 /          ;  characters not including\n    //                      %d93-126 /         ;  \"\\\" or the quote character\n    //                      obs-qtext\n    function qtext() {\n        return wrap('qtext', or(\n            function qtextFunc1() {\n                return compareToken(function qtextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 === code) ||\n                        (35 <= code && code <= 91) ||\n                        (93 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsQtext\n        )());\n    }\n\n    // qcontent        =   qtext / quoted-pair\n    function qcontent() {\n        return wrap('qcontent', or(qtext, quotedPair)());\n    }\n\n    //  quoted-string   =   [CFWS]\n    //                      DQUOTE *([FWS] qcontent) [FWS] DQUOTE\n    //                      [CFWS]\n    function quotedString() {\n        return wrap('quoted-string', and(\n            invis(opt(cfws)),\n            invis(dquote), star(and(opt(colwsp(fws)), qcontent)), opt(invis(fws)), invis(dquote),\n            invis(opt(cfws))\n        )());\n    }\n\n    // 3.2.5 Miscellaneous Tokens\n\n    // word            =   atom / quoted-string\n    function word() {\n        return wrap('word', or(atom, quotedString)());\n    }\n\n    // phrase          =   1*word / obs-phrase\n    function phrase() {\n        return wrap('phrase', or(obsPhrase, star(word, 1))());\n    }\n\n    // 3.4. Address Specification\n    //   address         =   mailbox / group\n    function address() {\n        return wrap('address', or(mailbox, group)());\n    }\n\n    //   mailbox         =   name-addr / addr-spec\n    function mailbox() {\n        return wrap('mailbox', or(nameAddr, addrSpec)());\n    }\n\n    //   name-addr       =   [display-name] angle-addr\n    function nameAddr() {\n        return wrap('name-addr', and(opt(displayName), angleAddr)());\n    }\n\n    //   angle-addr      =   [CFWS] \"<\" addr-spec \">\" [CFWS] /\n    //                       obs-angle-addr\n    function angleAddr() {\n        return wrap('angle-addr', or(\n            and(\n                invis(opt(cfws)),\n                literal('<'),\n                addrSpec,\n                literal('>'),\n                invis(opt(cfws))\n            ),\n            obsAngleAddr\n        )());\n    }\n\n    //   group           =   display-name \":\" [group-list] \";\" [CFWS]\n    function group() {\n        return wrap('group', and(\n            displayName,\n            literal(':'),\n            opt(groupList),\n            literal(';'),\n            invis(opt(cfws))\n        )());\n    }\n\n    //   display-name    =   phrase\n    function displayName() {\n        return wrap('display-name', function phraseFixedSemantic() {\n            var result = phrase();\n            if (result !== null) {\n                result.semantic = collapseWhitespace(result.semantic);\n            }\n            return result;\n        }());\n    }\n\n    //   mailbox-list    =   (mailbox *(\",\" mailbox)) / obs-mbox-list\n    function mailboxList() {\n        return wrap('mailbox-list', or(\n            and(\n                mailbox,\n                star(and(literal(','), mailbox))\n            ),\n            obsMboxList\n        )());\n    }\n\n    //   address-list    =   (address *(\",\" address)) / obs-addr-list\n    function addressList() {\n        return wrap('address-list', or(\n            and(\n                address,\n                star(and(literal(','), address))\n            ),\n            obsAddrList\n        )());\n    }\n\n    //   group-list      =   mailbox-list / CFWS / obs-group-list\n    function groupList() {\n        return wrap('group-list', or(\n            mailboxList,\n            invis(cfws),\n            obsGroupList\n        )());\n    }\n\n    // 3.4.1 Addr-Spec Specification\n\n    // local-part      =   dot-atom / quoted-string / obs-local-part\n    function localPart() {\n        // note: quoted-string, dotAtom are proper subsets of obs-local-part\n        // so we really just have to look for obsLocalPart, if we don't care about the exact parse tree\n        return wrap('local-part', or(obsLocalPart, dotAtom, quotedString)());\n    }\n\n    //  dtext           =   %d33-90 /          ; Printable US-ASCII\n    //                      %d94-126 /         ;  characters not including\n    //                      obs-dtext          ;  \"[\", \"]\", or \"\\\"\n    function dtext() {\n        return wrap('dtext', or(\n            function dtextFunc1() {\n                return compareToken(function dtextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 <= code && code <= 90) ||\n                        (94 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsDtext\n            )()\n        );\n    }\n\n    // domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\n    function domainLiteral() {\n        return wrap('domain-literal', and(\n            invis(opt(cfws)),\n            literal('['),\n            star(and(opt(fws), dtext)),\n            opt(fws),\n            literal(']'),\n            invis(opt(cfws))\n        )());\n    }\n\n    // domain          =   dot-atom / domain-literal / obs-domain\n    function domain() {\n        return wrap('domain', function domainCheckTLD() {\n            var result = or(obsDomain, dotAtom, domainLiteral)();\n            if (opts.rejectTLD) {\n                if (result && result.semantic && result.semantic.indexOf('.') < 0) {\n                    return null;\n                }\n            }\n            // strip all whitespace from domains\n            if (result) {\n                result.semantic = result.semantic.replace(/\\s+/g, '');\n            }\n            return result;\n        }());\n    }\n\n    // addr-spec       =   local-part \"@\" domain\n    function addrSpec() {\n        return wrap('addr-spec', and(\n            localPart, literal('@'), domain\n        )());\n    }\n\n    // 3.6.2 Originator Fields\n    // Below we only parse the field body, not the name of the field\n    // like \"From:\", \"Sender:\", or \"Reply-To:\". Other libraries that\n    // parse email headers can parse those and defer to these productions\n    // for the \"RFC 5322\" part.\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // from = \"From:\" (mailbox-list / address-list) CRLF\n    function fromSpec() {\n        return wrap('from', or(\n            mailboxList,\n            addressList\n        )());\n    }\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // sender = \"Sender:\" (mailbox / address) CRLF\n    function senderSpec() {\n        return wrap('sender', or(\n            mailbox,\n            address\n        )());\n    }\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // reply-to = \"Reply-To:\" address-list CRLF\n    function replyToSpec() {\n        return wrap('reply-to', addressList());\n    }\n\n    // 4.1. Miscellaneous Obsolete Tokens\n\n    //  obs-NO-WS-CTL   =   %d1-8 /            ; US-ASCII control\n    //                      %d11 /             ;  characters that do not\n    //                      %d12 /             ;  include the carriage\n    //                      %d14-31 /          ;  return, line feed, and\n    //                      %d127              ;  white space characters\n    function obsNoWsCtl() {\n        return opts.strict ? null : wrap('obs-NO-WS-CTL', compareToken(function (tok) {\n            var code = tok.charCodeAt(0);\n            return ((1 <= code && code <= 8) ||\n                    (11 === code || 12 === code) ||\n                    (14 <= code && code <= 31) ||\n                    (127 === code));\n        }));\n    }\n\n    // obs-ctext       =   obs-NO-WS-CTL\n    function obsCtext() { return opts.strict ? null : wrap('obs-ctext', obsNoWsCtl()); }\n\n    // obs-qtext       =   obs-NO-WS-CTL\n    function obsQtext() { return opts.strict ? null : wrap('obs-qtext', obsNoWsCtl()); }\n\n    // obs-qp          =   \"\\\" (%d0 / obs-NO-WS-CTL / LF / CR)\n    function obsQP() {\n        return opts.strict ? null : wrap('obs-qp', and(\n            literal('\\\\'),\n            or(literal('\\0'), obsNoWsCtl, lf, cr)\n        )());\n    }\n\n    // obs-phrase      =   word *(word / \".\" / CFWS)\n    function obsPhrase() {\n        if (opts.strict ) return null;\n        return opts.atInDisplayName ? wrap('obs-phrase', and(\n            word,\n            star(or(word, literal('.'), literal('@'), colwsp(cfws)))\n        )()) :\n        wrap('obs-phrase', and(\n            word,\n            star(or(word, literal('.'), colwsp(cfws)))\n        )());\n    }\n\n    // 4.2. Obsolete Folding White Space\n\n    // NOTE: read the errata http://www.rfc-editor.org/errata_search.php?rfc=5322&eid=1908\n    // obs-FWS         =   1*([CRLF] WSP)\n    function obsFws() {\n        return opts.strict ? null : wrap('obs-FWS', star(\n            and(invis(opt(crlf)), wsp),\n            1\n        )());\n    }\n\n    // 4.4. Obsolete Addressing\n\n    // obs-angle-addr  =   [CFWS] \"<\" obs-route addr-spec \">\" [CFWS]\n    function obsAngleAddr() {\n        return opts.strict ? null : wrap('obs-angle-addr', and(\n            invis(opt(cfws)),\n            literal('<'),\n            obsRoute,\n            addrSpec,\n            literal('>'),\n            invis(opt(cfws))\n        )());\n    }\n\n    // obs-route       =   obs-domain-list \":\"\n    function obsRoute() {\n        return opts.strict ? null : wrap('obs-route', and(\n            obsDomainList,\n            literal(':')\n        )());\n    }\n\n    //   obs-domain-list =   *(CFWS / \",\") \"@\" domain\n    //                       *(\",\" [CFWS] [\"@\" domain])\n    function obsDomainList() {\n        return opts.strict ? null : wrap('obs-domain-list', and(\n            star(or(invis(cfws), literal(','))),\n            literal('@'),\n            domain,\n            star(and(\n                literal(','),\n                invis(opt(cfws)),\n                opt(and(literal('@'), domain))\n            ))\n        )());\n    }\n\n    // obs-mbox-list   =   *([CFWS] \",\") mailbox *(\",\" [mailbox / CFWS])\n    function obsMboxList() {\n        return opts.strict ? null : wrap('obs-mbox-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            )),\n            mailbox,\n            star(and(\n                literal(','),\n                opt(and(\n                    mailbox,\n                    invis(cfws)\n                ))\n            ))\n        )());\n    }\n\n    // obs-addr-list   =   *([CFWS] \",\") address *(\",\" [address / CFWS])\n    function obsAddrList() {\n        return opts.strict ? null : wrap('obs-addr-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            )),\n            address,\n            star(and(\n                literal(','),\n                opt(and(\n                    address,\n                    invis(cfws)\n                ))\n            ))\n        )());\n    }\n\n    // obs-group-list  =   1*([CFWS] \",\") [CFWS]\n    function obsGroupList() {\n        return opts.strict ? null : wrap('obs-group-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            ), 1),\n            invis(opt(cfws))\n        )());\n    }\n\n    // obs-local-part = word *(\".\" word)\n    function obsLocalPart() {\n        return opts.strict ? null : wrap('obs-local-part', and(word, star(and(literal('.'), word)))());\n    }\n\n    // obs-domain       = atom *(\".\" atom)\n    function obsDomain() {\n        return opts.strict ? null : wrap('obs-domain', and(atom, star(and(literal('.'), atom)))());\n    }\n\n    // obs-dtext       =   obs-NO-WS-CTL / quoted-pair\n    function obsDtext() {\n        return opts.strict ? null : wrap('obs-dtext', or(obsNoWsCtl, quotedPair)());\n    }\n\n    /////////////////////////////////////////////////////\n\n    // ast analysis\n\n    function findNode(name, root) {\n        var i, stack, node;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name === name) {\n                return node;\n            }\n            for (i = node.children.length - 1; i >= 0; i -= 1) {\n                stack.push(node.children[i]);\n            }\n        }\n        return null;\n    }\n\n    function findAllNodes(name, root) {\n        var i, stack, node, result;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        result = [];\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name === name) {\n                result.push(node);\n            }\n            for (i = node.children.length - 1; i >= 0; i -= 1) {\n                stack.push(node.children[i]);\n            }\n        }\n        return result;\n    }\n\n    function findAllNodesNoChildren(names, root) {\n        var i, stack, node, result, namesLookup;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        result = [];\n        namesLookup = {};\n        for (i = 0; i < names.length; i += 1) {\n            namesLookup[names[i]] = true;\n        }\n\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name in namesLookup) {\n                result.push(node);\n                // don't look at children (hence findAllNodesNoChildren)\n            } else {\n                for (i = node.children.length - 1; i >= 0; i -= 1) {\n                    stack.push(node.children[i]);\n                }\n            }\n        }\n        return result;\n    }\n\n    function giveResult(ast) {\n        var addresses, groupsAndMailboxes, i, groupOrMailbox, result;\n        if (ast === null) {\n            return null;\n        }\n        addresses = [];\n\n        // An address is a 'group' (i.e. a list of mailboxes) or a 'mailbox'.\n        groupsAndMailboxes = findAllNodesNoChildren(['group', 'mailbox'], ast);\n        for (i = 0; i <  groupsAndMailboxes.length; i += 1) {\n            groupOrMailbox = groupsAndMailboxes[i];\n            if (groupOrMailbox.name === 'group') {\n                addresses.push(giveResultGroup(groupOrMailbox));\n            } else if (groupOrMailbox.name === 'mailbox') {\n                addresses.push(giveResultMailbox(groupOrMailbox));\n            }\n        }\n\n        result = {\n            ast: ast,\n            addresses: addresses,\n        };\n        if (opts.simple) {\n            result = simplifyResult(result);\n        }\n        if (opts.oneResult) {\n            return oneResult(result);\n        }\n        if (opts.simple) {\n            return result && result.addresses;\n        } else {\n            return result;\n        }\n    }\n\n    function giveResultGroup(group) {\n        var i;\n        var groupName = findNode('display-name', group);\n        var groupResultMailboxes = [];\n        var mailboxes = findAllNodesNoChildren(['mailbox'], group);\n        for (i = 0; i < mailboxes.length; i += 1) {\n            groupResultMailboxes.push(giveResultMailbox(mailboxes[i]));\n        }\n        return {\n            node: group,\n            parts: {\n                name: groupName,\n            },\n            type: group.name, // 'group'\n            name: grabSemantic(groupName),\n            addresses: groupResultMailboxes,\n        };\n    }\n\n    function giveResultMailbox(mailbox) {\n        var name = findNode('display-name', mailbox);\n        var aspec = findNode('addr-spec', mailbox);\n        var cfws = findAllNodes('cfws', mailbox);\n        var comments = findAllNodesNoChildren(['comment'], mailbox);\n\n\n        var local = findNode('local-part', aspec);\n        var domain = findNode('domain', aspec);\n        return {\n            node: mailbox,\n            parts: {\n                name: name,\n                address: aspec,\n                local: local,\n                domain: domain,\n                comments: cfws\n            },\n            type: mailbox.name, // 'mailbox'\n            name: grabSemantic(name),\n            address: grabSemantic(aspec),\n            local: grabSemantic(local),\n            domain: grabSemantic(domain),\n            comments: concatComments(comments),\n            groupName: grabSemantic(mailbox.groupName),\n        };\n    }\n\n    function grabSemantic(n) {\n        return n !== null && n !== undefined ? n.semantic : null;\n    }\n\n    function simplifyResult(result) {\n        var i;\n        if (result && result.addresses) {\n            for (i = 0; i < result.addresses.length; i += 1) {\n                delete result.addresses[i].node;\n            }\n        }\n        return result;\n    }\n\n    function concatComments(comments) {\n        var result = '';\n        if (comments) {\n            for (var i = 0; i < comments.length; i += 1) {\n                result += grabSemantic(comments[i]);\n            }\n        }\n        return result;\n    }\n\n    function oneResult(result) {\n        if (!result) { return null; }\n        if (!opts.partial && result.addresses.length > 1) { return null; }\n        return result.addresses && result.addresses[0];\n    }\n\n    /////////////////////////////////////////////////////\n\n    var parseString, pos, len, parsed, startProduction;\n\n    opts = handleOpts(opts, {});\n    if (opts === null) { return null; }\n\n    parseString = opts.input;\n\n    startProduction = {\n        'address': address,\n        'address-list': addressList,\n        'angle-addr': angleAddr,\n        'from': fromSpec,\n        'group': group,\n        'mailbox': mailbox,\n        'mailbox-list': mailboxList,\n        'reply-to': replyToSpec,\n        'sender': senderSpec,\n    }[opts.startAt] || addressList;\n\n    if (!opts.strict) {\n        initialize();\n        opts.strict = true;\n        parsed = startProduction(parseString);\n        if (opts.partial || !inStr()) {\n            return giveResult(parsed);\n        }\n        opts.strict = false;\n    }\n\n    initialize();\n    parsed = startProduction(parseString);\n    if (!opts.partial && inStr()) { return null; }\n    return giveResult(parsed);\n}\n\nfunction parseOneAddressSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        oneResult: true,\n        rfc6532: true,\n        simple: true,\n        startAt: 'address-list',\n    }));\n}\n\nfunction parseAddressListSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'address-list',\n    }));\n}\n\nfunction parseFromSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'from',\n    }));\n}\n\nfunction parseSenderSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        oneResult: true,\n        rfc6532: true,\n        simple: true,\n        startAt: 'sender',\n    }));\n}\n\nfunction parseReplyToSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'reply-to',\n    }));\n}\n\nfunction handleOpts(opts, defs) {\n    function isString(str) {\n        return Object.prototype.toString.call(str) === '[object String]';\n    }\n\n    function isObject(o) {\n        return o === Object(o);\n    }\n\n    function isNullUndef(o) {\n        return o === null || o === undefined;\n    }\n\n    var defaults, o;\n\n    if (isString(opts)) {\n        opts = { input: opts };\n    } else if (!isObject(opts)) {\n        return null;\n    }\n\n    if (!isString(opts.input)) { return null; }\n    if (!defs) { return null; }\n\n    defaults = {\n        oneResult: false,\n        partial: false,\n        rejectTLD: false,\n        rfc6532: false,\n        simple: false,\n        startAt: 'address-list',\n        strict: false,\n        atInDisplayName: false\n    };\n\n    for (o in defaults) {\n        if (isNullUndef(opts[o])) {\n            opts[o] = !isNullUndef(defs[o]) ? defs[o] : defaults[o];\n        }\n    }\n    return opts;\n}\n\nparse5322.parseOneAddress = parseOneAddressSimple;\nparse5322.parseAddressList = parseAddressListSimple;\nparse5322.parseFrom = parseFromSimple;\nparse5322.parseSender = parseSenderSimple;\nparse5322.parseReplyTo = parseReplyToSimple;\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = parse5322;\n} else {\n    global.emailAddresses = parse5322;\n}\n\n}(this));\n","'use strict';\n\nconst ea_lib = require('email-addresses');\n\nexports.parse = function parse (line, startAt) {\n    if (!line) throw new Error('Nothing to parse');\n\n    line = line.trim();\n\n    const addr = ea_lib({\n        input: line,\n        rfc6532: true, // unicode\n        partial: false, // return failed parses\n        simple: false, // simple AST\n        strict: false, // turn off obs- features in the rfc\n        rejectTLD: false, // domains require a \".\"\n        startAt: startAt || null,\n        atInDisplayName: true // allow at in display name\n    });\n\n    if (!addr) throw new Error('No results');\n\n    // console.log(\"Parsed to: \", require('util').inspect(addr, {depth: 10, colors: true}));\n\n    return addr.addresses.map(map_addresses);\n}\n\nfunction map_addresses (adr) {\n    if (adr.type === 'group') {\n        return new Group(adr.name, adr.addresses.map(map_addresses));\n    }\n    let comments;\n    if (adr.parts.comments) {\n        comments = adr.parts.comments.map(function (c) { return c.tokens.trim() }).join(' ').trim();\n        // if (comments.length) {\n        //     comments = '(' + comments + ')';\n        // }\n    }\n    let l = adr.local;\n    if (!adr.name && /:/.test(l)) l = `\"${  l  }\"`;\n    return new Address(adr.name, `${l  }@${  adr.domain}`, comments);\n}\n\nexports.parseFrom = function (line) {\n    return exports.parse(line, 'from');\n}\n\nexports.parseSender = function (line) {\n    return exports.parse(line, 'sender');\n}\n\nexports.parseReplyTo = function (line) {\n    return exports.parse(line, 'reply-to');\n}\n\nclass Group {\n    constructor (display_name, addresses) {\n        this.phrase = display_name;\n        this.addresses = addresses;\n    }\n\n    format () {\n        return `${this.phrase  }:${  this.addresses.map(function (a) { return a.format() }).join(',')}`;\n    }\n\n    name () {\n        let phrase = this.phrase;\n\n        if (!(phrase && phrase.length)) phrase = this.comment;\n\n        const name = _extract_name(phrase);\n        return name;\n    }\n}\n\nclass Address {\n    constructor (phrase, address, comment) {\n        this.phrase  = phrase || '';\n        this.address = address || '';\n        this.comment = comment || '';\n    }\n\n    host () {\n        const match = /.*@(.*)$/.exec(this.address);\n        if (!match) return null;\n        return match[1];\n    }\n\n    user () {\n        const match = /^(.*)@/.exec(this.address);\n        if (!match) return null;\n        return match[1];\n    }\n\n    format () {\n        const phrase = this.phrase;\n        const email = this.address;\n        let comment = this.comment;\n\n        const addr = [];\n        const atext = new RegExp('^[\\\\-\\\\w !#$%&\\'*+/=?^`{|}~]+$');\n\n        if (phrase && phrase.length) {\n            addr.push(atext.test(phrase.trim()) ? phrase\n                : _quote_no_esc(phrase) ? phrase\n                    : (`\"${phrase}\"`));\n\n            if (email && email.length) {\n                addr.push(`<${email}>`);\n            }\n        }\n        else if (email && email.length) {\n            addr.push(email);\n        }\n\n        if (comment && /\\S/.test(comment)) {\n            comment = comment.replace(/^\\s*\\(?/, '(')\n                .replace(/\\)?\\s*$/, ')');\n        }\n\n        if (comment && comment.length) {\n            addr.push(comment);\n        }\n\n        return addr.join(' ');\n    }\n\n    name () {\n        let phrase = this.phrase;\n        const addr = this.address;\n\n        if (!(phrase && phrase.length)) {\n            phrase = this.comment;\n        }\n\n        let name = _extract_name(phrase);\n\n        // first.last@domain address\n        if (name === '') {\n            const match = /([^%.@_]+([._][^%.@_]+)+)[@%]/.exec(addr);\n            if (match) {\n                name  = match[1].replace(/[._]+/g, ' ');\n                name  = _extract_name(name);\n            }\n        }\n\n        if (name === '' && /\\/g=/i.test(addr)) {    // X400 style address\n            let match = /\\/g=([^/]*)/i.exec(addr);\n            const f = match[1];\n            match = /\\/s=([^/]*)/i.exec(addr);\n            const l = match[1];\n            name  = _extract_name(`${f} ${l}`);\n        }\n\n        return name;\n    }\n}\n\nexports.Address = Address;\n\n// This is because JS regexps have no equivalent of\n// zero-width negative look-behind assertion for: /(?<!\\\\)\"/\nfunction _quote_no_esc (str) {\n    if (/^\"/.test(str)) return true;\n    let match;\n    while ((match = /^[\\s\\S]*?([\\s\\S])\"/.exec(str))) {\n        if (match[1] !== '\\\\') return true;\n\n        str = str.substr(match[0].length);\n    }\n    return false;\n}\n\nexports.isAllLower = function (string) {\n    return string === string.toLowerCase();\n}\n\nexports.isAllUpper = function (string) {\n    return string === string.toUpperCase();\n}\n\nexports.nameCase = function (string) {\n\n    return string\n        .toLowerCase()\n        .replace(/\\b(\\w+)/g, function (_, d1) {\n            // Set the case of the name to first char upper rest lower\n            return d1.charAt(0).toUpperCase() + d1.slice(1);\n        })\n        .replace(/\\bMc(\\w)/gi, function (_, d1) {\n            // Scottish names such as 'McLeod'\n            return `Mc${d1.toUpperCase()}`;\n        })\n        .replace(/\\bo'(\\w)/gi, function (_, d1) {\n            // Irish names such as 'O'Malley, O'Reilly'\n            return `O'${d1.toUpperCase()}`;\n        })\n        .replace(/\\b(x*(ix)?v*(iv)?i*)\\b/ig, function (_, d1) {\n            // Roman numerals, eg 'Level III Support'\n            return d1.toUpperCase();\n        });\n}\n\n// given a comment, attempt to extract a person's name\nfunction _extract_name (name) {\n    // Using encodings, too hard. See Mail::Message::Field::Full.\n    if (/=?.*?\\?=/.test(name)) return '';\n\n    // trim whitespace\n    name = name.trim();\n    name = name.replace(/\\s+/, ' ');\n\n    // Disregard numeric names (e.g. 123456.1234@compuserve.com)\n    if (/^[\\d ]+$/.test(name)) return '';\n\n    name = name.replace(/^\\((.*)\\)$/, '$1') // remove outermost parenthesis\n        .replace(/^\"(.*)\"$/, '$1')  // remove outer quotation marks\n        .replace(/\\(.*?\\)/g, '')    // remove minimal embedded comments\n        .replace(/\\\\/g, '')         // remove all escapes\n        .replace(/^\"(.*)\"$/, '$1')  // remove internal quotation marks\n        .replace(/^([^\\s]+) ?, ?(.*)$/, '$2 $1') // reverse \"Last, First M.\" if applicable\n        .replace(/,.*/, '');\n\n    // Change casing only when the name contains only upper or only\n    // lower cased characters.\n    if ( exports.isAllUpper(name) || exports.isAllLower(name) ) {\n        // console.log(\"Changing case of: \" + name);\n        name = exports.nameCase(name);\n        // console.log(\"Now: \" + name);\n    }\n\n    // some cleanup\n    name = name.replace(/\\[[^\\]]*\\]/g, '')\n        .replace(/(^[\\s'\"]+|[\\s'\"]+$)/g, '')\n        .replace(/\\s{2,}/g, ' ');\n\n    return name;\n}\n","\"use strict\";\n\nvar BOMChar = '\\uFEFF';\n\nexports.PrependBOM = PrependBOMWrapper\nfunction PrependBOMWrapper(encoder, options) {\n    this.encoder = encoder;\n    this.addBOM = true;\n}\n\nPrependBOMWrapper.prototype.write = function(str) {\n    if (this.addBOM) {\n        str = BOMChar + str;\n        this.addBOM = false;\n    }\n\n    return this.encoder.write(str);\n}\n\nPrependBOMWrapper.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n\nexports.StripBOM = StripBOMWrapper;\nfunction StripBOMWrapper(decoder, options) {\n    this.decoder = decoder;\n    this.pass = false;\n    this.options = options || {};\n}\n\nStripBOMWrapper.prototype.write = function(buf) {\n    var res = this.decoder.write(buf);\n    if (this.pass || !res)\n        return res;\n\n    if (res[0] === BOMChar) {\n        res = res.slice(1);\n        if (typeof this.options.stripBOM === 'function')\n            this.options.stripBOM();\n    }\n\n    this.pass = true;\n    return res;\n}\n\nStripBOMWrapper.prototype.end = function() {\n    return this.decoder.end();\n}\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Export Node.js internal encodings.\n\nmodule.exports = {\n    // Encodings\n    utf8:   { type: \"_internal\", bomAware: true},\n    cesu8:  { type: \"_internal\", bomAware: true},\n    unicode11utf8: \"utf8\",\n\n    ucs2:   { type: \"_internal\", bomAware: true},\n    utf16le: \"ucs2\",\n\n    binary: { type: \"_internal\" },\n    base64: { type: \"_internal\" },\n    hex:    { type: \"_internal\" },\n\n    // Codec.\n    _internal: InternalCodec,\n};\n\n//------------------------------------------------------------------------------\n\nfunction InternalCodec(codecOptions, iconv) {\n    this.enc = codecOptions.encodingName;\n    this.bomAware = codecOptions.bomAware;\n\n    if (this.enc === \"base64\")\n        this.encoder = InternalEncoderBase64;\n    else if (this.enc === \"cesu8\") {\n        this.enc = \"utf8\"; // Use utf8 for decoding.\n        this.encoder = InternalEncoderCesu8;\n\n        // Add decoder for versions of Node not supporting CESU-8\n        if (Buffer.from('eda0bdedb2a9', 'hex').toString() !== '💩') {\n            this.decoder = InternalDecoderCesu8;\n            this.defaultCharUnicode = iconv.defaultCharUnicode;\n        }\n    }\n}\n\nInternalCodec.prototype.encoder = InternalEncoder;\nInternalCodec.prototype.decoder = InternalDecoder;\n\n//------------------------------------------------------------------------------\n\n// We use node.js internal decoder. Its signature is the same as ours.\nvar StringDecoder = require('string_decoder').StringDecoder;\n\nif (!StringDecoder.prototype.end) // Node v0.8 doesn't have this method.\n    StringDecoder.prototype.end = function() {};\n\n\nfunction InternalDecoder(options, codec) {\n    this.decoder = new StringDecoder(codec.enc);\n}\n\nInternalDecoder.prototype.write = function(buf) {\n    if (!Buffer.isBuffer(buf)) {\n        buf = Buffer.from(buf);\n    }\n\n    return this.decoder.write(buf);\n}\n\nInternalDecoder.prototype.end = function() {\n    return this.decoder.end();\n}\n\n\n//------------------------------------------------------------------------------\n// Encoder is mostly trivial\n\nfunction InternalEncoder(options, codec) {\n    this.enc = codec.enc;\n}\n\nInternalEncoder.prototype.write = function(str) {\n    return Buffer.from(str, this.enc);\n}\n\nInternalEncoder.prototype.end = function() {\n}\n\n\n//------------------------------------------------------------------------------\n// Except base64 encoder, which must keep its state.\n\nfunction InternalEncoderBase64(options, codec) {\n    this.prevStr = '';\n}\n\nInternalEncoderBase64.prototype.write = function(str) {\n    str = this.prevStr + str;\n    var completeQuads = str.length - (str.length % 4);\n    this.prevStr = str.slice(completeQuads);\n    str = str.slice(0, completeQuads);\n\n    return Buffer.from(str, \"base64\");\n}\n\nInternalEncoderBase64.prototype.end = function() {\n    return Buffer.from(this.prevStr, \"base64\");\n}\n\n\n//------------------------------------------------------------------------------\n// CESU-8 encoder is also special.\n\nfunction InternalEncoderCesu8(options, codec) {\n}\n\nInternalEncoderCesu8.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length * 3), bufIdx = 0;\n    for (var i = 0; i < str.length; i++) {\n        var charCode = str.charCodeAt(i);\n        // Naive implementation, but it works because CESU-8 is especially easy\n        // to convert from UTF-16 (which all JS strings are encoded in).\n        if (charCode < 0x80)\n            buf[bufIdx++] = charCode;\n        else if (charCode < 0x800) {\n            buf[bufIdx++] = 0xC0 + (charCode >>> 6);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n        else { // charCode will always be < 0x10000 in javascript.\n            buf[bufIdx++] = 0xE0 + (charCode >>> 12);\n            buf[bufIdx++] = 0x80 + ((charCode >>> 6) & 0x3f);\n            buf[bufIdx++] = 0x80 + (charCode & 0x3f);\n        }\n    }\n    return buf.slice(0, bufIdx);\n}\n\nInternalEncoderCesu8.prototype.end = function() {\n}\n\n//------------------------------------------------------------------------------\n// CESU-8 decoder is not implemented in Node v4.0+\n\nfunction InternalDecoderCesu8(options, codec) {\n    this.acc = 0;\n    this.contBytes = 0;\n    this.accBytes = 0;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n}\n\nInternalDecoderCesu8.prototype.write = function(buf) {\n    var acc = this.acc, contBytes = this.contBytes, accBytes = this.accBytes, \n        res = '';\n    for (var i = 0; i < buf.length; i++) {\n        var curByte = buf[i];\n        if ((curByte & 0xC0) !== 0x80) { // Leading byte\n            if (contBytes > 0) { // Previous code is invalid\n                res += this.defaultCharUnicode;\n                contBytes = 0;\n            }\n\n            if (curByte < 0x80) { // Single-byte code\n                res += String.fromCharCode(curByte);\n            } else if (curByte < 0xE0) { // Two-byte code\n                acc = curByte & 0x1F;\n                contBytes = 1; accBytes = 1;\n            } else if (curByte < 0xF0) { // Three-byte code\n                acc = curByte & 0x0F;\n                contBytes = 2; accBytes = 1;\n            } else { // Four or more are not supported for CESU-8.\n                res += this.defaultCharUnicode;\n            }\n        } else { // Continuation byte\n            if (contBytes > 0) { // We're waiting for it.\n                acc = (acc << 6) | (curByte & 0x3f);\n                contBytes--; accBytes++;\n                if (contBytes === 0) {\n                    // Check for overlong encoding, but support Modified UTF-8 (encoding NULL as C0 80)\n                    if (accBytes === 2 && acc < 0x80 && acc > 0)\n                        res += this.defaultCharUnicode;\n                    else if (accBytes === 3 && acc < 0x800)\n                        res += this.defaultCharUnicode;\n                    else\n                        // Actually add character.\n                        res += String.fromCharCode(acc);\n                }\n            } else { // Unexpected continuation byte\n                res += this.defaultCharUnicode;\n            }\n        }\n    }\n    this.acc = acc; this.contBytes = contBytes; this.accBytes = accBytes;\n    return res;\n}\n\nInternalDecoderCesu8.prototype.end = function() {\n    var res = 0;\n    if (this.contBytes > 0)\n        res += this.defaultCharUnicode;\n    return res;\n}\n","'use strict';\n\nvar Buffer = require('safer-buffer').Buffer;\n\n// == UTF32-LE/BE codec. ==========================================================\n\nexports._utf32 = Utf32Codec;\n\nfunction Utf32Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n    this.bomAware = true;\n    this.isLE = codecOptions.isLE;\n}\n\nexports.utf32le = { type: '_utf32', isLE: true };\nexports.utf32be = { type: '_utf32', isLE: false };\n\n// Aliases\nexports.ucs4le = 'utf32le';\nexports.ucs4be = 'utf32be';\n\nUtf32Codec.prototype.encoder = Utf32Encoder;\nUtf32Codec.prototype.decoder = Utf32Decoder;\n\n// -- Encoding\n\nfunction Utf32Encoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.highSurrogate = 0;\n}\n\nUtf32Encoder.prototype.write = function(str) {\n    var src = Buffer.from(str, 'ucs2');\n    var dst = Buffer.alloc(src.length * 2);\n    var write32 = this.isLE ? dst.writeUInt32LE : dst.writeUInt32BE;\n    var offset = 0;\n\n    for (var i = 0; i < src.length; i += 2) {\n        var code = src.readUInt16LE(i);\n        var isHighSurrogate = (0xD800 <= code && code < 0xDC00);\n        var isLowSurrogate = (0xDC00 <= code && code < 0xE000);\n\n        if (this.highSurrogate) {\n            if (isHighSurrogate || !isLowSurrogate) {\n                // There shouldn't be two high surrogates in a row, nor a high surrogate which isn't followed by a low\n                // surrogate. If this happens, keep the pending high surrogate as a stand-alone semi-invalid character\n                // (technically wrong, but expected by some applications, like Windows file names).\n                write32.call(dst, this.highSurrogate, offset);\n                offset += 4;\n            }\n            else {\n                // Create 32-bit value from high and low surrogates;\n                var codepoint = (((this.highSurrogate - 0xD800) << 10) | (code - 0xDC00)) + 0x10000;\n\n                write32.call(dst, codepoint, offset);\n                offset += 4;\n                this.highSurrogate = 0;\n\n                continue;\n            }\n        }\n\n        if (isHighSurrogate)\n            this.highSurrogate = code;\n        else {\n            // Even if the current character is a low surrogate, with no previous high surrogate, we'll\n            // encode it as a semi-invalid stand-alone character for the same reasons expressed above for\n            // unpaired high surrogates.\n            write32.call(dst, code, offset);\n            offset += 4;\n            this.highSurrogate = 0;\n        }\n    }\n\n    if (offset < dst.length)\n        dst = dst.slice(0, offset);\n\n    return dst;\n};\n\nUtf32Encoder.prototype.end = function() {\n    // Treat any leftover high surrogate as a semi-valid independent character.\n    if (!this.highSurrogate)\n        return;\n\n    var buf = Buffer.alloc(4);\n\n    if (this.isLE)\n        buf.writeUInt32LE(this.highSurrogate, 0);\n    else\n        buf.writeUInt32BE(this.highSurrogate, 0);\n\n    this.highSurrogate = 0;\n\n    return buf;\n};\n\n// -- Decoding\n\nfunction Utf32Decoder(options, codec) {\n    this.isLE = codec.isLE;\n    this.badChar = codec.iconv.defaultCharUnicode.charCodeAt(0);\n    this.overflow = [];\n}\n\nUtf32Decoder.prototype.write = function(src) {\n    if (src.length === 0)\n        return '';\n\n    var i = 0;\n    var codepoint = 0;\n    var dst = Buffer.alloc(src.length + 4);\n    var offset = 0;\n    var isLE = this.isLE;\n    var overflow = this.overflow;\n    var badChar = this.badChar;\n\n    if (overflow.length > 0) {\n        for (; i < src.length && overflow.length < 4; i++)\n            overflow.push(src[i]);\n        \n        if (overflow.length === 4) {\n            // NOTE: codepoint is a signed int32 and can be negative.\n            // NOTE: We copied this block from below to help V8 optimize it (it works with array, not buffer).\n            if (isLE) {\n                codepoint = overflow[i] | (overflow[i+1] << 8) | (overflow[i+2] << 16) | (overflow[i+3] << 24);\n            } else {\n                codepoint = overflow[i+3] | (overflow[i+2] << 8) | (overflow[i+1] << 16) | (overflow[i] << 24);\n            }\n            overflow.length = 0;\n\n            offset = _writeCodepoint(dst, offset, codepoint, badChar);\n        }\n    }\n\n    // Main loop. Should be as optimized as possible.\n    for (; i < src.length - 3; i += 4) {\n        // NOTE: codepoint is a signed int32 and can be negative.\n        if (isLE) {\n            codepoint = src[i] | (src[i+1] << 8) | (src[i+2] << 16) | (src[i+3] << 24);\n        } else {\n            codepoint = src[i+3] | (src[i+2] << 8) | (src[i+1] << 16) | (src[i] << 24);\n        }\n        offset = _writeCodepoint(dst, offset, codepoint, badChar);\n    }\n\n    // Keep overflowing bytes.\n    for (; i < src.length; i++) {\n        overflow.push(src[i]);\n    }\n\n    return dst.slice(0, offset).toString('ucs2');\n};\n\nfunction _writeCodepoint(dst, offset, codepoint, badChar) {\n    // NOTE: codepoint is signed int32 and can be negative. We keep it that way to help V8 with optimizations.\n    if (codepoint < 0 || codepoint > 0x10FFFF) {\n        // Not a valid Unicode codepoint\n        codepoint = badChar;\n    } \n\n    // Ephemeral Planes: Write high surrogate.\n    if (codepoint >= 0x10000) {\n        codepoint -= 0x10000;\n\n        var high = 0xD800 | (codepoint >> 10);\n        dst[offset++] = high & 0xff;\n        dst[offset++] = high >> 8;\n\n        // Low surrogate is written below.\n        var codepoint = 0xDC00 | (codepoint & 0x3FF);\n    }\n\n    // Write BMP char or low surrogate.\n    dst[offset++] = codepoint & 0xff;\n    dst[offset++] = codepoint >> 8;\n\n    return offset;\n};\n\nUtf32Decoder.prototype.end = function() {\n    this.overflow.length = 0;\n};\n\n// == UTF-32 Auto codec =============================================================\n// Decoder chooses automatically from UTF-32LE and UTF-32BE using BOM and space-based heuristic.\n// Defaults to UTF-32LE. http://en.wikipedia.org/wiki/UTF-32\n// Encoder/decoder default can be changed: iconv.decode(buf, 'utf32', {defaultEncoding: 'utf-32be'});\n\n// Encoder prepends BOM (which can be overridden with (addBOM: false}).\n\nexports.utf32 = Utf32AutoCodec;\nexports.ucs4 = 'utf32';\n\nfunction Utf32AutoCodec(options, iconv) {\n    this.iconv = iconv;\n}\n\nUtf32AutoCodec.prototype.encoder = Utf32AutoEncoder;\nUtf32AutoCodec.prototype.decoder = Utf32AutoDecoder;\n\n// -- Encoding\n\nfunction Utf32AutoEncoder(options, codec) {\n    options = options || {};\n\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n\n    this.encoder = codec.iconv.getEncoder(options.defaultEncoding || 'utf-32le', options);\n}\n\nUtf32AutoEncoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n};\n\nUtf32AutoEncoder.prototype.end = function() {\n    return this.encoder.end();\n};\n\n// -- Decoding\n\nfunction Utf32AutoDecoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf32AutoDecoder.prototype.write = function(buf) {\n    if (!this.decoder) { \n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n\n        if (this.initialBufsLen < 32) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n};\n\nUtf32AutoDecoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.end();\n};\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var invalidLE = 0, invalidBE = 0;   // Number of invalid chars when decoded as LE or BE.\n    var bmpCharsLE = 0, bmpCharsBE = 0; // Number of BMP chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 4) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE && b[2] === 0 && b[3] === 0) {\n                        return 'utf-32le';\n                    }\n                    if (b[0] === 0 && b[1] === 0 && b[2] === 0xFE && b[3] === 0xFF) {\n                        return 'utf-32be';\n                    }\n                }\n\n                if (b[0] !== 0 || b[1] > 0x10) invalidBE++;\n                if (b[3] !== 0 || b[2] > 0x10) invalidLE++;\n\n                if (b[0] === 0 && b[1] === 0 && (b[2] !== 0 || b[3] !== 0)) bmpCharsBE++;\n                if ((b[0] !== 0 || b[1] !== 0) && b[2] === 0 && b[3] === 0) bmpCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    if (bmpCharsBE - invalidBE > bmpCharsLE - invalidLE)  return 'utf-32be';\n    if (bmpCharsBE - invalidBE < bmpCharsLE - invalidLE)  return 'utf-32le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-32le';\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Note: UTF16-LE (or UCS2) codec is Node.js native. See encodings/internal.js\n\n// == UTF16-BE codec. ==========================================================\n\nexports.utf16be = Utf16BECodec;\nfunction Utf16BECodec() {\n}\n\nUtf16BECodec.prototype.encoder = Utf16BEEncoder;\nUtf16BECodec.prototype.decoder = Utf16BEDecoder;\nUtf16BECodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf16BEEncoder() {\n}\n\nUtf16BEEncoder.prototype.write = function(str) {\n    var buf = Buffer.from(str, 'ucs2');\n    for (var i = 0; i < buf.length; i += 2) {\n        var tmp = buf[i]; buf[i] = buf[i+1]; buf[i+1] = tmp;\n    }\n    return buf;\n}\n\nUtf16BEEncoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf16BEDecoder() {\n    this.overflowByte = -1;\n}\n\nUtf16BEDecoder.prototype.write = function(buf) {\n    if (buf.length == 0)\n        return '';\n\n    var buf2 = Buffer.alloc(buf.length + 1),\n        i = 0, j = 0;\n\n    if (this.overflowByte !== -1) {\n        buf2[0] = buf[0];\n        buf2[1] = this.overflowByte;\n        i = 1; j = 2;\n    }\n\n    for (; i < buf.length-1; i += 2, j+= 2) {\n        buf2[j] = buf[i+1];\n        buf2[j+1] = buf[i];\n    }\n\n    this.overflowByte = (i == buf.length-1) ? buf[buf.length-1] : -1;\n\n    return buf2.slice(0, j).toString('ucs2');\n}\n\nUtf16BEDecoder.prototype.end = function() {\n    this.overflowByte = -1;\n}\n\n\n// == UTF-16 codec =============================================================\n// Decoder chooses automatically from UTF-16LE and UTF-16BE using BOM and space-based heuristic.\n// Defaults to UTF-16LE, as it's prevalent and default in Node.\n// http://en.wikipedia.org/wiki/UTF-16 and http://encoding.spec.whatwg.org/#utf-16le\n// Decoder default can be changed: iconv.decode(buf, 'utf16', {defaultEncoding: 'utf-16be'});\n\n// Encoder uses UTF-16LE and prepends BOM (which can be overridden with addBOM: false).\n\nexports.utf16 = Utf16Codec;\nfunction Utf16Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n}\n\nUtf16Codec.prototype.encoder = Utf16Encoder;\nUtf16Codec.prototype.decoder = Utf16Decoder;\n\n\n// -- Encoding (pass-through)\n\nfunction Utf16Encoder(options, codec) {\n    options = options || {};\n    if (options.addBOM === undefined)\n        options.addBOM = true;\n    this.encoder = codec.iconv.getEncoder('utf-16le', options);\n}\n\nUtf16Encoder.prototype.write = function(str) {\n    return this.encoder.write(str);\n}\n\nUtf16Encoder.prototype.end = function() {\n    return this.encoder.end();\n}\n\n\n// -- Decoding\n\nfunction Utf16Decoder(options, codec) {\n    this.decoder = null;\n    this.initialBufs = [];\n    this.initialBufsLen = 0;\n\n    this.options = options || {};\n    this.iconv = codec.iconv;\n}\n\nUtf16Decoder.prototype.write = function(buf) {\n    if (!this.decoder) {\n        // Codec is not chosen yet. Accumulate initial bytes.\n        this.initialBufs.push(buf);\n        this.initialBufsLen += buf.length;\n        \n        if (this.initialBufsLen < 16) // We need more bytes to use space heuristic (see below)\n            return '';\n\n        // We have enough bytes -> detect endianness.\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n\n    return this.decoder.write(buf);\n}\n\nUtf16Decoder.prototype.end = function() {\n    if (!this.decoder) {\n        var encoding = detectEncoding(this.initialBufs, this.options.defaultEncoding);\n        this.decoder = this.iconv.getDecoder(encoding, this.options);\n\n        var resStr = '';\n        for (var i = 0; i < this.initialBufs.length; i++)\n            resStr += this.decoder.write(this.initialBufs[i]);\n\n        var trail = this.decoder.end();\n        if (trail)\n            resStr += trail;\n\n        this.initialBufs.length = this.initialBufsLen = 0;\n        return resStr;\n    }\n    return this.decoder.end();\n}\n\nfunction detectEncoding(bufs, defaultEncoding) {\n    var b = [];\n    var charsProcessed = 0;\n    var asciiCharsLE = 0, asciiCharsBE = 0; // Number of ASCII chars when decoded as LE or BE.\n\n    outer_loop:\n    for (var i = 0; i < bufs.length; i++) {\n        var buf = bufs[i];\n        for (var j = 0; j < buf.length; j++) {\n            b.push(buf[j]);\n            if (b.length === 2) {\n                if (charsProcessed === 0) {\n                    // Check BOM first.\n                    if (b[0] === 0xFF && b[1] === 0xFE) return 'utf-16le';\n                    if (b[0] === 0xFE && b[1] === 0xFF) return 'utf-16be';\n                }\n\n                if (b[0] === 0 && b[1] !== 0) asciiCharsBE++;\n                if (b[0] !== 0 && b[1] === 0) asciiCharsLE++;\n\n                b.length = 0;\n                charsProcessed++;\n\n                if (charsProcessed >= 100) {\n                    break outer_loop;\n                }\n            }\n        }\n    }\n\n    // Make decisions.\n    // Most of the time, the content has ASCII chars (U+00**), but the opposite (U+**00) is uncommon.\n    // So, we count ASCII as if it was LE or BE, and decide from that.\n    if (asciiCharsBE > asciiCharsLE) return 'utf-16be';\n    if (asciiCharsBE < asciiCharsLE) return 'utf-16le';\n\n    // Couldn't decide (likely all zeros or not enough data).\n    return defaultEncoding || 'utf-16le';\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// UTF-7 codec, according to https://tools.ietf.org/html/rfc2152\n// See also below a UTF-7-IMAP codec, according to http://tools.ietf.org/html/rfc3501#section-5.1.3\n\nexports.utf7 = Utf7Codec;\nexports.unicode11utf7 = 'utf7'; // Alias UNICODE-1-1-UTF-7\nfunction Utf7Codec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7Codec.prototype.encoder = Utf7Encoder;\nUtf7Codec.prototype.decoder = Utf7Decoder;\nUtf7Codec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nvar nonDirectChars = /[^A-Za-z0-9'\\(\\),-\\.\\/:\\? \\n\\r\\t]+/g;\n\nfunction Utf7Encoder(options, codec) {\n    this.iconv = codec.iconv;\n}\n\nUtf7Encoder.prototype.write = function(str) {\n    // Naive implementation.\n    // Non-direct chars are encoded as \"+<base64>-\"; single \"+\" char is encoded as \"+-\".\n    return Buffer.from(str.replace(nonDirectChars, function(chunk) {\n        return \"+\" + (chunk === '+' ? '' : \n            this.iconv.encode(chunk, 'utf16-be').toString('base64').replace(/=+$/, '')) \n            + \"-\";\n    }.bind(this)));\n}\n\nUtf7Encoder.prototype.end = function() {\n}\n\n\n// -- Decoding\n\nfunction Utf7Decoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64Regex = /[A-Za-z0-9\\/+]/;\nvar base64Chars = [];\nfor (var i = 0; i < 256; i++)\n    base64Chars[i] = base64Regex.test(String.fromCharCode(i));\n\nvar plusChar = '+'.charCodeAt(0), \n    minusChar = '-'.charCodeAt(0),\n    andChar = '&'.charCodeAt(0);\n\nUtf7Decoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '+'\n            if (buf[i] == plusChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64Chars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) {// \"+-\" -> \"+\"\n                    res += \"+\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\");\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus is absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\");\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7Decoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n// UTF-7-IMAP codec.\n// RFC3501 Sec. 5.1.3 Modified UTF-7 (http://tools.ietf.org/html/rfc3501#section-5.1.3)\n// Differences:\n//  * Base64 part is started by \"&\" instead of \"+\"\n//  * Direct characters are 0x20-0x7E, except \"&\" (0x26)\n//  * In Base64, \",\" is used instead of \"/\"\n//  * Base64 must not be used to represent direct characters.\n//  * No implicit shift back from Base64 (should always end with '-')\n//  * String must end in non-shifted position.\n//  * \"-&\" while in base64 is not allowed.\n\n\nexports.utf7imap = Utf7IMAPCodec;\nfunction Utf7IMAPCodec(codecOptions, iconv) {\n    this.iconv = iconv;\n};\n\nUtf7IMAPCodec.prototype.encoder = Utf7IMAPEncoder;\nUtf7IMAPCodec.prototype.decoder = Utf7IMAPDecoder;\nUtf7IMAPCodec.prototype.bomAware = true;\n\n\n// -- Encoding\n\nfunction Utf7IMAPEncoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = Buffer.alloc(6);\n    this.base64AccumIdx = 0;\n}\n\nUtf7IMAPEncoder.prototype.write = function(str) {\n    var inBase64 = this.inBase64,\n        base64Accum = this.base64Accum,\n        base64AccumIdx = this.base64AccumIdx,\n        buf = Buffer.alloc(str.length*5 + 10), bufIdx = 0;\n\n    for (var i = 0; i < str.length; i++) {\n        var uChar = str.charCodeAt(i);\n        if (0x20 <= uChar && uChar <= 0x7E) { // Direct character or '&'.\n            if (inBase64) {\n                if (base64AccumIdx > 0) {\n                    bufIdx += buf.write(base64Accum.slice(0, base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n                    base64AccumIdx = 0;\n                }\n\n                buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n                inBase64 = false;\n            }\n\n            if (!inBase64) {\n                buf[bufIdx++] = uChar; // Write direct character\n\n                if (uChar === andChar)  // Ampersand -> '&-'\n                    buf[bufIdx++] = minusChar;\n            }\n\n        } else { // Non-direct character\n            if (!inBase64) {\n                buf[bufIdx++] = andChar; // Write '&', then go to base64 mode.\n                inBase64 = true;\n            }\n            if (inBase64) {\n                base64Accum[base64AccumIdx++] = uChar >> 8;\n                base64Accum[base64AccumIdx++] = uChar & 0xFF;\n\n                if (base64AccumIdx == base64Accum.length) {\n                    bufIdx += buf.write(base64Accum.toString('base64').replace(/\\//g, ','), bufIdx);\n                    base64AccumIdx = 0;\n                }\n            }\n        }\n    }\n\n    this.inBase64 = inBase64;\n    this.base64AccumIdx = base64AccumIdx;\n\n    return buf.slice(0, bufIdx);\n}\n\nUtf7IMAPEncoder.prototype.end = function() {\n    var buf = Buffer.alloc(10), bufIdx = 0;\n    if (this.inBase64) {\n        if (this.base64AccumIdx > 0) {\n            bufIdx += buf.write(this.base64Accum.slice(0, this.base64AccumIdx).toString('base64').replace(/\\//g, ',').replace(/=+$/, ''), bufIdx);\n            this.base64AccumIdx = 0;\n        }\n\n        buf[bufIdx++] = minusChar; // Write '-', then go to direct mode.\n        this.inBase64 = false;\n    }\n\n    return buf.slice(0, bufIdx);\n}\n\n\n// -- Decoding\n\nfunction Utf7IMAPDecoder(options, codec) {\n    this.iconv = codec.iconv;\n    this.inBase64 = false;\n    this.base64Accum = '';\n}\n\nvar base64IMAPChars = base64Chars.slice();\nbase64IMAPChars[','.charCodeAt(0)] = true;\n\nUtf7IMAPDecoder.prototype.write = function(buf) {\n    var res = \"\", lastI = 0,\n        inBase64 = this.inBase64,\n        base64Accum = this.base64Accum;\n\n    // The decoder is more involved as we must handle chunks in stream.\n    // It is forgiving, closer to standard UTF-7 (for example, '-' is optional at the end).\n\n    for (var i = 0; i < buf.length; i++) {\n        if (!inBase64) { // We're in direct mode.\n            // Write direct chars until '&'\n            if (buf[i] == andChar) {\n                res += this.iconv.decode(buf.slice(lastI, i), \"ascii\"); // Write direct chars.\n                lastI = i+1;\n                inBase64 = true;\n            }\n        } else { // We decode base64.\n            if (!base64IMAPChars[buf[i]]) { // Base64 ended.\n                if (i == lastI && buf[i] == minusChar) { // \"&-\" -> \"&\"\n                    res += \"&\";\n                } else {\n                    var b64str = base64Accum + this.iconv.decode(buf.slice(lastI, i), \"ascii\").replace(/,/g, '/');\n                    res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n                }\n\n                if (buf[i] != minusChar) // Minus may be absorbed after base64.\n                    i--;\n\n                lastI = i+1;\n                inBase64 = false;\n                base64Accum = '';\n            }\n        }\n    }\n\n    if (!inBase64) {\n        res += this.iconv.decode(buf.slice(lastI), \"ascii\"); // Write direct chars.\n    } else {\n        var b64str = base64Accum + this.iconv.decode(buf.slice(lastI), \"ascii\").replace(/,/g, '/');\n\n        var canBeDecoded = b64str.length - (b64str.length % 8); // Minimal chunk: 2 quads -> 2x3 bytes -> 3 chars.\n        base64Accum = b64str.slice(canBeDecoded); // The rest will be decoded in future.\n        b64str = b64str.slice(0, canBeDecoded);\n\n        res += this.iconv.decode(Buffer.from(b64str, 'base64'), \"utf16-be\");\n    }\n\n    this.inBase64 = inBase64;\n    this.base64Accum = base64Accum;\n\n    return res;\n}\n\nUtf7IMAPDecoder.prototype.end = function() {\n    var res = \"\";\n    if (this.inBase64 && this.base64Accum.length > 0)\n        res = this.iconv.decode(Buffer.from(this.base64Accum, 'base64'), \"utf16-be\");\n\n    this.inBase64 = false;\n    this.base64Accum = '';\n    return res;\n}\n\n\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Single-byte codec. Needs a 'chars' string parameter that contains 256 or 128 chars that\n// correspond to encoded bytes (if 128 - then lower half is ASCII). \n\nexports._sbcs = SBCSCodec;\nfunction SBCSCodec(codecOptions, iconv) {\n    if (!codecOptions)\n        throw new Error(\"SBCS codec is called without the data.\")\n    \n    // Prepare char buffer for decoding.\n    if (!codecOptions.chars || (codecOptions.chars.length !== 128 && codecOptions.chars.length !== 256))\n        throw new Error(\"Encoding '\"+codecOptions.type+\"' has incorrect 'chars' (must be of len 128 or 256)\");\n    \n    if (codecOptions.chars.length === 128) {\n        var asciiString = \"\";\n        for (var i = 0; i < 128; i++)\n            asciiString += String.fromCharCode(i);\n        codecOptions.chars = asciiString + codecOptions.chars;\n    }\n\n    this.decodeBuf = Buffer.from(codecOptions.chars, 'ucs2');\n    \n    // Encoding buffer.\n    var encodeBuf = Buffer.alloc(65536, iconv.defaultCharSingleByte.charCodeAt(0));\n\n    for (var i = 0; i < codecOptions.chars.length; i++)\n        encodeBuf[codecOptions.chars.charCodeAt(i)] = i;\n\n    this.encodeBuf = encodeBuf;\n}\n\nSBCSCodec.prototype.encoder = SBCSEncoder;\nSBCSCodec.prototype.decoder = SBCSDecoder;\n\n\nfunction SBCSEncoder(options, codec) {\n    this.encodeBuf = codec.encodeBuf;\n}\n\nSBCSEncoder.prototype.write = function(str) {\n    var buf = Buffer.alloc(str.length);\n    for (var i = 0; i < str.length; i++)\n        buf[i] = this.encodeBuf[str.charCodeAt(i)];\n    \n    return buf;\n}\n\nSBCSEncoder.prototype.end = function() {\n}\n\n\nfunction SBCSDecoder(options, codec) {\n    this.decodeBuf = codec.decodeBuf;\n}\n\nSBCSDecoder.prototype.write = function(buf) {\n    // Strings are immutable in JS -> we use ucs2 buffer to speed up computations.\n    var decodeBuf = this.decodeBuf;\n    var newBuf = Buffer.alloc(buf.length*2);\n    var idx1 = 0, idx2 = 0;\n    for (var i = 0; i < buf.length; i++) {\n        idx1 = buf[i]*2; idx2 = i*2;\n        newBuf[idx2] = decodeBuf[idx1];\n        newBuf[idx2+1] = decodeBuf[idx1+1];\n    }\n    return newBuf.toString('ucs2');\n}\n\nSBCSDecoder.prototype.end = function() {\n}\n","\"use strict\";\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// Multibyte codec. In this scheme, a character is represented by 1 or more bytes.\n// Our codec supports UTF-16 surrogates, extensions for GB18030 and unicode sequences.\n// To save memory and loading time, we read table files only when requested.\n\nexports._dbcs = DBCSCodec;\n\nvar UNASSIGNED = -1,\n    GB18030_CODE = -2,\n    SEQ_START  = -10,\n    NODE_START = -1000,\n    UNASSIGNED_NODE = new Array(0x100),\n    DEF_CHAR = -1;\n\nfor (var i = 0; i < 0x100; i++)\n    UNASSIGNED_NODE[i] = UNASSIGNED;\n\n\n// Class DBCSCodec reads and initializes mapping tables.\nfunction DBCSCodec(codecOptions, iconv) {\n    this.encodingName = codecOptions.encodingName;\n    if (!codecOptions)\n        throw new Error(\"DBCS codec is called without the data.\")\n    if (!codecOptions.table)\n        throw new Error(\"Encoding '\" + this.encodingName + \"' has no data.\");\n\n    // Load tables.\n    var mappingTable = codecOptions.table();\n\n\n    // Decode tables: MBCS -> Unicode.\n\n    // decodeTables is a trie, encoded as an array of arrays of integers. Internal arrays are trie nodes and all have len = 256.\n    // Trie root is decodeTables[0].\n    // Values: >=  0 -> unicode character code. can be > 0xFFFF\n    //         == UNASSIGNED -> unknown/unassigned sequence.\n    //         == GB18030_CODE -> this is the end of a GB18030 4-byte sequence.\n    //         <= NODE_START -> index of the next node in our trie to process next byte.\n    //         <= SEQ_START  -> index of the start of a character code sequence, in decodeTableSeq.\n    this.decodeTables = [];\n    this.decodeTables[0] = UNASSIGNED_NODE.slice(0); // Create root node.\n\n    // Sometimes a MBCS char corresponds to a sequence of unicode chars. We store them as arrays of integers here. \n    this.decodeTableSeq = [];\n\n    // Actual mapping tables consist of chunks. Use them to fill up decode tables.\n    for (var i = 0; i < mappingTable.length; i++)\n        this._addDecodeChunk(mappingTable[i]);\n\n    // Load & create GB18030 tables when needed.\n    if (typeof codecOptions.gb18030 === 'function') {\n        this.gb18030 = codecOptions.gb18030(); // Load GB18030 ranges.\n\n        // Add GB18030 common decode nodes.\n        var commonThirdByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        var commonFourthByteNodeIdx = this.decodeTables.length;\n        this.decodeTables.push(UNASSIGNED_NODE.slice(0));\n\n        // Fill out the tree\n        var firstByteNode = this.decodeTables[0];\n        for (var i = 0x81; i <= 0xFE; i++) {\n            var secondByteNode = this.decodeTables[NODE_START - firstByteNode[i]];\n            for (var j = 0x30; j <= 0x39; j++) {\n                if (secondByteNode[j] === UNASSIGNED) {\n                    secondByteNode[j] = NODE_START - commonThirdByteNodeIdx;\n                } else if (secondByteNode[j] > NODE_START) {\n                    throw new Error(\"gb18030 decode tables conflict at byte 2\");\n                }\n\n                var thirdByteNode = this.decodeTables[NODE_START - secondByteNode[j]];\n                for (var k = 0x81; k <= 0xFE; k++) {\n                    if (thirdByteNode[k] === UNASSIGNED) {\n                        thirdByteNode[k] = NODE_START - commonFourthByteNodeIdx;\n                    } else if (thirdByteNode[k] === NODE_START - commonFourthByteNodeIdx) {\n                        continue;\n                    } else if (thirdByteNode[k] > NODE_START) {\n                        throw new Error(\"gb18030 decode tables conflict at byte 3\");\n                    }\n\n                    var fourthByteNode = this.decodeTables[NODE_START - thirdByteNode[k]];\n                    for (var l = 0x30; l <= 0x39; l++) {\n                        if (fourthByteNode[l] === UNASSIGNED)\n                            fourthByteNode[l] = GB18030_CODE;\n                    }\n                }\n            }\n        }\n    }\n\n    this.defaultCharUnicode = iconv.defaultCharUnicode;\n\n    \n    // Encode tables: Unicode -> DBCS.\n\n    // `encodeTable` is array mapping from unicode char to encoded char. All its values are integers for performance.\n    // Because it can be sparse, it is represented as array of buckets by 256 chars each. Bucket can be null.\n    // Values: >=  0 -> it is a normal char. Write the value (if <=256 then 1 byte, if <=65536 then 2 bytes, etc.).\n    //         == UNASSIGNED -> no conversion found. Output a default char.\n    //         <= SEQ_START  -> it's an index in encodeTableSeq, see below. The character starts a sequence.\n    this.encodeTable = [];\n    \n    // `encodeTableSeq` is used when a sequence of unicode characters is encoded as a single code. We use a tree of\n    // objects where keys correspond to characters in sequence and leafs are the encoded dbcs values. A special DEF_CHAR key\n    // means end of sequence (needed when one sequence is a strict subsequence of another).\n    // Objects are kept separately from encodeTable to increase performance.\n    this.encodeTableSeq = [];\n\n    // Some chars can be decoded, but need not be encoded.\n    var skipEncodeChars = {};\n    if (codecOptions.encodeSkipVals)\n        for (var i = 0; i < codecOptions.encodeSkipVals.length; i++) {\n            var val = codecOptions.encodeSkipVals[i];\n            if (typeof val === 'number')\n                skipEncodeChars[val] = true;\n            else\n                for (var j = val.from; j <= val.to; j++)\n                    skipEncodeChars[j] = true;\n        }\n        \n    // Use decode trie to recursively fill out encode tables.\n    this._fillEncodeTable(0, 0, skipEncodeChars);\n\n    // Add more encoding pairs when needed.\n    if (codecOptions.encodeAdd) {\n        for (var uChar in codecOptions.encodeAdd)\n            if (Object.prototype.hasOwnProperty.call(codecOptions.encodeAdd, uChar))\n                this._setEncodeChar(uChar.charCodeAt(0), codecOptions.encodeAdd[uChar]);\n    }\n\n    this.defCharSB  = this.encodeTable[0][iconv.defaultCharSingleByte.charCodeAt(0)];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = this.encodeTable[0]['?'];\n    if (this.defCharSB === UNASSIGNED) this.defCharSB = \"?\".charCodeAt(0);\n}\n\nDBCSCodec.prototype.encoder = DBCSEncoder;\nDBCSCodec.prototype.decoder = DBCSDecoder;\n\n// Decoder helpers\nDBCSCodec.prototype._getDecodeTrieNode = function(addr) {\n    var bytes = [];\n    for (; addr > 0; addr >>>= 8)\n        bytes.push(addr & 0xFF);\n    if (bytes.length == 0)\n        bytes.push(0);\n\n    var node = this.decodeTables[0];\n    for (var i = bytes.length-1; i > 0; i--) { // Traverse nodes deeper into the trie.\n        var val = node[bytes[i]];\n\n        if (val == UNASSIGNED) { // Create new node.\n            node[bytes[i]] = NODE_START - this.decodeTables.length;\n            this.decodeTables.push(node = UNASSIGNED_NODE.slice(0));\n        }\n        else if (val <= NODE_START) { // Existing node.\n            node = this.decodeTables[NODE_START - val];\n        }\n        else\n            throw new Error(\"Overwrite byte in \" + this.encodingName + \", addr: \" + addr.toString(16));\n    }\n    return node;\n}\n\n\nDBCSCodec.prototype._addDecodeChunk = function(chunk) {\n    // First element of chunk is the hex mbcs code where we start.\n    var curAddr = parseInt(chunk[0], 16);\n\n    // Choose the decoding node where we'll write our chars.\n    var writeTable = this._getDecodeTrieNode(curAddr);\n    curAddr = curAddr & 0xFF;\n\n    // Write all other elements of the chunk to the table.\n    for (var k = 1; k < chunk.length; k++) {\n        var part = chunk[k];\n        if (typeof part === \"string\") { // String, write as-is.\n            for (var l = 0; l < part.length;) {\n                var code = part.charCodeAt(l++);\n                if (0xD800 <= code && code < 0xDC00) { // Decode surrogate\n                    var codeTrail = part.charCodeAt(l++);\n                    if (0xDC00 <= codeTrail && codeTrail < 0xE000)\n                        writeTable[curAddr++] = 0x10000 + (code - 0xD800) * 0x400 + (codeTrail - 0xDC00);\n                    else\n                        throw new Error(\"Incorrect surrogate pair in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n                }\n                else if (0x0FF0 < code && code <= 0x0FFF) { // Character sequence (our own encoding used)\n                    var len = 0xFFF - code + 2;\n                    var seq = [];\n                    for (var m = 0; m < len; m++)\n                        seq.push(part.charCodeAt(l++)); // Simple variation: don't support surrogates or subsequences in seq.\n\n                    writeTable[curAddr++] = SEQ_START - this.decodeTableSeq.length;\n                    this.decodeTableSeq.push(seq);\n                }\n                else\n                    writeTable[curAddr++] = code; // Basic char\n            }\n        } \n        else if (typeof part === \"number\") { // Integer, meaning increasing sequence starting with prev character.\n            var charCode = writeTable[curAddr - 1] + 1;\n            for (var l = 0; l < part; l++)\n                writeTable[curAddr++] = charCode++;\n        }\n        else\n            throw new Error(\"Incorrect type '\" + typeof part + \"' given in \"  + this.encodingName + \" at chunk \" + chunk[0]);\n    }\n    if (curAddr > 0xFF)\n        throw new Error(\"Incorrect chunk in \"  + this.encodingName + \" at addr \" + chunk[0] + \": too long\" + curAddr);\n}\n\n// Encoder helpers\nDBCSCodec.prototype._getEncodeBucket = function(uCode) {\n    var high = uCode >> 8; // This could be > 0xFF because of astral characters.\n    if (this.encodeTable[high] === undefined)\n        this.encodeTable[high] = UNASSIGNED_NODE.slice(0); // Create bucket on demand.\n    return this.encodeTable[high];\n}\n\nDBCSCodec.prototype._setEncodeChar = function(uCode, dbcsCode) {\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n    if (bucket[low] <= SEQ_START)\n        this.encodeTableSeq[SEQ_START-bucket[low]][DEF_CHAR] = dbcsCode; // There's already a sequence, set a single-char subsequence of it.\n    else if (bucket[low] == UNASSIGNED)\n        bucket[low] = dbcsCode;\n}\n\nDBCSCodec.prototype._setEncodeSequence = function(seq, dbcsCode) {\n    \n    // Get the root of character tree according to first character of the sequence.\n    var uCode = seq[0];\n    var bucket = this._getEncodeBucket(uCode);\n    var low = uCode & 0xFF;\n\n    var node;\n    if (bucket[low] <= SEQ_START) {\n        // There's already a sequence with  - use it.\n        node = this.encodeTableSeq[SEQ_START-bucket[low]];\n    }\n    else {\n        // There was no sequence object - allocate a new one.\n        node = {};\n        if (bucket[low] !== UNASSIGNED) node[DEF_CHAR] = bucket[low]; // If a char was set before - make it a single-char subsequence.\n        bucket[low] = SEQ_START - this.encodeTableSeq.length;\n        this.encodeTableSeq.push(node);\n    }\n\n    // Traverse the character tree, allocating new nodes as needed.\n    for (var j = 1; j < seq.length-1; j++) {\n        var oldVal = node[uCode];\n        if (typeof oldVal === 'object')\n            node = oldVal;\n        else {\n            node = node[uCode] = {}\n            if (oldVal !== undefined)\n                node[DEF_CHAR] = oldVal\n        }\n    }\n\n    // Set the leaf to given dbcsCode.\n    uCode = seq[seq.length-1];\n    node[uCode] = dbcsCode;\n}\n\nDBCSCodec.prototype._fillEncodeTable = function(nodeIdx, prefix, skipEncodeChars) {\n    var node = this.decodeTables[nodeIdx];\n    var hasValues = false;\n    var subNodeEmpty = {};\n    for (var i = 0; i < 0x100; i++) {\n        var uCode = node[i];\n        var mbCode = prefix + i;\n        if (skipEncodeChars[mbCode])\n            continue;\n\n        if (uCode >= 0) {\n            this._setEncodeChar(uCode, mbCode);\n            hasValues = true;\n        } else if (uCode <= NODE_START) {\n            var subNodeIdx = NODE_START - uCode;\n            if (!subNodeEmpty[subNodeIdx]) {  // Skip empty subtrees (they are too large in gb18030).\n                var newPrefix = (mbCode << 8) >>> 0;  // NOTE: '>>> 0' keeps 32-bit num positive.\n                if (this._fillEncodeTable(subNodeIdx, newPrefix, skipEncodeChars))\n                    hasValues = true;\n                else\n                    subNodeEmpty[subNodeIdx] = true;\n            }\n        } else if (uCode <= SEQ_START) {\n            this._setEncodeSequence(this.decodeTableSeq[SEQ_START - uCode], mbCode);\n            hasValues = true;\n        }\n    }\n    return hasValues;\n}\n\n\n\n// == Encoder ==================================================================\n\nfunction DBCSEncoder(options, codec) {\n    // Encoder state\n    this.leadSurrogate = -1;\n    this.seqObj = undefined;\n    \n    // Static data\n    this.encodeTable = codec.encodeTable;\n    this.encodeTableSeq = codec.encodeTableSeq;\n    this.defaultCharSingleByte = codec.defCharSB;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSEncoder.prototype.write = function(str) {\n    var newBuf = Buffer.alloc(str.length * (this.gb18030 ? 4 : 3)),\n        leadSurrogate = this.leadSurrogate,\n        seqObj = this.seqObj, nextChar = -1,\n        i = 0, j = 0;\n\n    while (true) {\n        // 0. Get next character.\n        if (nextChar === -1) {\n            if (i == str.length) break;\n            var uCode = str.charCodeAt(i++);\n        }\n        else {\n            var uCode = nextChar;\n            nextChar = -1;    \n        }\n\n        // 1. Handle surrogates.\n        if (0xD800 <= uCode && uCode < 0xE000) { // Char is one of surrogates.\n            if (uCode < 0xDC00) { // We've got lead surrogate.\n                if (leadSurrogate === -1) {\n                    leadSurrogate = uCode;\n                    continue;\n                } else {\n                    leadSurrogate = uCode;\n                    // Double lead surrogate found.\n                    uCode = UNASSIGNED;\n                }\n            } else { // We've got trail surrogate.\n                if (leadSurrogate !== -1) {\n                    uCode = 0x10000 + (leadSurrogate - 0xD800) * 0x400 + (uCode - 0xDC00);\n                    leadSurrogate = -1;\n                } else {\n                    // Incomplete surrogate pair - only trail surrogate found.\n                    uCode = UNASSIGNED;\n                }\n                \n            }\n        }\n        else if (leadSurrogate !== -1) {\n            // Incomplete surrogate pair - only lead surrogate found.\n            nextChar = uCode; uCode = UNASSIGNED; // Write an error, then current char.\n            leadSurrogate = -1;\n        }\n\n        // 2. Convert uCode character.\n        var dbcsCode = UNASSIGNED;\n        if (seqObj !== undefined && uCode != UNASSIGNED) { // We are in the middle of the sequence\n            var resCode = seqObj[uCode];\n            if (typeof resCode === 'object') { // Sequence continues.\n                seqObj = resCode;\n                continue;\n\n            } else if (typeof resCode == 'number') { // Sequence finished. Write it.\n                dbcsCode = resCode;\n\n            } else if (resCode == undefined) { // Current character is not part of the sequence.\n\n                // Try default character for this sequence\n                resCode = seqObj[DEF_CHAR];\n                if (resCode !== undefined) {\n                    dbcsCode = resCode; // Found. Write it.\n                    nextChar = uCode; // Current character will be written too in the next iteration.\n\n                } else {\n                    // TODO: What if we have no default? (resCode == undefined)\n                    // Then, we should write first char of the sequence as-is and try the rest recursively.\n                    // Didn't do it for now because no encoding has this situation yet.\n                    // Currently, just skip the sequence and write current char.\n                }\n            }\n            seqObj = undefined;\n        }\n        else if (uCode >= 0) {  // Regular character\n            var subtable = this.encodeTable[uCode >> 8];\n            if (subtable !== undefined)\n                dbcsCode = subtable[uCode & 0xFF];\n            \n            if (dbcsCode <= SEQ_START) { // Sequence start\n                seqObj = this.encodeTableSeq[SEQ_START-dbcsCode];\n                continue;\n            }\n\n            if (dbcsCode == UNASSIGNED && this.gb18030) {\n                // Use GB18030 algorithm to find character(s) to write.\n                var idx = findIdx(this.gb18030.uChars, uCode);\n                if (idx != -1) {\n                    var dbcsCode = this.gb18030.gbChars[idx] + (uCode - this.gb18030.uChars[idx]);\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 12600); dbcsCode = dbcsCode % 12600;\n                    newBuf[j++] = 0x30 + Math.floor(dbcsCode / 1260); dbcsCode = dbcsCode % 1260;\n                    newBuf[j++] = 0x81 + Math.floor(dbcsCode / 10); dbcsCode = dbcsCode % 10;\n                    newBuf[j++] = 0x30 + dbcsCode;\n                    continue;\n                }\n            }\n        }\n\n        // 3. Write dbcsCode character.\n        if (dbcsCode === UNASSIGNED)\n            dbcsCode = this.defaultCharSingleByte;\n        \n        if (dbcsCode < 0x100) {\n            newBuf[j++] = dbcsCode;\n        }\n        else if (dbcsCode < 0x10000) {\n            newBuf[j++] = dbcsCode >> 8;   // high byte\n            newBuf[j++] = dbcsCode & 0xFF; // low byte\n        }\n        else if (dbcsCode < 0x1000000) {\n            newBuf[j++] = dbcsCode >> 16;\n            newBuf[j++] = (dbcsCode >> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        } else {\n            newBuf[j++] = dbcsCode >>> 24;\n            newBuf[j++] = (dbcsCode >>> 16) & 0xFF;\n            newBuf[j++] = (dbcsCode >>> 8) & 0xFF;\n            newBuf[j++] = dbcsCode & 0xFF;\n        }\n    }\n\n    this.seqObj = seqObj;\n    this.leadSurrogate = leadSurrogate;\n    return newBuf.slice(0, j);\n}\n\nDBCSEncoder.prototype.end = function() {\n    if (this.leadSurrogate === -1 && this.seqObj === undefined)\n        return; // All clean. Most often case.\n\n    var newBuf = Buffer.alloc(10), j = 0;\n\n    if (this.seqObj) { // We're in the sequence.\n        var dbcsCode = this.seqObj[DEF_CHAR];\n        if (dbcsCode !== undefined) { // Write beginning of the sequence.\n            if (dbcsCode < 0x100) {\n                newBuf[j++] = dbcsCode;\n            }\n            else {\n                newBuf[j++] = dbcsCode >> 8;   // high byte\n                newBuf[j++] = dbcsCode & 0xFF; // low byte\n            }\n        } else {\n            // See todo above.\n        }\n        this.seqObj = undefined;\n    }\n\n    if (this.leadSurrogate !== -1) {\n        // Incomplete surrogate pair - only lead surrogate found.\n        newBuf[j++] = this.defaultCharSingleByte;\n        this.leadSurrogate = -1;\n    }\n    \n    return newBuf.slice(0, j);\n}\n\n// Export for testing\nDBCSEncoder.prototype.findIdx = findIdx;\n\n\n// == Decoder ==================================================================\n\nfunction DBCSDecoder(options, codec) {\n    // Decoder state\n    this.nodeIdx = 0;\n    this.prevBytes = [];\n\n    // Static data\n    this.decodeTables = codec.decodeTables;\n    this.decodeTableSeq = codec.decodeTableSeq;\n    this.defaultCharUnicode = codec.defaultCharUnicode;\n    this.gb18030 = codec.gb18030;\n}\n\nDBCSDecoder.prototype.write = function(buf) {\n    var newBuf = Buffer.alloc(buf.length*2),\n        nodeIdx = this.nodeIdx, \n        prevBytes = this.prevBytes, prevOffset = this.prevBytes.length,\n        seqStart = -this.prevBytes.length, // idx of the start of current parsed sequence.\n        uCode;\n\n    for (var i = 0, j = 0; i < buf.length; i++) {\n        var curByte = (i >= 0) ? buf[i] : prevBytes[i + prevOffset];\n\n        // Lookup in current trie node.\n        var uCode = this.decodeTables[nodeIdx][curByte];\n\n        if (uCode >= 0) { \n            // Normal character, just use it.\n        }\n        else if (uCode === UNASSIGNED) { // Unknown char.\n            // TODO: Callback with seq.\n            uCode = this.defaultCharUnicode.charCodeAt(0);\n            i = seqStart; // Skip one byte ('i' will be incremented by the for loop) and try to parse again.\n        }\n        else if (uCode === GB18030_CODE) {\n            if (i >= 3) {\n                var ptr = (buf[i-3]-0x81)*12600 + (buf[i-2]-0x30)*1260 + (buf[i-1]-0x81)*10 + (curByte-0x30);\n            } else {\n                var ptr = (prevBytes[i-3+prevOffset]-0x81)*12600 + \n                          (((i-2 >= 0) ? buf[i-2] : prevBytes[i-2+prevOffset])-0x30)*1260 + \n                          (((i-1 >= 0) ? buf[i-1] : prevBytes[i-1+prevOffset])-0x81)*10 + \n                          (curByte-0x30);\n            }\n            var idx = findIdx(this.gb18030.gbChars, ptr);\n            uCode = this.gb18030.uChars[idx] + ptr - this.gb18030.gbChars[idx];\n        }\n        else if (uCode <= NODE_START) { // Go to next trie node.\n            nodeIdx = NODE_START - uCode;\n            continue;\n        }\n        else if (uCode <= SEQ_START) { // Output a sequence of chars.\n            var seq = this.decodeTableSeq[SEQ_START - uCode];\n            for (var k = 0; k < seq.length - 1; k++) {\n                uCode = seq[k];\n                newBuf[j++] = uCode & 0xFF;\n                newBuf[j++] = uCode >> 8;\n            }\n            uCode = seq[seq.length-1];\n        }\n        else\n            throw new Error(\"iconv-lite internal error: invalid decoding table value \" + uCode + \" at \" + nodeIdx + \"/\" + curByte);\n\n        // Write the character to buffer, handling higher planes using surrogate pair.\n        if (uCode >= 0x10000) { \n            uCode -= 0x10000;\n            var uCodeLead = 0xD800 | (uCode >> 10);\n            newBuf[j++] = uCodeLead & 0xFF;\n            newBuf[j++] = uCodeLead >> 8;\n\n            uCode = 0xDC00 | (uCode & 0x3FF);\n        }\n        newBuf[j++] = uCode & 0xFF;\n        newBuf[j++] = uCode >> 8;\n\n        // Reset trie node.\n        nodeIdx = 0; seqStart = i+1;\n    }\n\n    this.nodeIdx = nodeIdx;\n    this.prevBytes = (seqStart >= 0)\n        ? Array.prototype.slice.call(buf, seqStart)\n        : prevBytes.slice(seqStart + prevOffset).concat(Array.prototype.slice.call(buf));\n\n    return newBuf.slice(0, j).toString('ucs2');\n}\n\nDBCSDecoder.prototype.end = function() {\n    var ret = '';\n\n    // Try to parse all remaining chars.\n    while (this.prevBytes.length > 0) {\n        // Skip 1 character in the buffer.\n        ret += this.defaultCharUnicode;\n        var bytesArr = this.prevBytes.slice(1);\n\n        // Parse remaining as usual.\n        this.prevBytes = [];\n        this.nodeIdx = 0;\n        if (bytesArr.length > 0)\n            ret += this.write(bytesArr);\n    }\n\n    this.prevBytes = [];\n    this.nodeIdx = 0;\n    return ret;\n}\n\n// Binary search for GB18030. Returns largest i such that table[i] <= val.\nfunction findIdx(table, val) {\n    if (table[0] > val)\n        return -1;\n\n    var l = 0, r = table.length;\n    while (l < r-1) { // always table[l] <= val < table[r]\n        var mid = l + ((r-l+1) >> 1);\n        if (table[mid] <= val)\n            l = mid;\n        else\n            r = mid;\n    }\n    return l;\n}\n\n","\"use strict\";\n\n// Manually added data to be used by sbcs codec in addition to generated one.\n\nmodule.exports = {\n    // Not supported by iconv, not sure why.\n    \"10029\": \"maccenteuro\",\n    \"maccenteuro\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ\"\n    },\n\n    \"808\": \"cp808\",\n    \"ibm808\": \"cp808\",\n    \"cp808\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№€■ \"\n    },\n\n    \"mik\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя└┴┬├─┼╣║╚╔╩╦╠═╬┐░▒▓│┤№§╗╝┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n    },\n\n    \"cp720\": {\n        \"type\": \"_sbcs\",\n        \"chars\": \"\\x80\\x81éâ\\x84à\\x86çêëèïî\\x8d\\x8e\\x8f\\x90\\u0651\\u0652ô¤ـûùءآأؤ£إئابةتثجحخدذرزسشص«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ضطظعغفµقكلمنهوىي≡\\u064b\\u064c\\u064d\\u064e\\u064f\\u0650≈°∙·√ⁿ²■\\u00a0\"\n    },\n\n    // Aliases of generated encodings.\n    \"ascii8bit\": \"ascii\",\n    \"usascii\": \"ascii\",\n    \"ansix34\": \"ascii\",\n    \"ansix341968\": \"ascii\",\n    \"ansix341986\": \"ascii\",\n    \"csascii\": \"ascii\",\n    \"cp367\": \"ascii\",\n    \"ibm367\": \"ascii\",\n    \"isoir6\": \"ascii\",\n    \"iso646us\": \"ascii\",\n    \"iso646irv\": \"ascii\",\n    \"us\": \"ascii\",\n\n    \"latin1\": \"iso88591\",\n    \"latin2\": \"iso88592\",\n    \"latin3\": \"iso88593\",\n    \"latin4\": \"iso88594\",\n    \"latin5\": \"iso88599\",\n    \"latin6\": \"iso885910\",\n    \"latin7\": \"iso885913\",\n    \"latin8\": \"iso885914\",\n    \"latin9\": \"iso885915\",\n    \"latin10\": \"iso885916\",\n\n    \"csisolatin1\": \"iso88591\",\n    \"csisolatin2\": \"iso88592\",\n    \"csisolatin3\": \"iso88593\",\n    \"csisolatin4\": \"iso88594\",\n    \"csisolatincyrillic\": \"iso88595\",\n    \"csisolatinarabic\": \"iso88596\",\n    \"csisolatingreek\" : \"iso88597\",\n    \"csisolatinhebrew\": \"iso88598\",\n    \"csisolatin5\": \"iso88599\",\n    \"csisolatin6\": \"iso885910\",\n\n    \"l1\": \"iso88591\",\n    \"l2\": \"iso88592\",\n    \"l3\": \"iso88593\",\n    \"l4\": \"iso88594\",\n    \"l5\": \"iso88599\",\n    \"l6\": \"iso885910\",\n    \"l7\": \"iso885913\",\n    \"l8\": \"iso885914\",\n    \"l9\": \"iso885915\",\n    \"l10\": \"iso885916\",\n\n    \"isoir14\": \"iso646jp\",\n    \"isoir57\": \"iso646cn\",\n    \"isoir100\": \"iso88591\",\n    \"isoir101\": \"iso88592\",\n    \"isoir109\": \"iso88593\",\n    \"isoir110\": \"iso88594\",\n    \"isoir144\": \"iso88595\",\n    \"isoir127\": \"iso88596\",\n    \"isoir126\": \"iso88597\",\n    \"isoir138\": \"iso88598\",\n    \"isoir148\": \"iso88599\",\n    \"isoir157\": \"iso885910\",\n    \"isoir166\": \"tis620\",\n    \"isoir179\": \"iso885913\",\n    \"isoir199\": \"iso885914\",\n    \"isoir203\": \"iso885915\",\n    \"isoir226\": \"iso885916\",\n\n    \"cp819\": \"iso88591\",\n    \"ibm819\": \"iso88591\",\n\n    \"cyrillic\": \"iso88595\",\n\n    \"arabic\": \"iso88596\",\n    \"arabic8\": \"iso88596\",\n    \"ecma114\": \"iso88596\",\n    \"asmo708\": \"iso88596\",\n\n    \"greek\" : \"iso88597\",\n    \"greek8\" : \"iso88597\",\n    \"ecma118\" : \"iso88597\",\n    \"elot928\" : \"iso88597\",\n\n    \"hebrew\": \"iso88598\",\n    \"hebrew8\": \"iso88598\",\n\n    \"turkish\": \"iso88599\",\n    \"turkish8\": \"iso88599\",\n\n    \"thai\": \"iso885911\",\n    \"thai8\": \"iso885911\",\n\n    \"celtic\": \"iso885914\",\n    \"celtic8\": \"iso885914\",\n    \"isoceltic\": \"iso885914\",\n\n    \"tis6200\": \"tis620\",\n    \"tis62025291\": \"tis620\",\n    \"tis62025330\": \"tis620\",\n\n    \"10000\": \"macroman\",\n    \"10006\": \"macgreek\",\n    \"10007\": \"maccyrillic\",\n    \"10079\": \"maciceland\",\n    \"10081\": \"macturkish\",\n\n    \"cspc8codepage437\": \"cp437\",\n    \"cspc775baltic\": \"cp775\",\n    \"cspc850multilingual\": \"cp850\",\n    \"cspcp852\": \"cp852\",\n    \"cspc862latinhebrew\": \"cp862\",\n    \"cpgr\": \"cp869\",\n\n    \"msee\": \"cp1250\",\n    \"mscyrl\": \"cp1251\",\n    \"msansi\": \"cp1252\",\n    \"msgreek\": \"cp1253\",\n    \"msturk\": \"cp1254\",\n    \"mshebr\": \"cp1255\",\n    \"msarab\": \"cp1256\",\n    \"winbaltrim\": \"cp1257\",\n\n    \"cp20866\": \"koi8r\",\n    \"20866\": \"koi8r\",\n    \"ibm878\": \"koi8r\",\n    \"cskoi8r\": \"koi8r\",\n\n    \"cp21866\": \"koi8u\",\n    \"21866\": \"koi8u\",\n    \"ibm1168\": \"koi8u\",\n\n    \"strk10482002\": \"rk1048\",\n\n    \"tcvn5712\": \"tcvn\",\n    \"tcvn57121\": \"tcvn\",\n\n    \"gb198880\": \"iso646cn\",\n    \"cn\": \"iso646cn\",\n\n    \"csiso14jisc6220ro\": \"iso646jp\",\n    \"jisc62201969ro\": \"iso646jp\",\n    \"jp\": \"iso646jp\",\n\n    \"cshproman8\": \"hproman8\",\n    \"r8\": \"hproman8\",\n    \"roman8\": \"hproman8\",\n    \"xroman8\": \"hproman8\",\n    \"ibm1051\": \"hproman8\",\n\n    \"mac\": \"macintosh\",\n    \"csmacintosh\": \"macintosh\",\n};\n\n","\"use strict\";\n\n// Generated data for sbcs codec. Don't edit manually. Regenerate using generation/gen-sbcs.js script.\nmodule.exports = {\n  \"437\": \"cp437\",\n  \"737\": \"cp737\",\n  \"775\": \"cp775\",\n  \"850\": \"cp850\",\n  \"852\": \"cp852\",\n  \"855\": \"cp855\",\n  \"856\": \"cp856\",\n  \"857\": \"cp857\",\n  \"858\": \"cp858\",\n  \"860\": \"cp860\",\n  \"861\": \"cp861\",\n  \"862\": \"cp862\",\n  \"863\": \"cp863\",\n  \"864\": \"cp864\",\n  \"865\": \"cp865\",\n  \"866\": \"cp866\",\n  \"869\": \"cp869\",\n  \"874\": \"windows874\",\n  \"922\": \"cp922\",\n  \"1046\": \"cp1046\",\n  \"1124\": \"cp1124\",\n  \"1125\": \"cp1125\",\n  \"1129\": \"cp1129\",\n  \"1133\": \"cp1133\",\n  \"1161\": \"cp1161\",\n  \"1162\": \"cp1162\",\n  \"1163\": \"cp1163\",\n  \"1250\": \"windows1250\",\n  \"1251\": \"windows1251\",\n  \"1252\": \"windows1252\",\n  \"1253\": \"windows1253\",\n  \"1254\": \"windows1254\",\n  \"1255\": \"windows1255\",\n  \"1256\": \"windows1256\",\n  \"1257\": \"windows1257\",\n  \"1258\": \"windows1258\",\n  \"28591\": \"iso88591\",\n  \"28592\": \"iso88592\",\n  \"28593\": \"iso88593\",\n  \"28594\": \"iso88594\",\n  \"28595\": \"iso88595\",\n  \"28596\": \"iso88596\",\n  \"28597\": \"iso88597\",\n  \"28598\": \"iso88598\",\n  \"28599\": \"iso88599\",\n  \"28600\": \"iso885910\",\n  \"28601\": \"iso885911\",\n  \"28603\": \"iso885913\",\n  \"28604\": \"iso885914\",\n  \"28605\": \"iso885915\",\n  \"28606\": \"iso885916\",\n  \"windows874\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€����…�����������‘’“”•–—�������� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"win874\": \"windows874\",\n  \"cp874\": \"windows874\",\n  \"windows1250\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰Š‹ŚŤŽŹ�‘’“”•–—�™š›śťžź ˇ˘Ł¤Ą¦§¨©Ş«¬­®Ż°±˛ł´µ¶·¸ąş»Ľ˝ľżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"win1250\": \"windows1250\",\n  \"cp1250\": \"windows1250\",\n  \"windows1251\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊЌЋЏђ‘’“”•–—�™љ›њќћџ ЎўЈ¤Ґ¦§Ё©Є«¬­®Ї°±Ііґµ¶·ё№є»јЅѕїАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"win1251\": \"windows1251\",\n  \"cp1251\": \"windows1251\",\n  \"windows1252\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ�Ž��‘’“”•–—˜™š›œ�žŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"win1252\": \"windows1252\",\n  \"cp1252\": \"windows1252\",\n  \"windows1253\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡�‰�‹�����‘’“”•–—�™�›���� ΅Ά£¤¥¦§¨©�«¬­®―°±²³΄µ¶·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"win1253\": \"windows1253\",\n  \"cp1253\": \"windows1253\",\n  \"windows1254\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰Š‹Œ����‘’“”•–—˜™š›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"win1254\": \"windows1254\",\n  \"cp1254\": \"windows1254\",\n  \"windows1255\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹�����‘’“”•–—˜™�›���� ¡¢£₪¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾¿ְֱֲֳִֵֶַָֹֺֻּֽ־ֿ׀ׁׂ׃װױײ׳״�������אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"win1255\": \"windows1255\",\n  \"cp1255\": \"windows1255\",\n  \"windows1256\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€پ‚ƒ„…†‡ˆ‰ٹ‹Œچژڈگ‘’“”•–—ک™ڑ›œ‌‍ں ،¢£¤¥¦§¨©ھ«¬­®¯°±²³´µ¶·¸¹؛»¼½¾؟ہءآأؤإئابةتثجحخدذرزسشصض×طظعغـفقكàلâمنهوçèéêëىيîïًٌٍَôُِ÷ّùْûü‎‏ے\"\n  },\n  \"win1256\": \"windows1256\",\n  \"cp1256\": \"windows1256\",\n  \"windows1257\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚�„…†‡�‰�‹�¨ˇ¸�‘’“”•–—�™�›�¯˛� �¢£¤�¦§Ø©Ŗ«¬­®Æ°±²³´µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž˙\"\n  },\n  \"win1257\": \"windows1257\",\n  \"cp1257\": \"windows1257\",\n  \"windows1258\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€�‚ƒ„…†‡ˆ‰�‹Œ����‘’“”•–—˜™�›œ��Ÿ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"win1258\": \"windows1258\",\n  \"cp1258\": \"windows1258\",\n  \"iso88591\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28591\": \"iso88591\",\n  \"iso88592\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ą˘Ł¤ĽŚ§¨ŠŞŤŹ­ŽŻ°ą˛ł´ľśˇ¸šşťź˝žżŔÁÂĂÄĹĆÇČÉĘËĚÍÎĎĐŃŇÓÔŐÖ×ŘŮÚŰÜÝŢßŕáâăäĺćçčéęëěíîďđńňóôőö÷řůúűüýţ˙\"\n  },\n  \"cp28592\": \"iso88592\",\n  \"iso88593\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ħ˘£¤�Ĥ§¨İŞĞĴ­�Ż°ħ²³´µĥ·¸ışğĵ½�żÀÁÂ�ÄĊĈÇÈÉÊËÌÍÎÏ�ÑÒÓÔĠÖ×ĜÙÚÛÜŬŜßàáâ�äċĉçèéêëìíîï�ñòóôġö÷ĝùúûüŭŝ˙\"\n  },\n  \"cp28593\": \"iso88593\",\n  \"iso88594\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĸŖ¤ĨĻ§¨ŠĒĢŦ­Ž¯°ą˛ŗ´ĩļˇ¸šēģŧŊžŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎĪĐŅŌĶÔÕÖ×ØŲÚÛÜŨŪßāáâãäåæįčéęëėíîīđņōķôõö÷øųúûüũū˙\"\n  },\n  \"cp28594\": \"iso88594\",\n  \"iso88595\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂЃЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђѓєѕіїјљњћќ§ўџ\"\n  },\n  \"cp28595\": \"iso88595\",\n  \"iso88596\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ���¤�������،­�������������؛���؟�ءآأؤإئابةتثجحخدذرزسشصضطظعغ�����ـفقكلمنهوىيًٌٍَُِّْ�������������\"\n  },\n  \"cp28596\": \"iso88596\",\n  \"iso88597\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ‘’£€₯¦§¨©ͺ«¬­�―°±²³΄΅Ά·ΈΉΊ»Ό½ΎΏΐΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡ�ΣΤΥΦΧΨΩΪΫάέήίΰαβγδεζηθικλμνξοπρςστυφχψωϊϋόύώ�\"\n  },\n  \"cp28597\": \"iso88597\",\n  \"iso88598\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �¢£¤¥¦§¨©×«¬­®¯°±²³´µ¶·¸¹÷»¼½¾��������������������������������‗אבגדהוזחטיךכלםמןנסעףפץצקרשת��‎‏�\"\n  },\n  \"cp28598\": \"iso88598\",\n  \"iso88599\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ\"\n  },\n  \"cp28599\": \"iso88599\",\n  \"iso885910\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄĒĢĪĨĶ§ĻĐŠŦŽ­ŪŊ°ąēģīĩķ·ļđšŧž―ūŋĀÁÂÃÄÅÆĮČÉĘËĖÍÎÏÐŅŌÓÔÕÖŨØŲÚÛÜÝÞßāáâãäåæįčéęëėíîïðņōóôõöũøųúûüýþĸ\"\n  },\n  \"cp28600\": \"iso885910\",\n  \"iso885911\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"cp28601\": \"iso885911\",\n  \"iso885913\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ”¢£¤„¦§Ø©Ŗ«¬­®Æ°±²³“µ¶·ø¹ŗ»¼½¾æĄĮĀĆÄÅĘĒČÉŹĖĢĶĪĻŠŃŅÓŌÕÖ×ŲŁŚŪÜŻŽßąįāćäåęēčéźėģķīļšńņóōõö÷ųłśūüżž’\"\n  },\n  \"cp28603\": \"iso885913\",\n  \"iso885914\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" Ḃḃ£ĊċḊ§Ẁ©ẂḋỲ­®ŸḞḟĠġṀṁ¶ṖẁṗẃṠỳẄẅṡÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŴÑÒÓÔÕÖṪØÙÚÛÜÝŶßàáâãäåæçèéêëìíîïŵñòóôõöṫøùúûüýŷÿ\"\n  },\n  \"cp28604\": \"iso885914\",\n  \"iso885915\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥Š§š©ª«¬­®¯°±²³Žµ¶·ž¹º»ŒœŸ¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"cp28605\": \"iso885915\",\n  \"iso885916\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ĄąŁ€„Š§š©Ș«Ź­źŻ°±ČłŽ”¶·žčș»ŒœŸżÀÁÂĂÄĆÆÇÈÉÊËÌÍÎÏĐŃÒÓÔŐÖŚŰÙÚÛÜĘȚßàáâăäćæçèéêëìíîïđńòóôőöśűùúûüęțÿ\"\n  },\n  \"cp28606\": \"iso885916\",\n  \"cp437\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm437\": \"cp437\",\n  \"csibm437\": \"cp437\",\n  \"cp737\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ΑΒΓΔΕΖΗΘΙΚΛΜΝΞΟΠΡΣΤΥΦΧΨΩαβγδεζηθικλμνξοπρσςτυφχψ░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀ωάέήϊίόύϋώΆΈΉΊΌΎΏ±≥≤ΪΫ÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm737\": \"cp737\",\n  \"csibm737\": \"cp737\",\n  \"cp775\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ĆüéāäģåćłēŖŗīŹÄÅÉæÆōöĢ¢ŚśÖÜø£Ø×¤ĀĪóŻżź”¦©®¬½¼Ł«»░▒▓│┤ĄČĘĖ╣║╗╝ĮŠ┐└┴┬├─┼ŲŪ╚╔╩╦╠═╬Žąčęėįšųūž┘┌█▄▌▐▀ÓßŌŃõÕµńĶķĻļņĒŅ’­±“¾¶§÷„°∙·¹³²■ \"\n  },\n  \"ibm775\": \"cp775\",\n  \"csibm775\": \"cp775\",\n  \"cp850\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈıÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm850\": \"cp850\",\n  \"csibm850\": \"cp850\",\n  \"cp852\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäůćçłëŐőîŹÄĆÉĹĺôöĽľŚśÖÜŤťŁ×čáíóúĄąŽžĘę¬źČş«»░▒▓│┤ÁÂĚŞ╣║╗╝Żż┐└┴┬├─┼Ăă╚╔╩╦╠═╬¤đĐĎËďŇÍÎě┘┌█▄ŢŮ▀ÓßÔŃńňŠšŔÚŕŰýÝţ´­˝˛ˇ˘§÷¸°¨˙űŘř■ \"\n  },\n  \"ibm852\": \"cp852\",\n  \"csibm852\": \"cp852\",\n  \"cp855\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ђЂѓЃёЁєЄѕЅіІїЇјЈљЉњЊћЋќЌўЎџЏюЮъЪаАбБцЦдДеЕфФгГ«»░▒▓│┤хХиИ╣║╗╝йЙ┐└┴┬├─┼кК╚╔╩╦╠═╬¤лЛмМнНоОп┘┌█▄Пя▀ЯрРсСтТуУжЖвВьЬ№­ыЫзЗшШэЭщЩчЧ§■ \"\n  },\n  \"ibm855\": \"cp855\",\n  \"csibm855\": \"cp855\",\n  \"cp856\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת�£�×����������®¬½¼�«»░▒▓│┤���©╣║╗╝¢¥┐└┴┬├─┼��╚╔╩╦╠═╬¤���������┘┌█▄¦�▀������µ�������¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm856\": \"cp856\",\n  \"csibm856\": \"cp856\",\n  \"cp857\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîıÄÅÉæÆôöòûùİÖÜø£ØŞşáíóúñÑĞğ¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ºªÊËÈ�ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµ�×ÚÛÙìÿ¯´­±�¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm857\": \"cp857\",\n  \"csibm857\": \"cp857\",\n  \"cp858\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø×ƒáíóúñÑªº¿®¬½¼¡«»░▒▓│┤ÁÂÀ©╣║╗╝¢¥┐└┴┬├─┼ãÃ╚╔╩╦╠═╬¤ðÐÊËÈ€ÍÎÏ┘┌█▄¦Ì▀ÓßÔÒõÕµþÞÚÛÙýÝ¯´­±‗¾¶§÷¸°¨·¹³²■ \"\n  },\n  \"ibm858\": \"cp858\",\n  \"csibm858\": \"cp858\",\n  \"cp860\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâãàÁçêÊèÍÔìÃÂÉÀÈôõòÚùÌÕÜ¢£Ù₧ÓáíóúñÑªº¿Ò¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm860\": \"cp860\",\n  \"csibm860\": \"cp860\",\n  \"cp861\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèÐðÞÄÅÉæÆôöþûÝýÖÜø£Ø₧ƒáíóúÁÍÓÚ¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm861\": \"cp861\",\n  \"csibm861\": \"cp861\",\n  \"cp862\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"אבגדהוזחטיךכלםמןנסעףפץצקרשת¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm862\": \"cp862\",\n  \"csibm862\": \"cp862\",\n  \"cp863\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâÂà¶çêëèïî‗À§ÉÈÊôËÏûù¤ÔÜ¢£ÙÛƒ¦´óú¨¸³¯Î⌐¬½¼¾«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm863\": \"cp863\",\n  \"csibm863\": \"cp863\",\n  \"cp864\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$٪&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~°·∙√▒─│┼┤┬├┴┐┌└┘β∞φ±½¼≈«»ﻷﻸ��ﻻﻼ� ­ﺂ£¤ﺄ��ﺎﺏﺕﺙ،ﺝﺡﺥ٠١٢٣٤٥٦٧٨٩ﻑ؛ﺱﺵﺹ؟¢ﺀﺁﺃﺅﻊﺋﺍﺑﺓﺗﺛﺟﺣﺧﺩﺫﺭﺯﺳﺷﺻﺿﻁﻅﻋﻏ¦¬÷×ﻉـﻓﻗﻛﻟﻣﻧﻫﻭﻯﻳﺽﻌﻎﻍﻡﹽّﻥﻩﻬﻰﻲﻐﻕﻵﻶﻝﻙﻱ■�\"\n  },\n  \"ibm864\": \"cp864\",\n  \"csibm864\": \"cp864\",\n  \"cp865\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜø£Ø₧ƒáíóúñÑªº¿⌐¬½¼¡«¤░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ \"\n  },\n  \"ibm865\": \"cp865\",\n  \"csibm865\": \"cp865\",\n  \"cp866\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёЄєЇїЎў°∙·√№¤■ \"\n  },\n  \"ibm866\": \"cp866\",\n  \"csibm866\": \"cp866\",\n  \"cp869\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"������Ά�·¬¦‘’Έ―ΉΊΪΌ��ΎΫ©Ώ²³ά£έήίϊΐόύΑΒΓΔΕΖΗ½ΘΙ«»░▒▓│┤ΚΛΜΝ╣║╗╝ΞΟ┐└┴┬├─┼ΠΡ╚╔╩╦╠═╬ΣΤΥΦΧΨΩαβγ┘┌█▄δε▀ζηθικλμνξοπρσςτ΄­±υφχ§ψ΅°¨ωϋΰώ■ \"\n  },\n  \"ibm869\": \"cp869\",\n  \"csibm869\": \"cp869\",\n  \"cp922\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§¨©ª«¬­®‾°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏŠÑÒÓÔÕÖ×ØÙÚÛÜÝŽßàáâãäåæçèéêëìíîïšñòóôõö÷øùúûüýžÿ\"\n  },\n  \"ibm922\": \"cp922\",\n  \"csibm922\": \"cp922\",\n  \"cp1046\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ﺈ×÷ﹱ■│─┐┌└┘ﹹﹻﹽﹿﹷﺊﻰﻳﻲﻎﻏﻐﻶﻸﻺﻼ ¤ﺋﺑﺗﺛﺟﺣ،­ﺧﺳ٠١٢٣٤٥٦٧٨٩ﺷ؛ﺻﺿﻊ؟ﻋءآأؤإئابةتثجحخدذرزسشصضطﻇعغﻌﺂﺄﺎﻓـفقكلمنهوىيًٌٍَُِّْﻗﻛﻟﻵﻷﻹﻻﻣﻧﻬﻩ�\"\n  },\n  \"ibm1046\": \"cp1046\",\n  \"csibm1046\": \"cp1046\",\n  \"cp1124\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ЁЂҐЄЅІЇЈЉЊЋЌ­ЎЏАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя№ёђґєѕіїјљњћќ§ўџ\"\n  },\n  \"ibm1124\": \"cp1124\",\n  \"csibm1124\": \"cp1124\",\n  \"cp1125\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмноп░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀рстуфхцчшщъыьэюяЁёҐґЄєІіЇї·√№¤■ \"\n  },\n  \"ibm1125\": \"cp1125\",\n  \"csibm1125\": \"cp1125\",\n  \"cp1129\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£¤¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1129\": \"cp1129\",\n  \"csibm1129\": \"cp1129\",\n  \"cp1133\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ກຂຄງຈສຊຍດຕຖທນບປຜຝພຟມຢຣລວຫອຮ���ຯະາຳິີຶືຸູຼັົຽ���ເແໂໃໄ່້໊໋໌ໍໆ�ໜໝ₭����������������໐໑໒໓໔໕໖໗໘໙��¢¬¦�\"\n  },\n  \"ibm1133\": \"cp1133\",\n  \"csibm1133\": \"cp1133\",\n  \"cp1161\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������่กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู้๊๋€฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛¢¬¦ \"\n  },\n  \"ibm1161\": \"cp1161\",\n  \"csibm1161\": \"cp1161\",\n  \"cp1162\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"€…‘’“”•–— กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  },\n  \"ibm1162\": \"cp1162\",\n  \"csibm1162\": \"cp1162\",\n  \"cp1163\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ¡¢£€¥¦§œ©ª«¬­®¯°±²³Ÿµ¶·Œ¹º»¼½¾¿ÀÁÂĂÄÅÆÇÈÉÊË̀ÍÎÏĐÑ̉ÓÔƠÖ×ØÙÚÛÜỮßàáâăäåæçèéêë́íîïđṇ̃óôơö÷øùúûüư₫ÿ\"\n  },\n  \"ibm1163\": \"cp1163\",\n  \"csibm1163\": \"cp1163\",\n  \"maccroatian\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊�©⁄¤‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ\"\n  },\n  \"maccyrillic\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°¢£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµ∂ЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"macgreek\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦­ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ�\"\n  },\n  \"maciceland\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macroman\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macromania\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂŞ∞±≤≥¥µ∂∑∏π∫ªºΩăş¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›Ţţ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macthai\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"«»…“”�•‘’� กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู﻿​–—฿เแโใไๅๆ็่้๊๋์ํ™๏๐๑๒๓๔๕๖๗๘๙®©����\"\n  },\n  \"macturkish\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙ�ˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"macukraine\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю¤\"\n  },\n  \"koi8r\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ё╓╔╕╖╗╘╙╚╛╜╝╞╟╠╡Ё╢╣╤╥╦╧╨╩╪╫╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8u\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґ╝╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪Ґ╬©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8ru\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"─│┌┐└┘├┤┬┴┼▀▄█▌▐░▒▓⌠■∙√≈≤≥ ⌡°²·÷═║╒ёє╔ії╗╘╙╚╛ґў╞╟╠╡ЁЄ╣ІЇ╦╧╨╩╪ҐЎ©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"koi8t\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"қғ‚Ғ„…†‡�‰ҳ‹ҲҷҶ�Қ‘’“”•–—�™�›�����ӯӮё¤ӣ¦§���«¬­®�°±²Ё�Ӣ¶·�№�»���©юабцдефгхийклмнопярстужвьызшэщчъЮАБЦДЕФГХИЙКЛМНОПЯРСТУЖВЬЫЗШЭЩЧЪ\"\n  },\n  \"armscii8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" �և։)(»«—.՝,-֊…՜՛՞ԱաԲբԳգԴդԵեԶզԷէԸըԹթԺժԻիԼլԽխԾծԿկՀհՁձՂղՃճՄմՅյՆնՇշՈոՉչՊպՋջՌռՍսՎվՏտՐրՑցՒւՓփՔքՕօՖֆ՚�\"\n  },\n  \"rk1048\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ЂЃ‚ѓ„…†‡€‰Љ‹ЊҚҺЏђ‘’“”•–—�™љ›њқһџ ҰұӘ¤Ө¦§Ё©Ғ«¬­®Ү°±Ііөµ¶·ё№ғ»әҢңүАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"tcvn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000ÚỤ\\u0003ỪỬỮ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010ỨỰỲỶỸÝỴ\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ÀẢÃÁẠẶẬÈẺẼÉẸỆÌỈĨÍỊÒỎÕÓỌỘỜỞỠỚỢÙỦŨ ĂÂÊÔƠƯĐăâêôơưđẶ̀̀̉̃́àảãáạẲằẳẵắẴẮẦẨẪẤỀặầẩẫấậèỂẻẽéẹềểễếệìỉỄẾỒĩíịòỔỏõóọồổỗốộờởỡớợùỖủũúụừửữứựỳỷỹýỵỐ\"\n  },\n  \"georgianacademy\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზთიკლმნოპჟრსტუფქღყშჩცძწჭხჯჰჱჲჳჴჵჶçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"georgianps\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿აბგდევზჱთიკლმნჲოპჟრსტჳუფქღყშჩცძწჭხჴჯჰჵæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\"\n  },\n  \"pt154\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ҖҒӮғ„…ҶҮҲүҠӢҢҚҺҸҗ‘’“”•–—ҳҷҡӣңқһҹ ЎўЈӨҘҰ§Ё©Ә«¬ӯ®Ҝ°ұІіҙө¶·ё№ә»јҪҫҝАБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯабвгдежзийклмнопрстуфхцчшщъыьэюя\"\n  },\n  \"viscii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001Ẳ\\u0003\\u0004ẴẪ\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013Ỷ\\u0015\\u0016\\u0017\\u0018Ỹ\\u001a\\u001b\\u001c\\u001dỴ\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~ẠẮẰẶẤẦẨẬẼẸẾỀỂỄỆỐỒỔỖỘỢỚỜỞỊỎỌỈỦŨỤỲÕắằặấầẩậẽẹếềểễệốồổỗỠƠộờởịỰỨỪỬơớƯÀÁÂÃẢĂẳẵÈÉÊẺÌÍĨỳĐứÒÓÔạỷừửÙÚỹỵÝỡưàáâãảăữẫèéêẻìíĩỉđựòóôõỏọụùúũủýợỮ\"\n  },\n  \"iso646cn\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"iso646jp\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"\\u0000\\u0001\\u0002\\u0003\\u0004\\u0005\\u0006\\u0007\\b\\t\\n\\u000b\\f\\r\\u000e\\u000f\\u0010\\u0011\\u0012\\u0013\\u0014\\u0015\\u0016\\u0017\\u0018\\u0019\\u001a\\u001b\\u001c\\u001d\\u001e\\u001f !\\\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[¥]^_`abcdefghijklmnopqrstuvwxyz{|}‾��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"hproman8\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \" ÀÂÈÊËÎÏ´ˋˆ¨˜ÙÛ₤¯Ýý°ÇçÑñ¡¿¤£¥§ƒ¢âêôûáéóúàèòùäëöüÅîØÆåíøæÄìÖÜÉïßÔÁÃãÐðÍÌÓÒÕõŠšÚŸÿÞþ·µ¶¾—¼½ªº«■»±�\"\n  },\n  \"macintosh\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄¤‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔ�ÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ\"\n  },\n  \"ascii\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"��������������������������������������������������������������������������������������������������������������������������������\"\n  },\n  \"tis620\": {\n    \"type\": \"_sbcs\",\n    \"chars\": \"���������������������������������กขฃคฅฆงจฉชซฌญฎฏฐฑฒณดตถทธนบปผฝพฟภมยรฤลฦวศษสหฬอฮฯะัาำิีึืฺุู����฿เแโใไๅๆ็่้๊๋์ํ๎๏๐๑๒๓๔๕๖๗๘๙๚๛����\"\n  }\n}","\"use strict\";\n\n// Description of supported double byte encodings and aliases.\n// Tables are not require()-d until they are needed to speed up library load.\n// require()-s are direct to support Browserify.\n\nmodule.exports = {\n    \n    // == Japanese/ShiftJIS ====================================================\n    // All japanese encodings are based on JIS X set of standards:\n    // JIS X 0201 - Single-byte encoding of ASCII + ¥ + Kana chars at 0xA1-0xDF.\n    // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. \n    //              Has several variations in 1978, 1983, 1990 and 1997.\n    // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.\n    // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.\n    //              2 planes, first is superset of 0208, second - revised 0212.\n    //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)\n\n    // Byte encodings are:\n    //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte\n    //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.\n    //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.\n    //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.\n    //               0x00-0x7F       - lower part of 0201\n    //               0x8E, 0xA1-0xDF - upper part of 0201\n    //               (0xA1-0xFE)x2   - 0208 plane (94x94).\n    //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).\n    //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.\n    //               Used as-is in ISO2022 family.\n    //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, \n    //                0201-1976 Roman, 0208-1978, 0208-1983.\n    //  * ISO2022-JP-1: Adds esc seq for 0212-1990.\n    //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.\n    //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.\n    //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.\n    //\n    // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.\n    //\n    // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html\n\n    'shiftjis': {\n        type: '_dbcs',\n        table: function() { return require('./tables/shiftjis.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n        encodeSkipVals: [{from: 0xED40, to: 0xF940}],\n    },\n    'csshiftjis': 'shiftjis',\n    'mskanji': 'shiftjis',\n    'sjis': 'shiftjis',\n    'windows31j': 'shiftjis',\n    'ms31j': 'shiftjis',\n    'xsjis': 'shiftjis',\n    'windows932': 'shiftjis',\n    'ms932': 'shiftjis',\n    '932': 'shiftjis',\n    'cp932': 'shiftjis',\n\n    'eucjp': {\n        type: '_dbcs',\n        table: function() { return require('./tables/eucjp.json') },\n        encodeAdd: {'\\u00a5': 0x5C, '\\u203E': 0x7E},\n    },\n\n    // TODO: KDDI extension to Shift_JIS\n    // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.\n    // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.\n\n\n    // == Chinese/GBK ==========================================================\n    // http://en.wikipedia.org/wiki/GBK\n    // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder\n\n    // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936\n    'gb2312': 'cp936',\n    'gb231280': 'cp936',\n    'gb23121980': 'cp936',\n    'csgb2312': 'cp936',\n    'csiso58gb231280': 'cp936',\n    'euccn': 'cp936',\n\n    // Microsoft's CP936 is a subset and approximation of GBK.\n    'windows936': 'cp936',\n    'ms936': 'cp936',\n    '936': 'cp936',\n    'cp936': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json') },\n    },\n\n    // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.\n    'gbk': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n    },\n    'xgbk': 'gbk',\n    'isoir58': 'gbk',\n\n    // GB18030 is an algorithmic extension of GBK.\n    // Main source: https://www.w3.org/TR/encoding/#gbk-encoder\n    // http://icu-project.org/docs/papers/gb18030.html\n    // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml\n    // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0\n    'gb18030': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp936.json').concat(require('./tables/gbk-added.json')) },\n        gb18030: function() { return require('./tables/gb18030-ranges.json') },\n        encodeSkipVals: [0x80],\n        encodeAdd: {'€': 0xA2E3},\n    },\n\n    'chinese': 'gb18030',\n\n\n    // == Korean ===============================================================\n    // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.\n    'windows949': 'cp949',\n    'ms949': 'cp949',\n    '949': 'cp949',\n    'cp949': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp949.json') },\n    },\n\n    'cseuckr': 'cp949',\n    'csksc56011987': 'cp949',\n    'euckr': 'cp949',\n    'isoir149': 'cp949',\n    'korean': 'cp949',\n    'ksc56011987': 'cp949',\n    'ksc56011989': 'cp949',\n    'ksc5601': 'cp949',\n\n\n    // == Big5/Taiwan/Hong Kong ================================================\n    // There are lots of tables for Big5 and cp950. Please see the following links for history:\n    // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html\n    // Variations, in roughly number of defined chars:\n    //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT\n    //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/\n    //  * Big5-2003 (Taiwan standard) almost superset of cp950.\n    //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.\n    //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. \n    //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.\n    //    Plus, it has 4 combining sequences.\n    //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299\n    //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.\n    //    Implementations are not consistent within browsers; sometimes labeled as just big5.\n    //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.\n    //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31\n    //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.\n    //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt\n    //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt\n    // \n    // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder\n    // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.\n\n    'windows950': 'cp950',\n    'ms950': 'cp950',\n    '950': 'cp950',\n    'cp950': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json') },\n    },\n\n    // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.\n    'big5': 'big5hkscs',\n    'big5hkscs': {\n        type: '_dbcs',\n        table: function() { return require('./tables/cp950.json').concat(require('./tables/big5-added.json')) },\n        encodeSkipVals: [0xa2cc],\n    },\n\n    'cnbig5': 'big5hkscs',\n    'csbig5': 'big5hkscs',\n    'xxbig5': 'big5hkscs',\n};\n","\"use strict\";\n\n// Update this array if you add/rename/remove files in this directory.\n// We support Browserify by skipping automatic module discovery and requiring modules directly.\nvar modules = [\n    require(\"./internal\"),\n    require(\"./utf32\"),\n    require(\"./utf16\"),\n    require(\"./utf7\"),\n    require(\"./sbcs-codec\"),\n    require(\"./sbcs-data\"),\n    require(\"./sbcs-data-generated\"),\n    require(\"./dbcs-codec\"),\n    require(\"./dbcs-data\"),\n];\n\n// Put all encoding/alias/codec definitions to single object and export it.\nfor (var i = 0; i < modules.length; i++) {\n    var module = modules[i];\n    for (var enc in module)\n        if (Object.prototype.hasOwnProperty.call(module, enc))\n            exports[enc] = module[enc];\n}\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\n// NOTE: Due to 'stream' module being pretty large (~100Kb, significant in browser environments), \n// we opt to dependency-inject it instead of creating a hard dependency.\nmodule.exports = function(stream_module) {\n    var Transform = stream_module.Transform;\n\n    // == Encoder stream =======================================================\n\n    function IconvLiteEncoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.decodeStrings = false; // We accept only strings, so we don't need to decode them.\n        Transform.call(this, options);\n    }\n\n    IconvLiteEncoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteEncoderStream }\n    });\n\n    IconvLiteEncoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (typeof chunk != 'string')\n            return done(new Error(\"Iconv encoding stream needs strings as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteEncoderStream.prototype.collect = function(cb) {\n        var chunks = [];\n        this.on('error', cb);\n        this.on('data', function(chunk) { chunks.push(chunk); });\n        this.on('end', function() {\n            cb(null, Buffer.concat(chunks));\n        });\n        return this;\n    }\n\n\n    // == Decoder stream =======================================================\n\n    function IconvLiteDecoderStream(conv, options) {\n        this.conv = conv;\n        options = options || {};\n        options.encoding = this.encoding = 'utf8'; // We output strings.\n        Transform.call(this, options);\n    }\n\n    IconvLiteDecoderStream.prototype = Object.create(Transform.prototype, {\n        constructor: { value: IconvLiteDecoderStream }\n    });\n\n    IconvLiteDecoderStream.prototype._transform = function(chunk, encoding, done) {\n        if (!Buffer.isBuffer(chunk) && !(chunk instanceof Uint8Array))\n            return done(new Error(\"Iconv decoding stream needs buffers as its input.\"));\n        try {\n            var res = this.conv.write(chunk);\n            if (res && res.length) this.push(res, this.encoding);\n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype._flush = function(done) {\n        try {\n            var res = this.conv.end();\n            if (res && res.length) this.push(res, this.encoding);                \n            done();\n        }\n        catch (e) {\n            done(e);\n        }\n    }\n\n    IconvLiteDecoderStream.prototype.collect = function(cb) {\n        var res = '';\n        this.on('error', cb);\n        this.on('data', function(chunk) { res += chunk; });\n        this.on('end', function() {\n            cb(null, res);\n        });\n        return this;\n    }\n\n    return {\n        IconvLiteEncoderStream: IconvLiteEncoderStream,\n        IconvLiteDecoderStream: IconvLiteDecoderStream,\n    };\n};\n","\"use strict\";\n\nvar Buffer = require(\"safer-buffer\").Buffer;\n\nvar bomHandling = require(\"./bom-handling\"),\n    iconv = module.exports;\n\n// All codecs and aliases are kept here, keyed by encoding name/alias.\n// They are lazy loaded in `iconv.getCodec` from `encodings/index.js`.\niconv.encodings = null;\n\n// Characters emitted in case of error.\niconv.defaultCharUnicode = '�';\niconv.defaultCharSingleByte = '?';\n\n// Public API.\niconv.encode = function encode(str, encoding, options) {\n    str = \"\" + (str || \"\"); // Ensure string.\n\n    var encoder = iconv.getEncoder(encoding, options);\n\n    var res = encoder.write(str);\n    var trail = encoder.end();\n    \n    return (trail && trail.length > 0) ? Buffer.concat([res, trail]) : res;\n}\n\niconv.decode = function decode(buf, encoding, options) {\n    if (typeof buf === 'string') {\n        if (!iconv.skipDecodeWarning) {\n            console.error('Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding');\n            iconv.skipDecodeWarning = true;\n        }\n\n        buf = Buffer.from(\"\" + (buf || \"\"), \"binary\"); // Ensure buffer.\n    }\n\n    var decoder = iconv.getDecoder(encoding, options);\n\n    var res = decoder.write(buf);\n    var trail = decoder.end();\n\n    return trail ? (res + trail) : res;\n}\n\niconv.encodingExists = function encodingExists(enc) {\n    try {\n        iconv.getCodec(enc);\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n// Legacy aliases to convert functions\niconv.toEncoding = iconv.encode;\niconv.fromEncoding = iconv.decode;\n\n// Search for a codec in iconv.encodings. Cache codec data in iconv._codecDataCache.\niconv._codecDataCache = {};\niconv.getCodec = function getCodec(encoding) {\n    if (!iconv.encodings)\n        iconv.encodings = require(\"../encodings\"); // Lazy load all encoding definitions.\n    \n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    var enc = iconv._canonicalizeEncoding(encoding);\n\n    // Traverse iconv.encodings to find actual codec.\n    var codecOptions = {};\n    while (true) {\n        var codec = iconv._codecDataCache[enc];\n        if (codec)\n            return codec;\n\n        var codecDef = iconv.encodings[enc];\n\n        switch (typeof codecDef) {\n            case \"string\": // Direct alias to other encoding.\n                enc = codecDef;\n                break;\n\n            case \"object\": // Alias with options. Can be layered.\n                for (var key in codecDef)\n                    codecOptions[key] = codecDef[key];\n\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n                \n                enc = codecDef.type;\n                break;\n\n            case \"function\": // Codec itself.\n                if (!codecOptions.encodingName)\n                    codecOptions.encodingName = enc;\n\n                // The codec function must load all tables and return object with .encoder and .decoder methods.\n                // It'll be called only once (for each different options object).\n                codec = new codecDef(codecOptions, iconv);\n\n                iconv._codecDataCache[codecOptions.encodingName] = codec; // Save it to be reused later.\n                return codec;\n\n            default:\n                throw new Error(\"Encoding not recognized: '\" + encoding + \"' (searched as: '\"+enc+\"')\");\n        }\n    }\n}\n\niconv._canonicalizeEncoding = function(encoding) {\n    // Canonicalize encoding name: strip all non-alphanumeric chars and appended year.\n    return (''+encoding).toLowerCase().replace(/:\\d{4}$|[^0-9a-z]/g, \"\");\n}\n\niconv.getEncoder = function getEncoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        encoder = new codec.encoder(options, codec);\n\n    if (codec.bomAware && options && options.addBOM)\n        encoder = new bomHandling.PrependBOM(encoder, options);\n\n    return encoder;\n}\n\niconv.getDecoder = function getDecoder(encoding, options) {\n    var codec = iconv.getCodec(encoding),\n        decoder = new codec.decoder(options, codec);\n\n    if (codec.bomAware && !(options && options.stripBOM === false))\n        decoder = new bomHandling.StripBOM(decoder, options);\n\n    return decoder;\n}\n\n// Streaming API\n// NOTE: Streaming API naturally depends on 'stream' module from Node.js. Unfortunately in browser environments this module can add\n// up to 100Kb to the output bundle. To avoid unnecessary code bloat, we don't enable Streaming API in browser by default.\n// If you would like to enable it explicitly, please add the following code to your app:\n// > iconv.enableStreamingAPI(require('stream'));\niconv.enableStreamingAPI = function enableStreamingAPI(stream_module) {\n    if (iconv.supportsStreams)\n        return;\n\n    // Dependency-inject stream module to create IconvLite stream classes.\n    var streams = require(\"./streams\")(stream_module);\n\n    // Not public API yet, but expose the stream classes.\n    iconv.IconvLiteEncoderStream = streams.IconvLiteEncoderStream;\n    iconv.IconvLiteDecoderStream = streams.IconvLiteDecoderStream;\n\n    // Streaming API.\n    iconv.encodeStream = function encodeStream(encoding, options) {\n        return new iconv.IconvLiteEncoderStream(iconv.getEncoder(encoding, options), options);\n    }\n\n    iconv.decodeStream = function decodeStream(encoding, options) {\n        return new iconv.IconvLiteDecoderStream(iconv.getDecoder(encoding, options), options);\n    }\n\n    iconv.supportsStreams = true;\n}\n\n// Enable Streaming API automatically if 'stream' module is available and non-empty (the majority of environments).\nvar stream_module;\ntry {\n    stream_module = require(\"stream\");\n} catch (e) {}\n\nif (stream_module && stream_module.Transform) {\n    iconv.enableStreamingAPI(stream_module);\n\n} else {\n    // In rare cases where 'stream' module is not available by default, throw a helpful exception.\n    iconv.encodeStream = iconv.decodeStream = function() {\n        throw new Error(\"iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.\");\n    };\n}\n\nif (\"Ā\" != \"\\u0100\") {\n    console.error(\"iconv-lite warning: js files use non-utf8 encoding. See https://github.com/ashtuchkin/iconv-lite/wiki/Javascript-source-file-encodings for more info.\");\n}\n","// @flow\n// converted to ES6 from https://www.npmjs.com/package/rfc2047\nimport * as iconvLite from 'iconv-lite'\n\n// Initialize array used as lookup table (int (octet) => string)\nconst qpTokenByOctet = new Array(256)\nfor (let i = 0; i < 256; i += 1) {\n\tqpTokenByOctet[i] = `=${i < 16 ? '0' : ''}${i.toString(16).toUpperCase()}`\n}\n\n\"!#$%&'*+-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\\\\^`abcdefghijklmnopqrstuvwxyz{|}~\"\n\t.split(/(?:)/)\n\t.forEach(safeAsciiChar => qpTokenByOctet[safeAsciiChar.charCodeAt(0)] = safeAsciiChar)\n\nqpTokenByOctet[32] = '_'\n\n// Build a regexp for determining whether (part of) a token has to be encoded:\n\nconst headerSafeAsciiChars = ' !\"#$%&\\'()*+-,-./0123456789:;<=>@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\]^_`abcdefghijklmnopqrstuvwxyz{|}~'\nlet headerUnsafeAsciiChars = ''\n\nfor (let i = 0; i < 128; i += 1) {\n\tconst ch = String.fromCharCode(i)\n\tif (headerSafeAsciiChars.indexOf(ch) === -1) {\n\t\t// O(n^2) but only happens at startup\n\t\theaderUnsafeAsciiChars += ch\n\t}\n}\n\nconst isUtf8RegExp = /^utf-?8$/i\nconst isLatin1RegExp = /^(?:iso-8859-1|latin1)$/i\nconst encodedWordRegExp = /=\\?([^?]+)\\?([QB])\\?([^?]*)\\?=/gi\nconst unsafeTokenRegExp = new RegExp(`[\\u0080-\\uffff${quoteCharacterClass(headerUnsafeAsciiChars)}]`)\n// Very conservative limit to prevent creating an encoded word of more than 72 ascii chars\nconst maxNumCharsPerEncodedWord = 8\n\nfunction stringify(obj: any): string {\n\tif (typeof obj === 'string') {\n\t\treturn obj\n\t} else if (obj == null) {\n\t\treturn ''\n\t} else {\n\t\treturn String(obj)\n\t}\n}\n\nconst replacementCharacterBuffer = Buffer.from('�')\n\nfunction decodeBuffer(encodedText: string, encoding: string): Buffer {\n\tif (encoding === 'q') {\n\t\tencodedText = encodedText.replace(/_/g, ' ')\n\t\tlet numValidlyEncodedBytes = 0\n\t\tlet i\n\t\tfor (i = 0; i < encodedText.length; i += 1) {\n\t\t\tif (\n\t\t\t\tencodedText[i] === '=' &&\n\t\t\t\t/^[0-9a-f]{2}$/i.test(encodedText.slice(i + 1, i + 3))\n\t\t\t) {\n\t\t\t\tnumValidlyEncodedBytes += 1\n\t\t\t}\n\t\t}\n\t\tconst buffer = Buffer.alloc(encodedText.length - numValidlyEncodedBytes * 2)\n\t\tlet j = 0\n\t\tfor (i = 0; i < encodedText.length; i += 1) {\n\t\t\tif (encodedText[i] === '=') {\n\t\t\t\tconst hexChars = encodedText.slice(i + 1, i + 3)\n\t\t\t\tif (/^[0-9a-f]{2}$/i.test(hexChars)) {\n\t\t\t\t\tbuffer[j] = parseInt(encodedText.substr(i + 1, 2), 16)\n\t\t\t\t\ti += 2\n\t\t\t\t} else {\n\t\t\t\t\tbuffer[j] = encodedText.charCodeAt(i)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbuffer[j] = encodedText.charCodeAt(i)\n\t\t\t}\n\t\t\tj += 1\n\t\t}\n\t\treturn buffer\n\t} else {\n\t\treturn Buffer.from(encodedText, 'base64')\n\t}\n}\n\n// Returns either a string (if successful) or undefined\nfunction decodeEncodedWord(encodedText: string, encoding: string, charset: string): ?string {\n\tif (encoding === 'q' && isLatin1RegExp.test(charset)) {\n\t\treturn unescape(\n\t\t\tencodedText\n\t\t\t\t.replace(/_/g, ' ')\n\t\t\t\t.replace(/%/g, '%25')\n\t\t\t\t.replace(/=(?=[0-9a-f]{2})/gi, '%')\n\t\t)\n\t} else {\n\t\tlet buffer\n\t\ttry {\n\t\t\tbuffer = decodeBuffer(encodedText, encoding)\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t\tif (/^ks_c_5601/i.test(charset)) {\n\t\t\tcharset = 'CP949'\n\t\t}\n\t\tlet decoded = null\n\t\tif (isUtf8RegExp.test(charset)) {\n\t\t\tconst decoded = buffer.toString('utf-8')\n\t\t\tif (!/\\ufffd/.test(decoded) || buffer.includes(replacementCharacterBuffer)) {\n\t\t\t\treturn decoded\n\t\t\t}\n\t\t} else if (/^(?:us-)?ascii$/i.test(charset)) {\n\t\t\treturn buffer.toString('ascii')\n\t\t} else if (iconvLite.encodingExists(charset)) {\n\t\t\tdecoded = iconvLite.decode(buffer, charset)\n\t\t\tif (!/\\ufffd/.test(decoded) || buffer.includes(replacementCharacterBuffer)) {\n\t\t\t\treturn decoded\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport function decode(text: string): string {\n\ttext = stringify(text).replace(/\\?=\\s+=\\?/g, '?==?'); // Strip whitespace between neighbouring encoded words\n\n\tlet numEncodedWordsToIgnore = 0\n\n\treturn text.replace(encodedWordRegExp, function (\n\t\tencodedWord,\n\t\tcharset,\n\t\tencoding,\n\t\tencodedText,\n\t\tindex\n\t) {\n\t\tif (numEncodedWordsToIgnore > 0) {\n\t\t\tnumEncodedWordsToIgnore -= 1\n\t\t\treturn ''\n\t\t}\n\t\tencoding = encoding.toLowerCase()\n\t\tlet decodedTextOrBuffer = decodeEncodedWord(encodedText, encoding, charset)\n\t\twhile (decodedTextOrBuffer == null) {\n\t\t\t// The encoded word couldn't be decoded because it contained a partial character in a multibyte charset.\n\t\t\t// Keep trying to look ahead and consume an additional encoded word right after this one, and if its\n\t\t\t// encoding and charsets match, try to decode the concatenation.\n\n\t\t\t// The ongoing replace call is unaffected by this trick, so we don't need to reset .lastIndex afterwards:\n\t\t\tencodedWordRegExp.lastIndex = index + encodedWord.length\n\t\t\tconst matchNextEncodedWord = encodedWordRegExp.exec(text)\n\t\t\tif (\n\t\t\t\tmatchNextEncodedWord &&\n\t\t\t\tmatchNextEncodedWord.index === index + encodedWord.length &&\n\t\t\t\tmatchNextEncodedWord[1] === charset &&\n\t\t\t\tmatchNextEncodedWord[2].toLowerCase() === encoding\n\t\t\t) {\n\t\t\t\tnumEncodedWordsToIgnore += 1\n\t\t\t\tencodedWord += matchNextEncodedWord[0]\n\t\t\t\tencodedText += matchNextEncodedWord[3]\n\t\t\t\tdecodedTextOrBuffer = decodeEncodedWord(encodedText, encoding, charset)\n\t\t\t} else {\n\t\t\t\treturn encodedWord\n\t\t\t}\n\t\t}\n\t\treturn decodedTextOrBuffer\n\t})\n}\n\n// Fast encoder for quoted-printable data in the \"encoded-text\" part of encoded words.\n// This scenario differs from regular quoted-printable (as used in e.g. email bodies)\n// in that the space character is represented by underscore, and fewer ASCII are\n// allowed (see rfc 2047, section 2).\n\nfunction bufferToQuotedPrintableString(buffer: Buffer): string {\n\tlet result = ''\n\tfor (let i = 0; i < buffer.length; i += 1) {\n\t\tresult += qpTokenByOctet[buffer[i]]\n\t}\n\treturn result\n}\n\nfunction quoteCharacterClass(chars: string): string {\n\treturn chars.replace(/[\\\\|^*+?[\\]().-]/g, '\\\\$&')\n}\n\nexport function encode(text: string): string {\n\ttext = stringify(text).replace(/\\s/g, ' '); // Normalize whitespace\n\tconst tokens = text.match(/([^\\s]*\\s*)/g); // Split at space, but keep trailing space as part of each token\n\tlet previousTokenWasEncodedWord = false; // Consecutive encoded words must have a space between them, so this state must be kept\n\tlet previousTokenWasWhitespaceFollowingEncodedWord = false\n\tlet result = ''\n\tif (tokens) {\n\t\tfor (let i = 0; i < tokens.length; i += 1) {\n\t\t\tlet token = tokens[i]\n\t\t\tif (unsafeTokenRegExp.test(token)) {\n\t\t\t\tconst matchQuotesAtBeginning = token.match(/^\"+/)\n\t\t\t\tif (matchQuotesAtBeginning) {\n\t\t\t\t\tpreviousTokenWasEncodedWord = false\n\t\t\t\t\tresult += matchQuotesAtBeginning[0]\n\t\t\t\t\ttokens[i] = token = token.substr(matchQuotesAtBeginning[0].length)\n\t\t\t\t\ttokens.splice(i, 0, matchQuotesAtBeginning[0])\n\t\t\t\t\ti += 1\n\t\t\t\t}\n\n\t\t\t\tconst matchWhitespaceOrQuotesAtEnd = token.match(/\\\\?[\\s\"]+$/)\n\t\t\t\tif (matchWhitespaceOrQuotesAtEnd) {\n\t\t\t\t\ttokens.splice(i + 1, 0, matchWhitespaceOrQuotesAtEnd[0])\n\t\t\t\t\ttoken = token.substr(\n\t\t\t\t\t\t0,\n\t\t\t\t\t\ttoken.length - matchWhitespaceOrQuotesAtEnd[0].length\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t// Word contains at least one header unsafe char, an encoded word must be created.\n\t\t\t\tif (token.length > maxNumCharsPerEncodedWord) {\n\t\t\t\t\ttokens.splice(i + 1, 0, token.substr(maxNumCharsPerEncodedWord))\n\t\t\t\t\ttoken = token.substr(0, maxNumCharsPerEncodedWord)\n\t\t\t\t}\n\n\t\t\t\tif (previousTokenWasWhitespaceFollowingEncodedWord) {\n\t\t\t\t\ttoken = ` ${token}`\n\t\t\t\t}\n\n\t\t\t\tconst charset = 'utf-8'\n\t\t\t\t// Around 25% faster than encodeURIComponent(token.replace(/ /g, \"_\")).replace(/%/g, \"=\"):\n\t\t\t\tconst encodedWordBody = bufferToQuotedPrintableString(Buffer.from(token, 'utf-8'))\n\t\t\t\tif (previousTokenWasEncodedWord) {\n\t\t\t\t\tresult += ' '\n\t\t\t\t}\n\t\t\t\tresult += `=?${charset}?Q?${encodedWordBody}?=`\n\t\t\t\tpreviousTokenWasWhitespaceFollowingEncodedWord = false\n\t\t\t\tpreviousTokenWasEncodedWord = true\n\t\t\t} else {\n\t\t\t\t// Word only contains header safe chars, no need to encode:\n\t\t\t\tresult += token\n\t\t\t\tpreviousTokenWasWhitespaceFollowingEncodedWord =\n\t\t\t\t\t/^\\s*$/.test(token) && previousTokenWasEncodedWord\n\t\t\t\tpreviousTokenWasEncodedWord = false\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\n","// @flow\n\nimport {Address} from \"./address\";\nimport type {AddressType, MessageFormatEnum} from \"../enums\";\nimport {MessageFormat} from \"../enums\";\nimport {byteBufferAsUint8Array, makeByteBuffer, stringToUtf16LeArray} from \"../utils/utils\";\n\nexport class OneOffEntryId extends Address {\n    _messageFormat: MessageFormatEnum\n    _canLookupEmailAddress: boolean\n\n    constructor(\n        email: string,\n        displayName: string,\n        addressType: AddressType = \"SMTP\",\n        messageFormat: MessageFormatEnum = MessageFormat.TextAndHtml,\n        canLookupEmailAddress: boolean = false\n    ) {\n        super(email, displayName, addressType)\n        this._messageFormat = messageFormat\n        this._canLookupEmailAddress = canLookupEmailAddress\n    }\n\n    toByteArray(): Uint8Array {\n        const buf = makeByteBuffer()\n        // Flags (4 bytes): This value is set to 0x00000000. Bits in this field indicate under what circumstances\n        // a short-term EntryID is valid. However, in any EntryID stored in a property value, these 4 bytes are\n        // zero, indicating a long-term EntryID.\n        buf.writeUint32(0)\n        // ProviderUID (16 bytes): The identifier of the provider that created the EntryID. This value is used to\n        // route EntryIDs to the correct provider and MUST be set to %x81.2B.1F.A4.BE.A3.10.19.9D.6E.00.DD.01.0F.54.02.\n        buf.append(Uint8Array.from([0x81, 0x2B, 0x1F, 0xA4, 0xBE, 0xA3, 0x10, 0x19, 0x9D, 0x6E, 0x00, 0xDD, 0x01, 0x0F, 0x54, 0x02]))\n        // Version (2 bytes): This value is set to 0x0000.\n        buf.writeUint16(0)\n        let bits = 0x0000\n        // Pad(1 bit): (mask 0x8000) Reserved.This value is set to '0'.\n        // bits |= 0x00 << 0\n        // MAE (2 bits): (mask 0x0C00) The encoding used for Macintosh-specific data attachments, as specified in\n        // [MS-OXCMAIL] section 2.1.3.4.3. The values for this field are specified in the following table.\n        // Name        | Word value | Field value | Description\n        // BinHex        0x0000       b'00'         BinHex encoded.\n        // UUENCODE      0x0020       b'01'         UUENCODED.Not valid if the message is in Multipurpose Internet Mail\n        //                                          Extensions(MIME) format, in which case the flag will be ignored and\n        //                                          BinHex used instead.\n        // AppleSingle   0x0040      b'10'          Apple Single encoded.Allowed only when the message format is MIME.\n        // AppleDouble   0x0060      b'11'          Apple Double encoded.Allowed only when the message format is MIME.\n        // bits |= 0x00 << 1\n        // bits |= 0x00 << 2\n        // Format (4 bits): (enumeration, mask 0x1E00) The message format desired for this recipient (1), as specified\n        // in the following table.\n        // Name        | Word value | Field value | Description\n        // TextOnly      0x0006       b'0011'       Send a plain text message body.\n        // HtmlOnly      0x000E       b'0111'       Send an HTML message body.\n        // TextAndHtml   0x0016       b'1011'       Send a multipart / alternative body with both plain text and HTML.\n\n        switch (this._messageFormat) {\n            case MessageFormat.TextOnly:\n                //bits |= 0x00 << 3\n                //bits |= 0x00 << 4\n                bits |= 0x01 << 5\n                bits |= 0x01 << 6\n                break;\n\n            case MessageFormat.HtmlOnly:\n                //bits |= 0x00 << 3\n                bits |= 0x01 << 4\n                bits |= 0x01 << 5\n                bits |= 0x01 << 6\n                break;\n\n            case MessageFormat.TextAndHtml:\n                bits |= 0x01 << 3\n                //bits |= 0x00 << 4\n                bits |= 0x01 << 5\n                bits |= 0x01 << 6\n                break;\n        }\n\n        // M (1 bit): (mask 0x0100) A flag that indicates how messages are to be sent. If b'0', indicates messages are\n        // to be sent to the recipient (1) in Transport Neutral Encapsulation Format (TNEF) format; if b'1', messages\n        // are sent to the recipient (1) in pure MIME format.\n        bits |= 0x01 << 7\n        // U (1 bit): (mask 0x0080) A flag that indicates the format of the string fields that follow. If b'1', the\n        // string fields following are in Unicode (UTF-16 form) with 2-byte terminating null characters; if b'0', the\n        // string fields following are multibyte character set (MBCS) characters terminated by a single 0 byte.\n        bits |= 0x01 << 8\n        // R (2 bits): (mask 0x0060) Reserved. This value is set to b'00'.\n        //bits |= 0x00 << 9\n        //bits |= 0x00 << 10\n        // L (1 bit): (mask 0x0010) A flag that indicates whether the server can look up an address in the address\n        // book. If b'1', server cannot look up this user's email address in the address book. If b'0', server can\n        // look up this user's email address in the address book.\n        if (this._canLookupEmailAddress) {\n            bits |= 0x01 << 11\n        }\n        // Pad (4 bits): (mask 0x000F) Reserved. This value is set to b'0000'.\n        // bits |= 0x01 << 12\n        // bits |= 0x01 << 13\n        // bits |= 0x01 << 14\n        // bits |= 0x01 << 15\n\n        // if (BitConverter.IsLittleEndian) {\n        //     bits = bits.Reverse().ToArray();\n        //     binaryWriter.Write(bits);\n        // } else {\n        //     binaryWriter.Write(bits);\n        // }\n        buf.writeUint8((bits >>> 8) & 0xFF)\n        buf.writeUint8(bits & 0xFF)\n\n        //Strings.WriteNullTerminatedUnicodeString(binaryWriter, DisplayName);\n        buf.append(stringToUtf16LeArray(this.displayName))\n        buf.writeUint16(0)\n        buf.append(stringToUtf16LeArray(this.addressType))\n        buf.writeUint16(0)\n        buf.append(stringToUtf16LeArray(this.email))\n        buf.writeUint16(0)\n\n        return byteBufferAsUint8Array(buf)\n    }\n}","// @flow\n\nimport type {AddressType, MessageFormatEnum} from \"../enums\";\nimport {MessageFormat} from \"../enums\";\nimport {Address} from \"./address\";\nimport {PropertyTags} from \"../property_tags\";\nimport type {TopLevelProperties} from \"../streams/top_level_properties\";\nimport {OneOffEntryId} from \"./one_off_entry_id\";\n\nexport class Sender extends Address {\n    _messageFormat: MessageFormatEnum\n    _canLookupEmailAddress: boolean\n    _senderIsCreator: boolean\n\n    constructor(\n        email: string,\n        displayName: string,\n        addressType: AddressType = \"SMTP\",\n        messageFormat: MessageFormatEnum = MessageFormat.TextAndHtml,\n        canLookupEmailAddress: boolean = false,\n        senderIsCreator: boolean = true\n    ) {\n        super(email, displayName, addressType)\n        this._messageFormat = messageFormat\n        this._canLookupEmailAddress = canLookupEmailAddress\n        this._senderIsCreator = senderIsCreator\n    }\n\n    writeProperties(stream: TopLevelProperties) {\n        if (this._senderIsCreator) {\n            stream.addProperty(PropertyTags.PR_CreatorEmailAddr_W, this.email)\n            stream.addProperty(PropertyTags.PR_CreatorSimpleDispName_W, this.displayName)\n            stream.addProperty(PropertyTags.PR_CreatorAddrType_W, this.addressType)\n        }\n\n        const senderEntryId = new OneOffEntryId(\n            this.email,\n            this.displayName,\n            this.addressType,\n            this._messageFormat,\n            this._canLookupEmailAddress\n        )\n        stream.addProperty(PropertyTags.PR_SENDER_ENTRYID, senderEntryId.toByteArray())\n\n        stream.addProperty(PropertyTags.PR_SENDER_EMAIL_ADDRESS_W, this.email)\n        stream.addProperty(PropertyTags.PR_SENDER_NAME_W, this.displayName)\n        stream.addProperty(PropertyTags.PR_SENDER_ADDRTYPE_W, this.addressType)\n    }\n}","// @flow\n\nimport {Properties} from \"../properties\"\nimport type ByteBuffer from \"bytebuffer\"\n\nexport class AttachmentProperties extends Properties {\n\n    /**\n     * Writes all properties either as a CFStream or as a collection in\n     * a PropertyTags.PropertiesStreamName stream to the given storage, this depends\n     * on the PropertyType\n     * See theProperties class it's Properties.WriteProperties method for the logic\n     * that is used to determine this\n     * @param storage cfb storage to write into\n     * @param prefix\n     * @param messageSize\n     * @returns {number} total size of written Properties\n     */\n    writeProperties(storage: any, prefix: ByteBuffer=> void, messageSize?: number): number {\n        const attachmentPropertyPrefix = (buf) => {\n            prefix(buf)\n            // Reserved (8 bytes): This field MUST be set to\n            // zero when writing a .msg file and MUST be ignored when reading a .msg file.\n            buf.writeUint64(0)\n        }\n        return super.writeProperties(storage, attachmentPropertyPrefix, messageSize)\n    }\n}","// @flow\n\nconst MimeTypes = Object.freeze({\n    \"323\": \"text/h323\",\n    \"3dmf\": \"x-world/x-3dmf\",\n    \"3dm\": \"x-world/x-3dmf\",\n    \"3g2\": \"video/3gpp2\",\n    \"3gp\": \"video/3gpp\",\n    \"7z\": \"application/x-7z-compressed\",\n    \"aab\": \"application/x-authorware-bin\",\n    \"aac\": \"audio/aac\",\n    \"aam\": \"application/x-authorware-map\",\n    \"aas\": \"application/x-authorware-seg\",\n    \"abc\": \"text/vnd.abc\",\n    \"acgi\": \"text/html\",\n    \"acx\": \"application/internet-property-stream\",\n    \"afl\": \"video/animaflex\",\n    \"ai\": \"application/postscript\",\n    \"aif\": \"audio/aiff\",\n    \"aifc\": \"audio/aiff\",\n    \"aiff\": \"audio/aiff\",\n    \"aim\": \"application/x-aim\",\n    \"aip\": \"text/x-audiosoft-intra\",\n    \"ani\": \"application/x-navi-animation\",\n    \"aos\": \"application/x-nokia-9000-communicator-add-on-software\",\n    \"appcache\": \"text/cache-manifest\",\n    \"application\": \"application/x-ms-application\",\n    \"aps\": \"application/mime\",\n    \"art\": \"image/x-jg\",\n    \"asf\": \"video/x-ms-asf\",\n    \"asm\": \"text/x-asm\",\n    \"asp\": \"text/asp\",\n    \"asr\": \"video/x-ms-asf\",\n    \"asx\": \"application/x-mplayer2\",\n    \"atom\": \"application/atom+xml\",\n    \"au\": \"audio/x-au\",\n    \"avi\": \"video/avi\",\n    \"avs\": \"video/avs-video\",\n    \"axs\": \"application/olescript\",\n    \"bas\": \"text/plain\",\n    \"bcpio\": \"application/x-bcpio\",\n    \"bin\": \"application/octet-stream\",\n    \"bm\": \"image/bmp\",\n    \"bmp\": \"image/bmp\",\n    \"boo\": \"application/book\",\n    \"book\": \"application/book\",\n    \"boz\": \"application/x-bzip2\",\n    \"bsh\": \"application/x-bsh\",\n    \"bz2\": \"application/x-bzip2\",\n    \"bz\": \"application/x-bzip\",\n    \"cat\": \"application/vnd.ms-pki.seccat\",\n    \"ccad\": \"application/clariscad\",\n    \"cco\": \"application/x-cocoa\",\n    \"cc\": \"text/plain\",\n    \"cdf\": \"application/cdf\",\n    \"cer\": \"application/pkix-cert\",\n    \"cha\": \"application/x-chat\",\n    \"chat\": \"application/x-chat\",\n    \"class\": \"application/x-java-applet\",\n    \"clp\": \"application/x-msclip\",\n    \"cmx\": \"image/x-cmx\",\n    \"cod\": \"image/cis-cod\",\n    \"coffee\": \"text/x-coffeescript\",\n    \"conf\": \"text/plain\",\n    \"cpio\": \"application/x-cpio\",\n    \"cpp\": \"text/plain\",\n    \"cpt\": \"application/x-cpt\",\n    \"crd\": \"application/x-mscardfile\",\n    \"crl\": \"application/pkix-crl\",\n    \"crt\": \"application/pkix-cert\",\n    \"csh\": \"application/x-csh\",\n    \"css\": \"text/css\",\n    \"c\": \"text/plain\",\n    \"c++\": \"text/plain\",\n    \"cxx\": \"text/plain\",\n    \"dart\": \"application/dart\",\n    \"dcr\": \"application/x-director\",\n    \"deb\": \"application/x-deb\",\n    \"deepv\": \"application/x-deepv\",\n    \"def\": \"text/plain\",\n    \"deploy\": \"application/octet-stream\",\n    \"der\": \"application/x-x509-ca-cert\",\n    \"dib\": \"image/bmp\",\n    \"dif\": \"video/x-dv\",\n    \"dir\": \"application/x-director\",\n    \"disco\": \"text/xml\",\n    \"dll\": \"application/x-msdownload\",\n    \"dl\": \"video/dl\",\n    \"doc\": \"application/msword\",\n    \"docm\": \"application/vnd.ms-word.document.macroEnabled.12\",\n    \"docx\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n    \"dot\": \"application/msword\",\n    \"dotm\": \"application/vnd.ms-word.template.macroEnabled.12\",\n    \"dotx\": \"application/vnd.openxmlformats-officedocument.wordprocessingml.template\",\n    \"dp\": \"application/commonground\",\n    \"drw\": \"application/drafting\",\n    \"dtd\": \"application/xml-dtd\",\n    \"dvi\": \"application/x-dvi\",\n    \"dv\": \"video/x-dv\",\n    \"dwf\": \"drawing/x-dwf (old)\",\n    \"dwg\": \"application/acad\",\n    \"dxf\": \"application/dxf\",\n    \"dxr\": \"application/x-director\",\n    \"elc\": \"application/x-elc\",\n    \"el\": \"text/x-script.elisp\",\n    \"eml\": \"message/rfc822\",\n    \"eot\": \"application/vnd.bw-fontobject\",\n    \"eps\": \"application/postscript\",\n    \"es\": \"application/x-esrehber\",\n    \"etx\": \"text/x-setext\",\n    \"evy\": \"application/envoy\",\n    \"exe\": \"application/octet-stream\",\n    \"f77\": \"text/plain\",\n    \"f90\": \"text/plain\",\n    \"fdf\": \"application/vnd.fdf\",\n    \"fif\": \"image/fif\",\n    \"flac\": \"audio/x-flac\",\n    \"fli\": \"video/fli\",\n    \"flo\": \"image/florian\",\n    \"flr\": \"x-world/x-vrml\",\n    \"flx\": \"text/vnd.fmi.flexstor\",\n    \"fmf\": \"video/x-atomic3d-feature\",\n    \"for\": \"text/plain\",\n    \"fpx\": \"image/vnd.fpx\",\n    \"frl\": \"application/freeloader\",\n    \"f\": \"text/plain\",\n    \"funk\": \"audio/make\",\n    \"g3\": \"image/g3fax\",\n    \"gif\": \"image/gif\",\n    \"gl\": \"video/gl\",\n    \"gsd\": \"audio/x-gsm\",\n    \"gsm\": \"audio/x-gsm\",\n    \"gsp\": \"application/x-gsp\",\n    \"gss\": \"application/x-gss\",\n    \"gtar\": \"application/x-gtar\",\n    \"g\": \"text/plain\",\n    \"gz\": \"application/x-gzip\",\n    \"gzip\": \"application/x-gzip\",\n    \"hdf\": \"application/x-hdf\",\n    \"help\": \"application/x-helpfile\",\n    \"hgl\": \"application/vnd.hp-HPGL\",\n    \"hh\": \"text/plain\",\n    \"hlb\": \"text/x-script\",\n    \"hlp\": \"application/x-helpfile\",\n    \"hpg\": \"application/vnd.hp-HPGL\",\n    \"hpgl\": \"application/vnd.hp-HPGL\",\n    \"hqx\": \"application/binhex\",\n    \"hta\": \"application/hta\",\n    \"htc\": \"text/x-component\",\n    \"h\": \"text/plain\",\n    \"htmls\": \"text/html\",\n    \"html\": \"text/html\",\n    \"htm\": \"text/html\",\n    \"htt\": \"text/webviewhtml\",\n    \"htx\": \"text/html\",\n    \"ice\": \"x-conference/x-cooltalk\",\n    \"ico\": \"image/x-icon\",\n    \"ics\": \"text/calendar\",\n    \"idc\": \"text/plain\",\n    \"ief\": \"image/ief\",\n    \"iefs\": \"image/ief\",\n    \"iges\": \"application/iges\",\n    \"igs\": \"application/iges\",\n    \"iii\": \"application/x-iphone\",\n    \"ima\": \"application/x-ima\",\n    \"imap\": \"application/x-httpd-imap\",\n    \"inf\": \"application/inf\",\n    \"ins\": \"application/x-internett-signup\",\n    \"ip\": \"application/x-ip2\",\n    \"isp\": \"application/x-internet-signup\",\n    \"isu\": \"video/x-isvideo\",\n    \"it\": \"audio/it\",\n    \"iv\": \"application/x-inventor\",\n    \"ivf\": \"video/x-ivf\",\n    \"ivr\": \"i-world/i-vrml\",\n    \"ivy\": \"application/x-livescreen\",\n    \"jam\": \"audio/x-jam\",\n    \"jar\": \"application/java-archive\",\n    \"java\": \"text/plain\",\n    \"jav\": \"text/plain\",\n    \"jcm\": \"application/x-java-commerce\",\n    \"jfif\": \"image/jpeg\",\n    \"jfif-tbnl\": \"image/jpeg\",\n    \"jpeg\": \"image/jpeg\",\n    \"jpe\": \"image/jpeg\",\n    \"jpg\": \"image/jpeg\",\n    \"jps\": \"image/x-jps\",\n    \"js\": \"application/javascript\",\n    \"json\": \"application/json\",\n    \"jut\": \"image/jutvision\",\n    \"kar\": \"audio/midi\",\n    \"ksh\": \"text/x-script.ksh\",\n    \"la\": \"audio/nspaudio\",\n    \"lam\": \"audio/x-liveaudio\",\n    \"latex\": \"application/x-latex\",\n    \"list\": \"text/plain\",\n    \"lma\": \"audio/nspaudio\",\n    \"log\": \"text/plain\",\n    \"lsp\": \"application/x-lisp\",\n    \"lst\": \"text/plain\",\n    \"lsx\": \"text/x-la-asf\",\n    \"ltx\": \"application/x-latex\",\n    \"m13\": \"application/x-msmediaview\",\n    \"m14\": \"application/x-msmediaview\",\n    \"m1v\": \"video/mpeg\",\n    \"m2a\": \"audio/mpeg\",\n    \"m2v\": \"video/mpeg\",\n    \"m3u\": \"audio/x-mpequrl\",\n    \"m4a\": \"audio/mp4\",\n    \"m4v\": \"video/mp4\",\n    \"man\": \"application/x-troff-man\",\n    \"manifest\": \"application/x-ms-manifest\",\n    \"map\": \"application/x-navimap\",\n    \"mar\": \"text/plain\",\n    \"mbd\": \"application/mbedlet\",\n    \"mc$\": \"application/x-magic-cap-package-1.0\",\n    \"mcd\": \"application/mcad\",\n    \"mcf\": \"image/vasa\",\n    \"mcp\": \"application/netmc\",\n    \"mdb\": \"application/x-msaccess\",\n    \"mesh\": \"model/mesh\",\n    \"me\": \"application/x-troff-me\",\n    \"mid\": \"audio/midi\",\n    \"midi\": \"audio/midi\",\n    \"mif\": \"application/x-mif\",\n    \"mjf\": \"audio/x-vnd.AudioExplosion.MjuiceMediaFile\",\n    \"mjpg\": \"video/x-motion-jpeg\",\n    \"mm\": \"application/base64\",\n    \"mme\": \"application/base64\",\n    \"mny\": \"application/x-msmoney\",\n    \"mod\": \"audio/mod\",\n    \"mov\": \"video/quicktime\",\n    \"movie\": \"video/x-sgi-movie\",\n    \"mp2\": \"video/mpeg\",\n    \"mp3\": \"audio/mpeg\",\n    \"mp4\": \"video/mp4\",\n    \"mp4a\": \"audio/mp4\",\n    \"mp4v\": \"video/mp4\",\n    \"mpa\": \"audio/mpeg\",\n    \"mpc\": \"application/x-project\",\n    \"mpeg\": \"video/mpeg\",\n    \"mpe\": \"video/mpeg\",\n    \"mpga\": \"audio/mpeg\",\n    \"mpg\": \"video/mpeg\",\n    \"mpp\": \"application/vnd.ms-project\",\n    \"mpt\": \"application/x-project\",\n    \"mpv2\": \"video/mpeg\",\n    \"mpv\": \"application/x-project\",\n    \"mpx\": \"application/x-project\",\n    \"mrc\": \"application/marc\",\n    \"ms\": \"application/x-troff-ms\",\n    \"msh\": \"model/mesh\",\n    \"m\": \"text/plain\",\n    \"mvb\": \"application/x-msmediaview\",\n    \"mv\": \"video/x-sgi-movie\",\n    \"my\": \"audio/make\",\n    \"mzz\": \"application/x-vnd.AudioExplosion.mzz\",\n    \"nap\": \"image/naplps\",\n    \"naplps\": \"image/naplps\",\n    \"nc\": \"application/x-netcdf\",\n    \"ncm\": \"application/vnd.nokia.configuration-message\",\n    \"niff\": \"image/x-niff\",\n    \"nif\": \"image/x-niff\",\n    \"nix\": \"application/x-mix-transfer\",\n    \"nsc\": \"application/x-conference\",\n    \"nvd\": \"application/x-navidoc\",\n    \"nws\": \"message/rfc822\",\n    \"oda\": \"application/oda\",\n    \"ods\": \"application/oleobject\",\n    \"oga\": \"audio/ogg\",\n    \"ogg\": \"audio/ogg\",\n    \"ogv\": \"video/ogg\",\n    \"ogx\": \"application/ogg\",\n    \"omc\": \"application/x-omc\",\n    \"omcd\": \"application/x-omcdatamaker\",\n    \"omcr\": \"application/x-omcregerator\",\n    \"opus\": \"audio/ogg\",\n    \"oxps\": \"application/oxps\",\n    \"p10\": \"application/pkcs10\",\n    \"p12\": \"application/pkcs-12\",\n    \"p7a\": \"application/x-pkcs7-signature\",\n    \"p7b\": \"application/x-pkcs7-certificates\",\n    \"p7c\": \"application/pkcs7-mime\",\n    \"p7m\": \"application/pkcs7-mime\",\n    \"p7r\": \"application/x-pkcs7-certreqresp\",\n    \"p7s\": \"application/pkcs7-signature\",\n    \"part\": \"application/pro_eng\",\n    \"pas\": \"text/pascal\",\n    \"pbm\": \"image/x-portable-bitmap\",\n    \"pcl\": \"application/x-pcl\",\n    \"pct\": \"image/x-pict\",\n    \"pcx\": \"image/x-pcx\",\n    \"pdb\": \"chemical/x-pdb\",\n    \"pdf\": \"application/pdf\",\n    \"pfunk\": \"audio/make\",\n    \"pfx\": \"application/x-pkcs12\",\n    \"pgm\": \"image/x-portable-graymap\",\n    \"pic\": \"image/pict\",\n    \"pict\": \"image/pict\",\n    \"pkg\": \"application/x-newton-compatible-pkg\",\n    \"pko\": \"application/vnd.ms-pki.pko\",\n    \"pl\": \"text/plain\",\n    \"plx\": \"application/x-PiXCLscript\",\n    \"pm4\": \"application/x-pagemaker\",\n    \"pm5\": \"application/x-pagemaker\",\n    \"pma\": \"application/x-perfmon\",\n    \"pmc\": \"application/x-perfmon\",\n    \"pm\": \"image/x-xpixmap\",\n    \"pml\": \"application/x-perfmon\",\n    \"pmr\": \"application/x-perfmon\",\n    \"pmw\": \"application/x-perfmon\",\n    \"png\": \"image/png\",\n    \"pnm\": \"application/x-portable-anymap\",\n    \"pot\": \"application/vnd.ms-powerpoint\",\n    \"potm\": \"application/vnd.ms-powerpoint.template.macroEnabled.12\",\n    \"potx\": \"application/vnd.openxmlformats-officedocument.presentationml.template\",\n    \"pov\": \"model/x-pov\",\n    \"ppa\": \"application/vnd.ms-powerpoint\",\n    \"ppam\": \"application/vnd.ms-powerpoint.addin.macroEnabled.12\",\n    \"ppm\": \"image/x-portable-pixmap\",\n    \"pps\": \"application/vnd.ms-powerpoint\",\n    \"ppsm\": \"application/vnd.ms-powerpoint.slideshow.macroEnabled.12\",\n    \"ppsx\": \"application/vnd.openxmlformats-officedocument.presentationml.slideshow\",\n    \"ppt\": \"application/vnd.ms-powerpoint\",\n    \"pptm\": \"application/vnd.ms-powerpoint.presentation.macroEnabled.12\",\n    \"pptx\": \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n    \"ppz\": \"application/mspowerpoint\",\n    \"pre\": \"application/x-freelance\",\n    \"prf\": \"application/pics-rules\",\n    \"prt\": \"application/pro_eng\",\n    \"ps\": \"application/postscript\",\n    \"p\": \"text/x-pascal\",\n    \"pub\": \"application/x-mspublisher\",\n    \"pvu\": \"paleovu/x-pv\",\n    \"pwz\": \"application/vnd.ms-powerpoint\",\n    \"pyc\": \"applicaiton/x-bytecode.python\",\n    \"py\": \"text/x-script.phyton\",\n    \"qcp\": \"audio/vnd.qcelp\",\n    \"qd3d\": \"x-world/x-3dmf\",\n    \"qd3\": \"x-world/x-3dmf\",\n    \"qif\": \"image/x-quicktime\",\n    \"qtc\": \"video/x-qtc\",\n    \"qtif\": \"image/x-quicktime\",\n    \"qti\": \"image/x-quicktime\",\n    \"qt\": \"video/quicktime\",\n    \"ra\": \"audio/x-pn-realaudio\",\n    \"ram\": \"audio/x-pn-realaudio\",\n    \"ras\": \"application/x-cmu-raster\",\n    \"rast\": \"image/cmu-raster\",\n    \"rexx\": \"text/x-script.rexx\",\n    \"rf\": \"image/vnd.rn-realflash\",\n    \"rgb\": \"image/x-rgb\",\n    \"rm\": \"application/vnd.rn-realmedia\",\n    \"rmi\": \"audio/mid\",\n    \"rmm\": \"audio/x-pn-realaudio\",\n    \"rmp\": \"audio/x-pn-realaudio\",\n    \"rng\": \"application/ringing-tones\",\n    \"rnx\": \"application/vnd.rn-realplayer\",\n    \"roff\": \"application/x-troff\",\n    \"rp\": \"image/vnd.rn-realpix\",\n    \"rpm\": \"audio/x-pn-realaudio-plugin\",\n    \"rss\": \"application/rss+xml\",\n    \"rtf\": \"text/richtext\",\n    \"rt\": \"text/richtext\",\n    \"rtx\": \"text/richtext\",\n    \"rv\": \"video/vnd.rn-realvideo\",\n    \"s3m\": \"audio/s3m\",\n    \"sbk\": \"application/x-tbook\",\n    \"scd\": \"application/x-msschedule\",\n    \"scm\": \"application/x-lotusscreencam\",\n    \"sct\": \"text/scriptlet\",\n    \"sdml\": \"text/plain\",\n    \"sdp\": \"application/sdp\",\n    \"sdr\": \"application/sounder\",\n    \"sea\": \"application/sea\",\n    \"set\": \"application/set\",\n    \"setpay\": \"application/set-payment-initiation\",\n    \"setreg\": \"application/set-registration-initiation\",\n    \"sgml\": \"text/sgml\",\n    \"sgm\": \"text/sgml\",\n    \"shar\": \"application/x-bsh\",\n    \"sh\": \"text/x-script.sh\",\n    \"shtml\": \"text/html\",\n    \"sid\": \"audio/x-psid\",\n    \"silo\": \"model/mesh\",\n    \"sit\": \"application/x-sit\",\n    \"skd\": \"application/x-koan\",\n    \"skm\": \"application/x-koan\",\n    \"skp\": \"application/x-koan\",\n    \"skt\": \"application/x-koan\",\n    \"sl\": \"application/x-seelogo\",\n    \"smi\": \"application/smil\",\n    \"smil\": \"application/smil\",\n    \"snd\": \"audio/basic\",\n    \"sol\": \"application/solids\",\n    \"spc\": \"application/x-pkcs7-certificates\",\n    \"spl\": \"application/futuresplash\",\n    \"spr\": \"application/x-sprite\",\n    \"sprite\": \"application/x-sprite\",\n    \"spx\": \"audio/ogg\",\n    \"src\": \"application/x-wais-source\",\n    \"ssi\": \"text/x-server-parsed-html\",\n    \"ssm\": \"application/streamingmedia\",\n    \"sst\": \"application/vnd.ms-pki.certstore\",\n    \"step\": \"application/step\",\n    \"s\": \"text/x-asm\",\n    \"stl\": \"application/sla\",\n    \"stm\": \"text/html\",\n    \"stp\": \"application/step\",\n    \"sv4cpio\": \"application/x-sv4cpio\",\n    \"sv4crc\": \"application/x-sv4crc\",\n    \"svf\": \"image/x-dwg\",\n    \"svg\": \"image/svg+xml\",\n    \"svr\": \"application/x-world\",\n    \"swf\": \"application/x-shockwave-flash\",\n    \"talk\": \"text/x-speech\",\n    \"t\": \"application/x-troff\",\n    \"tar\": \"application/x-tar\",\n    \"tbk\": \"application/toolbook\",\n    \"tcl\": \"text/x-script.tcl\",\n    \"tcsh\": \"text/x-script.tcsh\",\n    \"tex\": \"application/x-tex\",\n    \"texi\": \"application/x-texinfo\",\n    \"texinfo\": \"application/x-texinfo\",\n    \"text\": \"text/plain\",\n    \"tgz\": \"application/x-compressed\",\n    \"tiff\": \"image/tiff\",\n    \"tif\": \"image/tiff\",\n    \"tr\": \"application/x-troff\",\n    \"trm\": \"application/x-msterminal\",\n    \"ts\": \"text/x-typescript\",\n    \"tsi\": \"audio/tsp-audio\",\n    \"tsp\": \"audio/tsplayer\",\n    \"tsv\": \"text/tab-separated-values\",\n    \"ttf\": \"application/x-font-ttf\",\n    \"turbot\": \"image/florian\",\n    \"txt\": \"text/plain\",\n    \"uil\": \"text/x-uil\",\n    \"uls\": \"text/iuls\",\n    \"unis\": \"text/uri-list\",\n    \"uni\": \"text/uri-list\",\n    \"unv\": \"application/i-deas\",\n    \"uris\": \"text/uri-list\",\n    \"uri\": \"text/uri-list\",\n    \"ustar\": \"multipart/x-ustar\",\n    \"uue\": \"text/x-uuencode\",\n    \"uu\": \"text/x-uuencode\",\n    \"vcd\": \"application/x-cdlink\",\n    \"vcf\": \"text/vcard\",\n    \"vcard\": \"text/vcard\",\n    \"vcs\": \"text/x-vCalendar\",\n    \"vda\": \"application/vda\",\n    \"vdo\": \"video/vdo\",\n    \"vew\": \"application/groupwise\",\n    \"vivo\": \"video/vivo\",\n    \"viv\": \"video/vivo\",\n    \"vmd\": \"application/vocaltec-media-desc\",\n    \"vmf\": \"application/vocaltec-media-file\",\n    \"voc\": \"audio/voc\",\n    \"vos\": \"video/vosaic\",\n    \"vox\": \"audio/voxware\",\n    \"vqe\": \"audio/x-twinvq-plugin\",\n    \"vqf\": \"audio/x-twinvq\",\n    \"vql\": \"audio/x-twinvq-plugin\",\n    \"vrml\": \"application/x-vrml\",\n    \"vrt\": \"x-world/x-vrt\",\n    \"vsd\": \"application/x-visio\",\n    \"vst\": \"application/x-visio\",\n    \"vsw\": \"application/x-visio\",\n    \"w60\": \"application/wordperfect6.0\",\n    \"w61\": \"application/wordperfect6.1\",\n    \"w6w\": \"application/msword\",\n    \"wav\": \"audio/wav\",\n    \"wb1\": \"application/x-qpro\",\n    \"wbmp\": \"image/vnd.wap.wbmp\",\n    \"wcm\": \"application/vnd.ms-works\",\n    \"wdb\": \"application/vnd.ms-works\",\n    \"web\": \"application/vnd.xara\",\n    \"webm\": \"video/webm\",\n    \"wiz\": \"application/msword\",\n    \"wk1\": \"application/x-123\",\n    \"wks\": \"application/vnd.ms-works\",\n    \"wmf\": \"windows/metafile\",\n    \"wmlc\": \"application/vnd.wap.wmlc\",\n    \"wmlsc\": \"application/vnd.wap.wmlscriptc\",\n    \"wmls\": \"text/vnd.wap.wmlscript\",\n    \"wml\": \"text/vnd.wap.wml\",\n    \"wmp\": \"video/x-ms-wmp\",\n    \"wmv\": \"video/x-ms-wmv\",\n    \"wmx\": \"video/x-ms-wmx\",\n    \"woff\": \"application/x-woff\",\n    \"word\": \"application/msword\",\n    \"wp5\": \"application/wordperfect\",\n    \"wp6\": \"application/wordperfect\",\n    \"wp\": \"application/wordperfect\",\n    \"wpd\": \"application/wordperfect\",\n    \"wps\": \"application/vnd.ms-works\",\n    \"wq1\": \"application/x-lotus\",\n    \"wri\": \"application/mswrite\",\n    \"wrl\": \"application/x-world\",\n    \"wrz\": \"model/vrml\",\n    \"wsc\": \"text/scriplet\",\n    \"wsdl\": \"text/xml\",\n    \"wsrc\": \"application/x-wais-source\",\n    \"wtk\": \"application/x-wintalk\",\n    \"wvx\": \"video/x-ms-wvx\",\n    \"x3d\": \"model/x3d+xml\",\n    \"x3db\": \"model/x3d+fastinfoset\",\n    \"x3dv\": \"model/x3d-vrml\",\n    \"xaf\": \"x-world/x-vrml\",\n    \"xaml\": \"application/xaml+xml\",\n    \"xap\": \"application/x-silverlight-app\",\n    \"xbap\": \"application/x-ms-xbap\",\n    \"xbm\": \"image/x-xbitmap\",\n    \"xdr\": \"video/x-amt-demorun\",\n    \"xgz\": \"xgl/drawing\",\n    \"xht\": \"application/xhtml+xml\",\n    \"xhtml\": \"application/xhtml+xml\",\n    \"xif\": \"image/vnd.xiff\",\n    \"xla\": \"application/vnd.ms-excel\",\n    \"xlam\": \"application/vnd.ms-excel.addin.macroEnabled.12\",\n    \"xl\": \"application/excel\",\n    \"xlb\": \"application/excel\",\n    \"xlc\": \"application/excel\",\n    \"xld\": \"application/excel\",\n    \"xlk\": \"application/excel\",\n    \"xll\": \"application/excel\",\n    \"xlm\": \"application/excel\",\n    \"xls\": \"application/vnd.ms-excel\",\n    \"xlsb\": \"application/vnd.ms-excel.sheet.binary.macroEnabled.12\",\n    \"xlsm\": \"application/vnd.ms-excel.sheet.macroEnabled.12\",\n    \"xlsx\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    \"xlt\": \"application/vnd.ms-excel\",\n    \"xltm\": \"application/vnd.ms-excel.template.macroEnabled.12\",\n    \"xltx\": \"application/vnd.openxmlformats-officedocument.spreadsheetml.template\",\n    \"xlv\": \"application/excel\",\n    \"xlw\": \"application/excel\",\n    \"xm\": \"audio/xm\",\n    \"xml\": \"text/xml\",\n    \"xmz\": \"xgl/movie\",\n    \"xof\": \"x-world/x-vrml\",\n    \"xpi\": \"application/x-xpinstall\",\n    \"xpix\": \"application/x-vnd.ls-xpix\",\n    \"xpm\": \"image/xpm\",\n    \"xps\": \"application/vnd.ms-xpsdocument\",\n    \"x-png\": \"image/png\",\n    \"xsd\": \"text/xml\",\n    \"xsl\": \"text/xml\",\n    \"xslt\": \"text/xml\",\n    \"xsr\": \"video/x-amt-showrun\",\n    \"xwd\": \"image/x-xwd\",\n    \"xyz\": \"chemical/x-pdb\",\n    \"z\": \"application/x-compressed\",\n    \"zip\": \"application/zip\",\n    \"zsh\": \"text/x-script.zsh\",\n})\n\nexport function getMimeType(fileName: string) : string {\n    if(fileName == null) throw new Error(\"fileName is null!\")\n    const aos = MimeTypes[\"exe\"]\n    const dot = fileName.lastIndexOf(\".\")\n    if(dot !== -1 && fileName.length > dot + 1) {\n        const ext = fileName.substring(dot + 1)\n        return MimeTypes[ext] || aos\n    }\n\n    return aos\n}","// @flow\n\nimport type {AttachmentTypeEnum} from \"./enums\"\nimport {AttachmentFlags, AttachmentType, MapiObjectType, PropertyFlag, StoreSupportMaskConst} from \"./enums\"\nimport {AttachmentProperties} from \"./streams/attachment_properties\"\nimport {PropertyTags} from \"./property_tags\"\nimport {generateInstanceKey, generateRecordKey} from \"./utils/mapi\"\nimport {fileNameToDosFileName, getPathExtension, isNullOrEmpty, isNullOrWhiteSpace} from \"./utils/utils\"\nimport {getMimeType} from \"./utils/mime\"\n\nexport class Attachment {\n\t_file: any\n\tdata: Uint8Array\n\tfileName: string\n\ttype: AttachmentTypeEnum\n\trenderingPosition: number\n\tisInline: boolean\n\tcontentId: string\n\tisContactPhoto: boolean\n\tcreationTime: number // was: DateTime\n\tlastModificationTime: number // TODO\n\n\tconstructor(\n\t\tdata: Uint8Array, // was: Stream\n\t\tfileName: string,\n\t\tcreationTime: number,\n\t\tlastModificationTime: number,\n\t\ttype: AttachmentTypeEnum = AttachmentType.ATTACH_BY_VALUE,\n\t\trenderingPosition: number = -1,\n\t\tcontentId: string = \"\",\n\t\tisContactPhoto: boolean = false\n\t) {\n\t\tthis.data = data\n\t\tthis.fileName = fileName\n\t\tthis.creationTime = creationTime\n\t\tthis.lastModificationTime = lastModificationTime\n\t\tthis.type = type\n\t\tthis.renderingPosition = renderingPosition\n\t\tthis.contentId = contentId\n\t\tthis.isContactPhoto = isContactPhoto\n\t}\n\n\twriteProperties(storage: any, index: number): number {\n\t\tconst attachmentProperties = new AttachmentProperties()\n\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_NUM, index, PropertyFlag.PROPATTR_READABLE)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_INSTANCE_KEY, generateInstanceKey(), PropertyFlag.PROPATTR_READABLE)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_RECORD_KEY, generateRecordKey(), PropertyFlag.PROPATTR_READABLE)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_RENDERING_POSITION, this.renderingPosition, PropertyFlag.PROPATTR_READABLE)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_OBJECT_TYPE, MapiObjectType.MAPI_ATTACH)\n\n\t\tif (!isNullOrEmpty(this.fileName)) {\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_DISPLAY_NAME_W, this.fileName)\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_FILENAME_W, fileNameToDosFileName(this.fileName))\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_LONG_FILENAME_W, this.fileName)\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_EXTENSION_W, getPathExtension(this.fileName))\n\n\t\t\tif (!isNullOrEmpty(this.contentId)) {\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_CONTENT_ID_W, this.contentId)\n\t\t\t}\n\n\t\t\t// TODO: get mimetype from user.\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_MIME_TAG_W, getMimeType(this.fileName))\n\t\t}\n\n\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_METHOD, this.type)\n\n\t\tswitch (this.type) {\n\t\t\tcase AttachmentType.ATTACH_BY_VALUE:\n\t\t\tcase AttachmentType.ATTACH_EMBEDDED_MSG:\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_DATA_BIN, this.data)\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_SIZE, this.data.length)\n\t\t\t\tbreak\n\n\t\t\tcase AttachmentType.ATTACH_BY_REF_ONLY:\n\t\t\t\t// TODO:\n\t\t\t\tthrow new Error(\"attach_by_ref_only not implemented!\")\n\t\t\t\t// $FlowFixMe[unreachable-code]\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_DATA_BIN, new Uint8Array(0))\n\t\t\t\t// $FlowFixMe[unreachable-code]\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_SIZE, this._file.length)\n\t\t\t\t// $FlowFixMe[unreachable-code]\n\t\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_LONG_PATHNAME_W, this._file.FullName)\n\t\t\t\t// $FlowFixMe[unreachable-code]\n\t\t\t\tbreak\n\n\t\t\t//case AttachmentType.ATTACH_EMBEDDED_MSG:\n\t\t\t//    var msgStorage = storage.AddStorage(PropertyTags.PR_ATTACH_DATA_BIN.Name)\n\t\t\t//    var cf = new CompoundFile(Stream)\n\t\t\t//    Storage.Copy(cf.RootStorage, msgStorage)\n\t\t\t//    propertiesStream.AddProperty(PropertyTags.PR_ATTACH_SIZE, Stream.Length)\n\t\t\t//    propertiesStream.AddProperty(PropertyTags.PR_ATTACH_ENCODING, 0)\n\t\t\t//    break\n\n\t\t\tcase AttachmentType.ATTACH_BY_REFERENCE:\n\t\t\tcase AttachmentType.ATTACH_BY_REF_RESOLVE:\n\t\t\tcase AttachmentType.NO_ATTACHMENT:\n\t\t\tcase AttachmentType.ATTACH_OLE:\n\t\t\t\tthrow new Error(\"AttachByReference, AttachByRefResolve, NoAttachment and AttachOle are not supported\")\n\t\t}\n\n\t\tif (this.contentId) {\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACHMENT_HIDDEN, true)\n\t\t\tattachmentProperties.addProperty(PropertyTags.PR_ATTACH_FLAGS, AttachmentFlags.ATT_MHTML_REF)\n\t\t}\n\n\t\t// TODO: DateTime\n\t\tconst now = Date.now()\n\t\tattachmentProperties.addProperty(PropertyTags.PR_CREATION_TIME, now)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_LAST_MODIFICATION_TIME, now)\n\t\tattachmentProperties.addProperty(PropertyTags.PR_STORE_SUPPORT_MASK, StoreSupportMaskConst, PropertyFlag.PROPATTR_READABLE)\n\n\t\treturn attachmentProperties.writeProperties(storage, () => {\n\t\t})\n\t}\n}\n","// @flow\n\nimport {Attachment} from \"./attachment\"\nimport {X8} from \"./utils/utils\"\nimport type {AttachmentTypeEnum} from \"./enums\";\nimport {AttachmentType} from \"./enums\"\nimport {PropertyTagLiterals} from \"./property_tags\"\n\nexport class Attachments extends Array<Attachment> {\n\n\t/**\n\t * checks if fileName already exists in this object\n\t * @param fileName {string} the name to check.\n\t * @param contentId {string} the contentId of the file\n\t * @private\n\t */\n\t_checkAttachmentFileName(fileName: string, contentId: string) {\n\t\t//const file = Path.GetFileName(fileName).toLowerCase()\n\t\tconst cid = contentId.toLowerCase()\n\n\t\tif (this.some(attachment => attachment.fileName.toLowerCase() === fileName && attachment.contentId.toLowerCase() === cid)) {\n\t\t\tthrow new Error(\"The attachment with the name '\" + fileName + \"' already exists\")\n\t\t}\n\t}\n\n\t/**\n\t * Writes the Attachment objects to the given storage and sets all the needed properties\n\t * @param rootStorage\n\t * @returns {number} the total size of the written attachment objects and their properties\n\t */\n\twriteToStorage(rootStorage: any): number {\n\t\tlet size = 0\n\n\t\tfor (let i = 0; i < this.length; i++) {\n\t\t\tconst attachment = this[i]\n\t\t\tconst storage = rootStorage.addStorage(PropertyTagLiterals.AttachmentStoragePrefix + X8(i))\n\t\t\tsize += attachment.writeProperties(storage, i)\n\t\t}\n\n\t\treturn size\n\t}\n\n\t/**\n\t * adds an Attachment by AttachmentType.ATTACH_BY_VALUE (default)\n\t * @param data {Uint8Array} data to add as attachment\n\t * @param fileName {string} file to add with full path\n\t * @param creationTime {number} file creation time\n\t * @param lastModificationTime {number} file modification time\n\t * @param type {AttachmentTypeEnum} how to attach the attachment\n\t * @param renderingPosition {number} how to display in a rich text message\n\t * @param isInline {boolean} set to true to add the attachment inline\n\t * @param contentId {string} the id for the inline attachment if isInline is true\n\t * @param isContactPhoto {boolean} if the attachment is a contact photo\n\t */\n\tadd(\n\t\tdata: Uint8Array,\n\t\tfileName: string,\n\t\tcreationTime: number,\n\t\tlastModificationTime: number,\n\t\tcontentId: string = \"\",\n\t\ttype: AttachmentTypeEnum = AttachmentType.ATTACH_BY_VALUE,\n\t\trenderingPosition: number = -1,\n\t\tisInline: boolean = false,\n\t\tisContactPhoto: boolean = false\n\t): void {\n\t\tif (this.length >= 2048) throw new Error(\"length > 2048 => too many attachments!\")\n\t\tthis._checkAttachmentFileName(fileName, contentId)\n\t\tconst a = new Attachment(...arguments)\n\t\tthis.push(a)\n\t}\n}","// @flow\nimport {byteBufferAsUint8Array, makeByteBuffer} from \"../utils/utils\";\n\n/**\n * The PidTagReportTag property ([MS-OXPROPS] section 2.917) contains the data that is used to correlate the report\n * and the original message. The property can be absent if the sender does not request a reply or response to the\n * original e-mail message. If the original E-mail object has either the PidTagResponseRequested property (section\n * 2.2.1.46) set to 0x01 or the PidTagReplyRequested property (section 2.2.1.45) set to 0x01, then the property is set\n * on the original E-mail object by using the following format.\n * See https://msdn.microsoft.com/en-us/library/ee160822(v=exchg.80).aspx\n */\nexport class ReportTag {\n\t// (9 bytes): A null-terminated string of nine characters used for validation; set to \"PCDFEB09\".\n\tcookie: string = \"PCDFEB09\\0\"\n\n\t// (4 bytes): This field specifies the version. If the SearchFolderEntryId field is present, this field MUST be set to\n\t// 0x00020001; otherwise, this field MUST be set to 0x00010001.\n\tversion: number = 0x00010001\n\n\t// (4 bytes): Size of the StoreEntryId field.\n\tstoreEntryIdSize: number = 0x00000000\n\n\t// (Variable length of bytes): This field specifies the entry ID of the mailbox that contains the original message. If\n\t// the value of the\n\t// StoreEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, this field is filled with\n\t// the number of bytes specified by the StoreEntryIdSize field.\n\tstoreEntryId: Uint8Array\n\n\t// (4 bytes): Size of the FolderEntryId field.\n\tfolderEntryIdSize: number = 0x00000000\n\n\t// (Variable): This field specifies the entry ID of the folder that contains the original message. If the value of the\n\t// FolderEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, the field is filled with\n\t// the number of bytes specified by the FolderEntryIdSize field.\n\tfolderEntryId: number = 0\n\n\t// (4 bytes): Size of the MessageEntryId field.\n\tmessageEntryIdSize: number = 0x00000000\n\n\t// (Variable): This field specifies the entry ID of the original message. If the value of the MessageEntryIdSize field\n\t// is 0x00000000, this field is omitted. If the value is not zero, the field is filled with the number of bytes\n\t// specified by the MessageEntryIdSize field.\n\tmessageEntryId: number = 0\n\n\t// (4 bytes): Size of the SearchFolderEntryId field.\n\tsearchFolderEntryIdSize: number = 0x00000000\n\n\t// (Variable): This field specifies the entry ID of an alternate folder that contains the original message. If the\n\t// value of the SearchFolderEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, the\n\t// field is filled with the number of bytes specified by the SearchFolderEntryIdSize field.\n\tsearchFolderEntryId: Uint8Array\n\n\t// (4 bytes): Size of the MessageSearchKey field.\n\tmessageSearchKeySize: number = 0x00000000\n\n\t// (variable): This field specifies the search key of the original message. If the value of the MessageSearchKeySize\n\t// field is 0x00000000, this field is omitted. If the value is not zero, the MessageSearchKey field is filled with the\n\t// number of bytes specified by the MessageSearchKeySize field.\n\tmessageSearchKey: Uint8Array\n\n\t// (Variable): The subject of the original message. If the value of the ANSITextSize field is 0x00000000, this field\n\t// is omitted. If the value is not zero, the field is filled with the number of bytes specified by the ANSITextSize\n\t// field.\n\tansiText: string\n\n\tconstructor(ansiText: string) {\n\t\tthis.ansiText = ansiText\n\t}\n\n\t/**\n\t * Returns this object as a byte array\n\t */\n\ttoByteArray(): Uint8Array {\n\t\tconst buf = makeByteBuffer()\n\t\t// Cookie (9 bytes): A null-terminated string of nine characters used for validation; set to \"PCDFEB09\".\n\t\t// TODO:\n\t\tbuf.writeUTF8String(this.cookie)\n\n\t\t// Version (4 bytes): This field specifies the version. If the SearchFolderEntryId field is present,\n\t\t// this field MUST be set to 0x00020001; otherwise, this field MUST be set to 0x00010001.\n\t\tbuf.writeUint32(this.version)\n\n\t\t// (4 bytes): Size of the StoreEntryId field.\n\t\tbuf.writeUint32(this.storeEntryIdSize)\n\n\t\t// (Variable length of bytes): This field specifies the entry ID of the mailbox that contains the original message. If\n\t\t// the value of the StoreEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, this field\n\t\t// is filled with the number of bytes specified by the StoreEntryIdSize field.\n\t\t//buf.append(this.storeEntryId);\n\n\t\t// (4 bytes): Size of the FolderEntryId field.\n\t\tbuf.writeUint32(this.folderEntryIdSize)\n\n\t\t// (Variable): This field specifies the entry ID of the folder that contains the original message. If the value of the\n\t\t// FolderEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, the field is filled with\n\t\t// the number of bytes specified by the FolderEntryIdSize field.\n\t\t//buf.append(this.folderEntryId)\n\n\t\t// (4 bytes): Size of the MessageEntryId field.\n\t\tbuf.writeUint32(this.messageEntryIdSize)\n\n\t\t// (Variable): This field specifies the entry ID of the original message. If the value of the MessageEntryIdSize field\n\t\t// is 0x00000000, this field is omitted. If the value is not zero, the field is filled with the number of bytes\n\t\t// specified by the MessageEntryIdSize field.\n\t\t//buf.append(this.messageEntryId)\n\n\t\t// (4 bytes): Size of the SearchFolderEntryId field.\n\t\tbuf.writeUint32(this.searchFolderEntryIdSize)\n\n\t\t// (Variable): This field specifies the entry ID of an alternate folder that contains the original message. If the\n\t\t// value of the SearchFolderEntryIdSize field is 0x00000000, this field is omitted. If the value is not zero, the\n\t\t// field is filled with the number of bytes specified by the SearchFolderEntryIdSize field.\n\t\t//buf.append(this.searchFolderEntryId)\n\n\t\t// (4 bytes): Size of the MessageSearchKey field.\n\t\tbuf.writeUint32(this.messageSearchKeySize)\n\n\t\t// (variable): This field specifies the search key of the original message. If the value of the MessageSearchKeySize\n\t\t// field is 0x00000000, this field is omitted. If the value is not zero, the MessageSearchKey field is filled with the\n\t\t// number of bytes specified by the MessageSearchKeySize field.\n\t\t//buf.append(this.messageSearchKey)\n\n\t\t// (4 bytes): Number of characters in the ANSI Text field.\n\t\tbuf.writeUint32(this.ansiText.length)\n\n\t\t// (Variable): The subject of the original message. If the value of the ANSITextSize field is 0x00000000, this field\n\t\t// is omitted. If the value is not zero, the field is filled with the number of bytes specified by the ANSITextSize\n\t\t// field.\n\t\tbuf.writeUTF8String(this.ansiText)\n\n\t\treturn byteBufferAsUint8Array(buf)\n\t}\n}","// @flow\nimport ByteBuffer from 'bytebuffer'\n\nconst CRC32_TABLE = [\n    0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419,\n    0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4,\n    0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07,\n    0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE,\n    0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856,\n    0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9,\n    0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,\n    0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B,\n    0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3,\n    0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A,\n    0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599,\n    0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924,\n    0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190,\n    0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,\n    0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E,\n    0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01,\n    0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED,\n    0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950,\n    0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3,\n    0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2,\n    0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,\n    0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5,\n    0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010,\n    0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F,\n    0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17,\n    0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6,\n    0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615,\n    0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,\n    0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344,\n    0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB,\n    0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A,\n    0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5,\n    0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1,\n    0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C,\n    0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,\n    0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236,\n    0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE,\n    0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31,\n    0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C,\n    0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713,\n    0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B,\n    0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,\n    0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1,\n    0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C,\n    0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278,\n    0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7,\n    0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66,\n    0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9,\n    0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,\n    0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8,\n    0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B,\n    0x2D02EF8D\n]\n\nexport class Crc32 {\n\n    /**\n     * calculates a checksum of a ByteBuffers contents\n     * @param buffer {ByteBuffer}\n     * @returns {number} the crc32 of this buffer's contents between offset and limit\n     */\n    static calculate(buffer: ByteBuffer): number {\n        if (buffer.offset >= buffer.limit) return 0\n        const origOffset = buffer.offset\n        let result = 0\n        while (buffer.offset < buffer.limit) {\n            const cur = buffer.readUint8()\n            result = CRC32_TABLE[(result ^ cur) & 0xFF] ^ (result >>> 8)\n        }\n        buffer.offset = origOffset\n        // unsigned representation. (-1 >>> 0) === 4294967295\n        return result >>> 0\n    }\n}\n","// @flow\nimport ByteBuffer from 'bytebuffer'\nimport {byteBufferAsUint8Array, makeByteBuffer, stringToUtf8Array} from \"../utils/utils\"\nimport {Crc32} from \"./crc32\"\n\nconst INIT_DICT_SIZE: number = 207\nconst MAX_DICT_SIZE: number = 4096\nconst COMP_TYPE: string = \"LZFu\"\nconst HEADER_SIZE: number = 16\n\ntype MatchInfo = {|\n    dictionaryOffset: number,\n    length: number,\n|}\n\nfunction getInitialDict(): ByteBuffer {\n    const builder = []\n    builder.push('{\\\\rtf1\\\\ansi\\\\mac\\\\deff0\\\\deftab720{\\\\fonttbl;}')\n    builder.push('{\\\\f0\\\\fnil \\\\froman \\\\fswiss \\\\fmodern \\\\fscript ')\n    builder.push('\\\\fdecor MS Sans SerifSymbolArialTimes New RomanCourier{\\\\colortbl\\\\red0\\\\green0\\\\blue0')\n    builder.push('\\r\\n')\n    builder.push('\\\\par \\\\pard\\\\plain\\\\f0\\\\fs20\\\\b\\\\i\\\\u\\\\tab\\\\tx')\n    const res = builder.join('')\n    let initialDictionary = makeByteBuffer(null, stringToUtf8Array(res))\n    initialDictionary.ensureCapacity(MAX_DICT_SIZE)\n    initialDictionary.limit = MAX_DICT_SIZE\n    initialDictionary.offset = INIT_DICT_SIZE\n    return initialDictionary\n}\n\n/**\n * find the longest match of the start of the current input in the dictionary.\n * finds the length of the longest match of the start of the current input in the dictionary and\n * the position of it in the dictionary.\n * @param dictionary {ByteBuffer} part of the MS-OXRTFCP spec.\n * @param inputBuffer {ByteBuffer} pointing at the input data\n * @returns {MatchInfo} object containing dictionaryOffset, length\n */\nfunction findLongestMatch(dictionary: ByteBuffer, inputBuffer: ByteBuffer): MatchInfo {\n\n    const positionData: MatchInfo = {\n        length: 0,\n        dictionaryOffset: 0\n    }\n    if (inputBuffer.offset >= inputBuffer.limit) return positionData\n    inputBuffer.mark()\n    dictionary.mark() // previousWriteOffset\n    let matchLength = 0\n    let dictionaryIndex = 0\n\n\n    while (true) {\n        const inputCharacter = inputBuffer.readUint8()\n        const dictCharacter = dictionary.readUint8(dictionaryIndex % MAX_DICT_SIZE)\n        if (dictCharacter === inputCharacter) {\n            matchLength += 1\n            if (matchLength <= 17 && matchLength > positionData.length) {\n                positionData.dictionaryOffset = dictionaryIndex - matchLength + 1\n                dictionary.writeUint8(inputCharacter)\n                dictionary.offset = dictionary.offset % MAX_DICT_SIZE\n                positionData.length = matchLength\n            }\n            if (inputBuffer.offset >= inputBuffer.limit) break\n        } else {\n            inputBuffer.reset()\n            inputBuffer.mark()\n            matchLength = 0\n            if (inputBuffer.offset >= inputBuffer.limit) break\n        }\n\n        dictionaryIndex += 1\n        if (dictionaryIndex >= dictionary.markedOffset + positionData.length) break\n    }\n    inputBuffer.reset()\n    return positionData\n}\n\n/**\n * Takes in input, compresses it using LZFu by Microsoft. Can be viewed in the [MS-OXRTFCP].pdf document.\n * https://msdn.microsoft.com/en-us/library/cc463890(v=exchg.80).aspx. Returns the input as a byte array.\n * @param input {Uint8Array} the input to compress\n * @returns {Uint8Array} compressed input\n */\nexport function compress(input: Uint8Array): Uint8Array {\n    let matchData: MatchInfo = {\n        length: 0,\n        dictionaryOffset: 0\n    }\n\n    const inputBuffer = makeByteBuffer(null, input)\n\n    const dictionary = getInitialDict()\n    const tokenBuffer = makeByteBuffer(16)\n    const resultBuffer = makeByteBuffer(17)\n    // The writer MUST set the input cursor to the first byte in the input buffer.\n    // The writer MUST set the output cursor to the 17th byte (to make space for the compressed header).\n    resultBuffer.offset = HEADER_SIZE\n\n    // (1) The writer MUST (re)initialize the run by setting its\n    // Control Byte to 0 (zero), its control bit to 0x01, and its token offset to 0 (zero).\n    let controlByte = 0\n    let controlBit = 0x01\n    while (true) {\n\n        // (3) Locate the longest match in the dictionary for the current input cursor,\n        // as specified in section 3.3.4.2.1. Note that the dictionary is updated during this procedure.\n        matchData = findLongestMatch(dictionary, inputBuffer)\n        if (inputBuffer.offset >= inputBuffer.limit) {\n            // (2) If there is no more input, the writer MUST exit the compression loop (by advancing to step 8).\n\n            // (8) A dictionary reference (see section 2.2.1.5) MUST be created from an offset equal\n            // to the current write offset of the dictionary and a length of 0 (zero), and inserted\n            // in the token buffer as a big-endian word at the current token offset. The writer MUST\n            // then advance the token offset by 2. The control bit MUST be ORed into the Control Byte,\n            // thus setting the bit that corresponds to the current token to 1.\n\n            let dictReference = (dictionary.offset & 0xFFF) << 4\n            tokenBuffer.writeUint8(dictReference >>> 8 & 0xFF)\n            tokenBuffer.writeUint8(dictReference >>> 0 & 0xFF)\n            controlByte |= controlBit\n\n            // (9) The writer MUST write the current run to the output by writing the BYTE Control Byte,\n            // and then copying token offset number of BYTEs from the token buffer to the output.\n            // The output cursor is advanced by token offset + 1 BYTE.\n            resultBuffer.writeUint8(controlByte)\n            tokenBuffer.limit = tokenBuffer.offset\n            tokenBuffer.offset = 0\n            resultBuffer.append(tokenBuffer)\n            break\n        }\n\n        if (matchData.length <= 1) {\n            // (4) If the match is 0 (zero) or 1 byte in length, the writer\n            // MUST copy the literal at the input cursor to the Run's token\n            // buffer at token offset. The writer MUST increment the token offset and the input cursor.\n            const inputCharacter = inputBuffer.readUint8()\n            if (matchData.length === 0) {\n                dictionary.writeUint8(inputCharacter)\n                dictionary.offset = dictionary.offset % dictionary.limit\n            }\n            tokenBuffer.writeUint8(inputCharacter)\n        } else {\n            // (5) If the match is 2 bytes or longer, the writer MUST create a dictionary\n            // reference (see section 2.2.1.5) from the offset of the match and the length.\n            // (Note: The value stored in the Length field in REFERENCE is length minus 2.)\n            // The writer MUST insert this dictionary reference in the token buffer as a\n            // big-endian word at the current token offset. The control bit MUST be bitwise\n            // ORed into the Control Byte, thus setting the bit that corresponds to the\n            // current token to 1. The writer MUST advance the token offset by 2 and\n            // MUST advance the input cursor by the length of the match.\n            let dictReference = (matchData.dictionaryOffset & 0xFFF) << 4 | (matchData.length - 2) & 0xF\n            controlByte |= controlBit\n            tokenBuffer.writeUint8(dictReference >>> 8 & 0xFF)\n            tokenBuffer.writeUint8(dictReference >>> 0 & 0xFF)\n            inputBuffer.offset = inputBuffer.offset + matchData.length\n        }\n\n        matchData.length = 0\n\n        if (controlBit === 0x80) {\n            // (7) If the control bit is equal to 0x80, the writer MUST write the run\n            // to the output by writing the BYTE Control Byte, and then copying the\n            // token offset number of BYTEs from the token buffer to the output. The\n            // writer MUST advance the output cursor by token offset + 1 BYTEs.\n            // Continue with compression by returning to step (1).\n            resultBuffer.writeUint8(controlByte)\n            tokenBuffer.limit = tokenBuffer.offset\n            tokenBuffer.offset = 0\n            resultBuffer.append(tokenBuffer)\n            controlByte = 0\n            controlBit = 0x01\n            tokenBuffer.clear()\n            continue\n        }\n        // (6) If the control bit is not 0x80, the control bit MUST be left-shifted by one bit and compression MUST\n        // continue building the run by returning to step (2).\n        controlBit <<= 1\n    }\n\n    // After the output has been completed by execution of step (9), the writer\n    // MUST complete the output by filling the header, as specified in section 3.3.4.2.2.\n    // The writer MUST fill in the header by using the following process:\n\n    // 1.Set the COMPSIZE (see section 2.2.1.1) field of the header to the number of CONTENTS bytes in the output buffer plus 12.\n    resultBuffer.limit = resultBuffer.offset\n    resultBuffer.writeUint32(resultBuffer.limit - HEADER_SIZE + 12, 0)\n\n    // 2.Set the RAWSIZE (see section 2.2.1.1) field of the header to the number of bytes read from the input.\n    resultBuffer.writeUint32(input.length, 4)\n\n    // 3.Set the COMPTYPE (see section 2.2.1.1) field of the header to COMPRESSED.\n    resultBuffer.writeUTF8String(COMP_TYPE, 8)\n\n    // 4.Set the CRC (see section 3.1.3.2) field of the header to the CRC (see section 3.1.1.1.2) generated from the CONTENTS bytes.\n    resultBuffer.offset = HEADER_SIZE\n    resultBuffer.writeUint32(Crc32.calculate(resultBuffer), 12)\n    resultBuffer.offset = resultBuffer.limit\n    return byteBufferAsUint8Array(resultBuffer)\n}","// @flow\nimport {Message} from './message'\nimport {Recipients} from \"./address/recipients\"\nimport type {AttachmentTypeEnum, MessageEditorFormatEnum, MessageImportanceEnum, MessagePriorityEnum} from \"./enums\"\nimport {\n\tAttachmentType,\n\tMapiAccess,\n\tMapiObjectType,\n\tMessageClass,\n\tMessageEditorFormat, MessageFlags,\n\tMessageIconIndex,\n\tMessageImportance, MessagePriority, PropertyFlag,\n\tRecipientType, StoreSupportMaskConst\n} from \"./enums\"\nimport {Receiving} from \"./address/receiving\"\nimport {isNullOrEmpty, isNullOrWhiteSpace, localeId, stringToUtf8Array} from \"./utils/utils\"\nimport {PropertyTags} from \"./property_tags\"\nimport {MessageHeader, parseMessageHeaders} from \"./mime/header/message_header\"\nimport {Sender} from \"./address/sender\"\nimport {Representing} from \"./address/representing\"\nimport {Attachments} from \"./attachments\"\nimport {ReceivingRepresenting} from \"./address/receiving_representing\"\nimport {generateEntryId, generateInstanceKey} from \"./utils/mapi\"\nimport {Strings} from \"./helpers/strings\"\nimport {ReportTag} from \"./structures/report_tag\"\nimport {compress} from \"./helpers/rtf_compressor\"\nimport {dateToFileTime} from \"./utils/time\";\n\n// \\D => not digit\nconst subjectPrefixRegex = /^(\\D{1,3}:\\s)(.*)$/\n\nexport type Recipient = {address: string, name?: string}\n\nexport class Email extends Message {\n\trecipients: Recipients\n\treplyToRecipients: Recipients\n\tattachments: Attachments\n\t_subject: string = \"\"\n\t_sender: Sender\n\t_representing: Representing\n\t_receiving: Receiving\n\t_receivingRepresenting: ReceivingRepresenting\n\tsubjectPrefix: string\n\t_subjectNormalized: string\n\tpriority: MessagePriorityEnum\n\timportance: MessageImportanceEnum\n\t_bodyText: string\n\t_bodyHtml: string\n\t_bodyRtf: string\n\tbodyRtfCompressed: boolean\n\t_sentOn: ?Date\n\t_receivedOn: ?Date // was: DateTime\n\t// Corresponds to the message ID field as specified in [RFC2822].\n\t// If set then this value will be used, when not set the value will be read from the\n\t// TransportMessageHeaders when this property is set\n\tinternetMessageId: string\n\tinternetReferences: string\n\tinReplyToId: string\n\ttransportMessageHeadersText: ?string\n\ttransportMessageHeaders: ?MessageHeader\n\tdraft: boolean\n\treadReceipt: boolean\n\tmessageEditorFormat: MessageEditorFormatEnum\n\n\tconstructor(draft: boolean = false, readReceipt: boolean = false) {\n\t\tsuper()\n\t\tthis.recipients = new Recipients()\n\t\tthis.replyToRecipients = new Recipients()\n\t\tthis.attachments = new Attachments()\n\t\tthis.priority = MessagePriority.PRIO_NONURGENT\n\t\tthis.importance = MessageImportance.IMPORTANCE_NORMAL\n\t\tthis.iconIndex = MessageIconIndex.NewMail\n\t\tthis.draft = draft\n\t\tthis.readReceipt = readReceipt\n\t\tthis._bodyHtml = \"\"\n\t\tthis._bodyText = \"\"\n\t\tthis._sentOn = null\n\t\tthis._receivedOn = null\n\n\t}\n\n\tsender(address: string, displayName?: string): Email {\n\t\tthis._sender = new Sender(address, displayName || \"\")\n\t\treturn this\n\t}\n\n\tbodyHtml(html: string): Email {\n\t\tthis._bodyHtml = html\n\t\treturn this\n\t}\n\n\tbodyText(txt: string): Email {\n\t\tthis._bodyText = txt\n\t\treturn this\n\t}\n\n\tbodyFormat(fmt: MessageEditorFormatEnum): Email {\n\t\tthis.messageEditorFormat = fmt\n\t\treturn this\n\t}\n\n\tsubject(subject: string): Email {\n\t\tthis._subject = subject\n\t\tthis._setSubject()\n\t\treturn this\n\t}\n\n\tto(address: string, displayName?: string,): Email {\n\t\tthis.recipients.addTo(address, displayName)\n\t\treturn this\n\t}\n\n\tcc(address: string, displayName?: string): Email {\n\t\tthis.recipients.addCc(address, displayName)\n\t\treturn this\n\t}\n\n\tbcc(address: string, displayName?: string): Email {\n\t\tthis.recipients.addBcc(address, displayName)\n\t\treturn this\n\t}\n\n\treplyTo(address: string, displayName?: string): Email {\n\t\tthis.replyToRecipients.addTo(address, displayName)\n\t\treturn this\n\t}\n\n\ttos(recipients: Array<Recipient>): Email {\n\t\trecipients.forEach(r => this.to(r.address, r.name))\n\t\treturn this\n\t}\n\n\tccs(recipients: Array<Recipient>): Email {\n\t\trecipients.forEach(r => this.cc(r.address, r.name))\n\t\treturn this\n\t}\n\n\tbccs(recipients: Array<Recipient>): Email {\n\t\trecipients.forEach(r => this.bcc(r.address, r.name))\n\t\treturn this\n\t}\n\n\treplyTos(recipients: Array<Recipient>): Email {\n\t\trecipients.forEach(r => this.replyTo(r.address, r.name))\n\t\treturn this\n\t}\n\n\tsentOn(when: ?Date): Email {\n\t\tthis._sentOn = when\n\t\treturn this\n\t}\n\n\treceivedOn(when: ?Date): Email {\n\t\tthis._receivedOn = when\n\t\treturn this\n\t}\n\n\tattach(\n\t\tdata: Uint8Array,\n\t\tfileName: string,\n\t\tcontentId: string = \"\",\n\t\ttype: AttachmentTypeEnum = AttachmentType.ATTACH_BY_VALUE,\n\t\tcreationTime: number = Date.now(),\n\t\tlastModificationTime: number = Date.now(),\n\t\trenderingPosition: number = -1,\n\t\tisContactPhoto: boolean = false\n\t): Email {\n\t\tthis.attachments.add(...arguments)\n\t\treturn this\n\t}\n\n\t/**\n\t * the raw transport headers\n\t * @param headers\n\t */\n\theaders(headers: string): Email {\n\t\tthis.transportMessageHeadersText = headers\n\n\t\t// TODO... or not?\n\t\t// this.transportMessageHeaders = new MessageHeader(parseMessageHeaders(headers))\n\n\t\treturn this\n\t}\n\n\tmsg(): Uint8Array {\n\t\tthis._writeToStorage()\n\t\treturn super.saveToBuffer()\n\t}\n\n\t_setSubject() {\n\t\tif (!isNullOrEmpty(this.subjectPrefix)) {\n\t\t\tif (this._subject.startsWith(this.subjectPrefix)) {\n\t\t\t\tthis._subjectNormalized = this._subject.slice(this.subjectPrefix.length)\n\t\t\t} else {\n\t\t\t\tconst match = this._subject.match(subjectPrefixRegex)\n\t\t\t\tif (match != null) {\n\t\t\t\t\tthis.subjectPrefix = match[1]\n\t\t\t\t\tthis._subjectNormalized = match[2]\n\t\t\t\t}\n\n\t\t\t}\n\t\t} else if (!isNullOrEmpty(this._subject)) {\n\t\t\tthis._subjectNormalized = this._subject\n\t\t\tconst match = this._subject.match(subjectPrefixRegex)\n\t\t\tif (match != null) {\n\t\t\t\tthis.subjectPrefix = match[1]\n\t\t\t\tthis._subjectNormalized = match[2]\n\t\t\t}\n\t\t} else {\n\t\t\tthis._subjectNormalized = this._subject\n\t\t}\n\t\tif (!this.subjectPrefix) this.subjectPrefix = \"\"\n\t}\n\n\t/**\n\t * write to the cfb of the underlying message\n\t */\n\t_writeToStorage(): void {\n\t\tconst rootStorage = this._storage\n\n\t\tif (this._messageClass === MessageClass.Unknown) this._messageClass = MessageClass.IPM_Note\n\t\tthis._messageSize += this.recipients.writeToStorage(rootStorage)\n\t\tthis._messageSize += this.attachments.writeToStorage(rootStorage)\n\n\t\tconst recipientCount = this.recipients.length\n\t\tconst attachmentCount = this.attachments.length\n\t\tthis._topLevelProperties.recipientCount = recipientCount\n\t\tthis._topLevelProperties.attachmentCount = attachmentCount\n\t\tthis._topLevelProperties.nextRecipientId = recipientCount\n\t\tthis._topLevelProperties.nextAttachmentId = attachmentCount\n\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_ENTRYID, generateEntryId())\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_INSTANCE_KEY, generateInstanceKey())\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_STORE_SUPPORT_MASK, StoreSupportMaskConst, PropertyFlag.PROPATTR_READABLE)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_STORE_UNICODE_MASK, StoreSupportMaskConst, PropertyFlag.PROPATTR_READABLE)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_ALTERNATE_RECIPIENT_ALLOWED, true, PropertyFlag.PROPATTR_READABLE)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_HASATTACH, attachmentCount > 0)\n\n\n\t\tif (this.transportMessageHeadersText) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_TRANSPORT_MESSAGE_HEADERS_W, this.transportMessageHeadersText)\n\t\t}\n\n\t\tconst transportHeaders = this.transportMessageHeaders\n\t\tif (transportHeaders) {\n\n\t\t\tif (!isNullOrWhiteSpace(transportHeaders.messageId)) {\n\t\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_INTERNET_MESSAGE_ID_W, transportHeaders.messageId)\n\t\t\t}\n\n\t\t\tconst refCount = transportHeaders.references.length\n\t\t\tif (refCount > 0) {\n\t\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_INTERNET_REFERENCES_W, transportHeaders.references[refCount\n\t\t\t\t- 1])\n\t\t\t}\n\n\t\t\tconst replCount = transportHeaders.inReplyTo.length\n\t\t\tif (replCount > 0) {\n\t\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_IN_REPLY_TO_ID_W, transportHeaders.inReplyTo[replCount\n\t\t\t\t- 1])\n\t\t\t}\n\t\t}\n\n\t\tif (!isNullOrWhiteSpace(this.internetMessageId)) {\n\t\t\tthis._topLevelProperties.addOrReplaceProperty(PropertyTags.PR_INTERNET_MESSAGE_ID_W, this.internetMessageId)\n\t\t}\n\n\t\tif (!isNullOrWhiteSpace(this.internetReferences)) {\n\t\t\tthis._topLevelProperties.addOrReplaceProperty(PropertyTags.PR_INTERNET_REFERENCES_W, this.internetReferences)\n\t\t}\n\n\t\tif (!isNullOrWhiteSpace(this.inReplyToId)) {\n\t\t\tthis._topLevelProperties.addOrReplaceProperty(PropertyTags.PR_IN_REPLY_TO_ID_W, this.inReplyToId)\n\t\t}\n\n\t\tlet messageFlags = MessageFlags.MSGFLAG_UNMODIFIED\n\n\t\tif (attachmentCount > 0) messageFlags |= MessageFlags.MSGFLAG_HASATTACH\n\n\t\t// int Encoding.UTF8.CodePage == 65001\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_INTERNET_CPID, 65001)\n\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_BODY_W, this._bodyText)\n\n\t\tif (!isNullOrEmpty(this._bodyHtml) && !this.draft) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_HTML, this._bodyHtml)\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_RTF_IN_SYNC, false)\n\t\t} else if (isNullOrWhiteSpace(this._bodyRtf) && !isNullOrWhiteSpace(this._bodyHtml)) {\n\t\t\tthis._bodyRtf = Strings.escapeRtf(this._bodyHtml)\n\t\t\tthis.bodyRtfCompressed = true\n\t\t}\n\n\t\tif (!isNullOrWhiteSpace(this._bodyRtf)) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_RTF_COMPRESSED, compress(stringToUtf8Array(this._bodyRtf)))\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_RTF_IN_SYNC, this.bodyRtfCompressed)\n\t\t}\n\n\t\tif (this.messageEditorFormat !== MessageEditorFormat.EDITOR_FORMAT_DONTKNOW) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_MSG_EDITOR_FORMAT, this.messageEditorFormat)\n\t\t}\n\n\t\t// TODO: SentOn.HasValue\n\t\tif (this._sentOn == null) this._sentOn = new Date()\n\n\t\t// TODO: _receivedOn.HasValue?\n\t\tif (this._receivedOn != null) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_MESSAGE_DELIVERY_TIME, dateToFileTime(this._receivedOn))\n\t\t}\n\n\t\t// was SentOn.Value.ToUniversalTime()\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_CLIENT_SUBMIT_TIME, dateToFileTime(this._sentOn))\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_ACCESS, MapiAccess.MAPI_ACCESS_DELETE | MapiAccess.MAPI_ACCESS_MODIFY\n\t\t\t| MapiAccess.MAPI_ACCESS_READ)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_ACCESS_LEVEL, MapiAccess.MAPI_ACCESS_MODIFY)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_OBJECT_TYPE, MapiObjectType.MAPI_MESSAGE)\n\n\t\tthis._setSubject()\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_SUBJECT_W, this._subject)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_NORMALIZED_SUBJECT_W, this._subjectNormalized)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_SUBJECT_PREFIX_W, this.subjectPrefix)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_CONVERSATION_TOPIC_W, this._subjectNormalized)\n\n\t\t// http://www.meridiandiscovery.com/how-to/e-mail-conversation-index-metadata-computer-forensics/\n\t\t// http://stackoverflow.com/questions/11860540/does-outlook-embed-a-messageid-or-equivalent-in-its-email-elements\n\t\t// propertiesStream.AddProperty(PropertyTags.PR_CONVERSATION_INDEX, Subject)\n\n\t\t// TODO: Change modification time when this message is opened and only modified\n\t\tconst utcNow = Date.now()\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_CREATION_TIME, utcNow)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_LAST_MODIFICATION_TIME, utcNow)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_PRIORITY, this.priority)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_IMPORTANCE, this.importance)\n\t\t// was CultureInfo.CurrentCulture.LCID\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_MESSAGE_LOCALE_ID, localeId())\n\n\t\tif (this.draft) {\n\t\t\tmessageFlags |= MessageFlags.MSGFLAG_UNSENT\n\t\t\tthis.iconIndex = MessageIconIndex.UnsentMail\n\t\t}\n\n\t\tif (this.readReceipt) {\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_READ_RECEIPT_REQUESTED, true)\n\t\t\tconst reportTag = new ReportTag(this._subject)\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_REPORT_TAG, reportTag.toByteArray())\n\n\t\t}\n\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_MESSAGE_FLAGS, messageFlags)\n\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_ICON_INDEX, this.iconIndex)\n\n\t\tif (!!this._sender) this._sender.writeProperties(this._topLevelProperties)\n\t\tif (!!this._receiving) this._receiving.writeProperties(this._topLevelProperties)\n\t\tif (!!this._receivingRepresenting) this._receivingRepresenting.writeProperties(this._topLevelProperties)\n\t\tif (!!this._representing) this._representing.writeProperties(this._topLevelProperties)\n\n\t\tif (recipientCount > 0) {\n\t\t\tconst displayTo = []\n\t\t\tconst displayCc = []\n\t\t\tconst displayBcc = []\n\n\t\t\tfor (const recipient of this.recipients) {\n\t\t\t\tswitch (recipient.recipientType) {\n\t\t\t\t\tcase RecipientType.To:\n\t\t\t\t\t\tif (!isNullOrWhiteSpace(recipient.displayName)) {\n\t\t\t\t\t\t\tdisplayTo.push(recipient.displayName)\n\t\t\t\t\t\t} else if (!isNullOrWhiteSpace(recipient.email)) {\n\t\t\t\t\t\t\tdisplayTo.push(recipient.email)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tcase RecipientType.Cc:\n\t\t\t\t\t\tif (!isNullOrWhiteSpace(recipient.displayName)) {\n\t\t\t\t\t\t\tdisplayCc.push(recipient.displayName)\n\t\t\t\t\t\t} else if (!isNullOrWhiteSpace(recipient.email)) {\n\t\t\t\t\t\t\tdisplayCc.push(recipient.email)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tcase RecipientType.Bcc:\n\t\t\t\t\t\tif (!isNullOrWhiteSpace(recipient.displayName)) {\n\t\t\t\t\t\t\tdisplayBcc.push(recipient.displayName)\n\t\t\t\t\t\t} else if (!isNullOrWhiteSpace(recipient.email)) {\n\t\t\t\t\t\t\tdisplayBcc.push(recipient.email)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('RecipientType out of Range: ' + recipient.recipientType)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst replyToRecipients = []\n\n\t\t\tfor (const recipient of this.replyToRecipients) {\n\t\t\t\treplyToRecipients.push(recipient.email)\n\t\t\t}\n\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_DISPLAY_TO_W, displayTo.join(';'), PropertyFlag.PROPATTR_READABLE)\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_DISPLAY_CC_W, displayCc.join(';'), PropertyFlag.PROPATTR_READABLE)\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_DISPLAY_BCC_W, displayBcc.join(';'), PropertyFlag.PROPATTR_READABLE)\n\t\t\tthis._topLevelProperties.addProperty(PropertyTags.PR_REPLY_RECIPIENT_NAMES_W, replyToRecipients.join(';'), PropertyFlag.PROPATTR_READABLE)\n\t\t}\n\t}\n}","// @flow\nimport {CFBStorage} from \"./cfb_storage\"\nimport type {MessageClassEnum, MessageIconIndexEnum} from \"./enums\"\nimport {MessageClass, PropertyFlag} from \"./enums\"\nimport type {PropertyTag} from \"./property_tags\"\nimport {PropertyTagLiterals, PropertyTags} from \"./property_tags\"\nimport {TopLevelProperties} from \"./streams/top_level_properties\"\nimport {NamedProperties} from \"./streams/named_properties\"\n\n/**\n * base class for all MSG files\n */\nexport class Message {\n    _saved: boolean = false\n    iconIndex: MessageIconIndexEnum\n    _topLevelProperties: TopLevelProperties\n    _namedProperties: NamedProperties\n    _storage: CFBStorage\n    _messageClass: MessageClassEnum = MessageClass.Unknown\n    _messageSize: number\n\n    constructor() {\n        this._storage = new CFBStorage()\n\n        // In the preceding figure, the \"__nameid_version1.0\" named property mapping storage contains the\n        // three streams  used to provide a mapping from property ID to property name\n        // (\"__substg1.0_00020102\", \"__substg1.0_00030102\", and \"__substg1.0_00040102\") and various other\n        // streams that provide a mapping from property names to property IDs.\n        // if (!CompoundFile.RootStorage.TryGetStorage(PropertyTags.NameIdStorage, out var nameIdStorage))\n        // nameIdStorage = CompoundFile.RootStorage.AddStorage(PropertyTags.NameIdStorage);\n\n        const nameIdStorage = this._storage.addStorage(PropertyTagLiterals.NameIdStorage)\n\n        nameIdStorage.addStream(PropertyTagLiterals.EntryStream, Uint8Array.of());\n        nameIdStorage.addStream(PropertyTagLiterals.StringStream, Uint8Array.of());\n        nameIdStorage.addStream(PropertyTagLiterals.GuidStream, Uint8Array.of());\n\n        this._topLevelProperties = new TopLevelProperties();\n        this._namedProperties = new NamedProperties(this._topLevelProperties);\n    }\n\n    _save() {\n        this._topLevelProperties.addProperty(PropertyTags.PR_MESSAGE_CLASS_W, this._messageClass)\n        this._topLevelProperties.writeProperties(this._storage, () => {\n        }, this._messageSize)\n        this._namedProperties.writeProperties(this._storage, 0)\n        this._saved = true\n        this._messageSize = 0\n    }\n\n    /**\n     * writes the Message to an underlying CFB\n     * structure and returns a serialized\n     * representation\n     *\n     */\n    saveToBuffer(): Uint8Array {\n        this._save()\n        return this._storage.toBytes()\n    }\n\n    addProperty(\n        propertyTag: PropertyTag,\n        value: any,\n        flags: number = PropertyFlag.PROPATTR_WRITABLE\n    ) {\n        if (this._saved) throw new Error(\"Message is already saved!\")\n        this._topLevelProperties.addOrReplaceProperty(propertyTag, value, flags)\n    }\n}","// @flow\n\nimport {x2} from \"../utils/utils\"\n\nexport class Strings {\n\n    /**\n     * returns the str as an escaped RTF string\n     * @param str {string} string to escape\n     */\n    static escapeRtf(str: string): string {\n        const rtfEscaped = []\n        const escapedChars = ['{', '}', '\\\\']\n        for (const glyph of str) {\n            const charCode = glyph.charCodeAt(0)\n            if (charCode <= 31) continue // non-printables\n            if (charCode <= 127) { // 7-bit ascii\n                if (escapedChars.includes(glyph)) rtfEscaped.push('\\\\')\n                rtfEscaped.push(glyph)\n            } else if (charCode <= 255) { // 8-bit ascii\n                rtfEscaped.push(\"\\\\'\" + x2(charCode))\n            } else { // unicode. may consist of multiple code points\n                for(const codepoint of glyph.split('')) {\n                    // TODO:\n                    // RTF control words generally accept signed 16-bit numbers as arguments.\n                    // For this reason, Unicode values greater than 32767 must be expressed as negative numbers.\n                    rtfEscaped.push(\"\\\\u\")\n                    rtfEscaped.push(codepoint.charCodeAt(0))\n                    rtfEscaped.push('?')\n                }\n            }\n        }\n        return \"{\\\\rtf1\\\\ansi\\\\ansicpg1252\\\\fromhtml1 {\\\\*\\\\htmltag1 \" + rtfEscaped.join(\"\") + \" }}\"\n    }\n}"],"names":["map","Base64","encode","input","o","c1","c2","c3","e1","e2","e3","e4","i","length","charCodeAt","isNaN","charAt","decode","replace","indexOf","String","fromCharCode","has_buf","Buffer","process","versions","node","Buffer_from","nbfs","from","e","buf","enc","bind","alloc","n","allocUnsafe","new_raw_buf","len","Array","new_unsafe_buf","s2a","s","split","x","chr0","chr1","__toBuffer","bufs","push","apply","___toBuffer","__utf16le","b","ss","__readUInt16LE","join","___utf16le","__hexlify","l","toString","slice","___hexlify","__bconcat","isArray","concat","maxlen","Uint8Array","set","bconcat","isBuffer","idx","__readInt16LE","u","__readUInt32LE","__readInt32LE","ReadShift","size","t","oI","oS","type","this","CRC32","WriteShift","val","f","parseInt","end","Math","min","cc","__writeUInt32LE","__writeInt32LE","CheckField","hexstr","fld","m","Error","prep_blob","blob","pos","read_shift","chk","write_shift","new_buf","sz","signed_crc_table","c","table","Int32Array","version","T","crc32_bstr","bstr","seed","C","L","crc32_buf","crc32_buf_8","crc32_str","str","d","factory","CFB","fs","exports","dirname","p","lastIndexOf","filename","write_dos_date","date","Date","hms","getHours","getMinutes","getSeconds","ymd","getFullYear","getMonth","getDate","parse_extra_field","flags","tgt","mtime","atime","ctime","mt","get_fs","require","parse","file","options","parse_zip","a2s","toLowerCase","root","data","di","row","test","mboundary","match","boundary","FileIndex","FullPaths","init_cfb","start_di","fcnt","line","parse_mime","parse_mad","mver","nmfs","difat_sec_cnt","dir_start","minifat_start","difat_start","ssz","fat_addrs","mv","HEADER_SIGNATURE","check_get_mver","header","shift","check_shifts","dir_cnt","q","j","sectors","nsectors","ceil","sectorify","sleuth_fat","sector_list","sl","chkd","buf_chain","modulus","k","jj","seen","addr","floor","nodes","make_sector_list","name","ENDOFCHAIN","Paths","files","mini","minifat_store","pl","sector","namelen","color","R","clsid","state","start","ct","read_date","storage","undefined","get_sector_list","content","get_mfat_entry","read_directory","FI","FP","dad","build_full_paths","raw","entry","payload","MSSZ","cnt","offset","pow","cfb","opts","CLSID","nm","find","rebuild_cfb","seed_cfb","gc","_file","pop","now","HEADER_CLSID","sort","y","r","Z","namecmp","elt","_write","_opts","fileType","out","fp","fi","ca","cstr","dispcnt","csl","qp","get_content_type","write_quoted_printable","write_base64_76","write_mad","cdirs","method","compression","start_cd","crcs","sz_cd","namebuf","outbuf","_deflateRawSync","write_zip","mini_size","fat_size","flen","mfat_cnt","fat_base","fat_cnt","difat_cnt","HEADER_SIG","chainit","w","consts","DIFSECT","FATSECT","_nm","_zlib","MAXREGSECT","FREESECT","HEADER_MINOR_VERSION","MAXREGSID","NOSTREAM","EntryTypes","deflateRawSync","_deflate","CLEN_ORDER","LEN_LN","DST_LN","use_typed_arrays","bitswap8","bit_swap_n","rev","read_bits_2","bl","h","read_bits_3","read_bits_5","read_bits_7","read_bits_n","v","realloc","M","copy","a","zero_fill_array","_deflateRaw","boff","off","build_tree","clens","cmap","MAX","ccode","bl_count","Uint16Array","ctree","cleni","fix_lmap","fix_dmap","dlens","dyn_lmap","dyn_dmap","dyn_cmap","dyn_len_1","dyn_len_2","dyn","_HLIT","_HDIST","_HCLEN","read_bits_4","next_code","hcodes","h1","h2","_inflate","usz","woff","OL","max_len_1","max_len_2","bits","code","len_eb","dst_eb","dst","inflate","warn_or_throw","wrn","msg","console","error","csz","efsz","fcsz","EF","parse_local_file","meth","setMilliseconds","setFullYear","setMonth","setDate","S","setHours","setMinutes","setSeconds","parse_dos_date","crc32","_csz","_usz","ef","InflRaw","InflateRaw","_processChunk","_finishFlushFlag","bytesRead","_inflateRawSync","_crc32","cfb_add","unsafe","ContentTypeMap","ctype","ext","text","encoded","toUpperCase","si","tmp","fdata","fname","cte","trim","oi","$$","parse_quoted_printable","fpath","utils","cfb_gc","path","UCFullPaths","UCPaths","UCPath","read","readFileSync","read_file","write","writeFileSync","writeFile","cfb_new","cfb_del","splice","cfb_mov","old_name","new_name","use_zlib","zlib","message","_inflateRaw","DO_NOT_EXPORT_CFB","module","CFBStorage","constructor","_cfb","_path","addStorage","child","getStorage","addStream","entryIndex","_getEntryIndex","getStream","of","toBytes","findIndex","MessageImportance","Object","freeze","IMPORTANCE_LOW","IMPORTANCE_NORMAL","IMPORTANCE_HIGH","MessageIconIndex","NewMail","Post","Other","ReadMail","UnreadMail","SubmittedMail","UnsentMail","ReceiptMail","RepliedMail","ForwardedMail","RemoteMail","DeliveryReceipt","ReadReceipt","NondeliveryReport","NonReadReceipt","RecallSMail","RecallFMail","TrackingMail","OutOfOfficeMail","RecallMail","TrackedMail","Contact","DistributionList","StickyNoteBlue","StickyNoteGreen","StickyNotePink","StickyNoteYellow","StickyNoteWhite","SingleInstanceAppointment","RecurringAppointment","SingleInstanceMeeting","RecurringMeeting","MeetingRequest","Accept","Decline","Tentatively","Cancellation","InformationalUpdate","TaskTask","UnassignedRecurringTask","AssigneesTask","AssignersTask","TaskRequest","TaskAcceptance","TaskRejection","JournalConversation","JournalEmailMessage","JournalMeetingRequest","JournalMeetingResponse","JournalTaskRequest","JournalTaskResponse","JournalNote","JournalFax","JournalPhoneCall","JournalLetter","JournalMicrosoftOfficeWord","JournalMicrosoftOfficeExcel","JournalMicrosoftOfficePowerPoint","JournalMicrosoftOfficeAccess","JournalDocument","JournalMeeting","JournalMeetingCancellation","JournalRemoteSession","MapiObjectType","MAPI_ABCONT","MAPI_ADDRBOOK","MAPI_ATTACH","MAPI_DISTLIST","MAPI_FOLDER","MAPI_FORMINFO","MAPI_MAILUSER","MAPI_MESSAGE","MAPI_PROFSECT","MAPI_SESSION","MAPI_STATUS","MAPI_STORE","RecipientRowDisplayType","MessagingUser","Forum","AutomatedAgent","AddressBook","PrivateDistributionList","RemoteAddressBook","RecipientType","Originator","To","Cc","Bcc","Resource","Room","PropertyType","PT_UNSPECIFIED","PT_NULL","PT_SHORT","PT_LONG","PT_FLOAT","PT_DOUBLE","PT_APPTIME","PT_ERROR","PT_BOOLEAN","PT_OBJECT","PT_I8","PT_LONGLONG","PT_UNICODE","PT_STRING8","PT_SYSTIME","PT_CLSID","PT_SVREID","PT_SRESTRICT","PT_ACTIONS","PT_BINARY","PT_MV_SHORT","PT_MV_LONG","PT_MV_FLOAT","PT_MV_DOUBLE","PT_MV_CURRENCY","PT_MV_APPTIME","PT_MV_LONGLONG","PT_MV_TSTRING","PT_MV_UNICODE","PT_MV_STRING8","PT_MV_SYSTIME","PT_MV_CLSID","PT_MV_BINARY","PropertyFlag","PROPATTR_MANDATORY","PROPATTR_READABLE","PROPATTR_WRITABLE","MessageClass","Unknown","IPM_Note","IPM_Note_SMIME","IPM_Note_SMIME_MultipartSigned","IPM_Note_Receipt_SMIME","IPM_Post","IPM_Octel_Voice","IPM_Voicenotes","IPM_Sharing","REPORT_IPM_NOTE_NDR","REPORT_IPM_NOTE_DR","REPORT_IPM_NOTE_DELAYED","REPORT_IPM_NOTE_IPNRN","REPORT_IPM_NOTE_IPNNRN","REPORT_IPM_SCHEDULE_MEETING_REQUEST_NDR","REPORT_IPM_SCHEDULE_MEETING_RESP_POS_NDR","REPORT_IPM_SCHEDULE_MEETING_RESP_TENT_NDR","REPORT_IPM_SCHEDULE_MEETING_CANCELED_NDR","REPORT_IPM_NOTE_SMIME_NDR","REPORT_IPM_NOTE_SMIME_DR","REPORT_IPM_NOTE_SMIME_MULTIPARTSIGNED_NDR","REPORT_IPM_NOTE_SMIME_MULTIPARTSIGNED_DR","IPM_Appointment","IPM_Task","MessageEditorFormat","EDITOR_FORMAT_DONTKNOW","EDITOR_FORMAT_PLAINTEXT","EDITOR_FORMAT_HTML","EDITOR_FORMAT_RTF","MessageFormat","TextOnly","HtmlOnly","TextAndHtml","MessagePriority","MSGFLAG_READ","MSGFLAG_UNMODIFIED","MSGFLAG_SUBMIT","MSGFLAG_UNSENT","MSGFLAG_HASATTACH","MSGFLAG_FROMME","MSGFLAG_ASSOCIATED","MSGFLAG_RESEND","MSGFLAG_NOTIFYREAD","MSGFLAG_NOTIFYUNREAD","MSGFLAG_EVERREAD","MSGFLAG_ORIGIN_X400","MSGFLAG_ORIGIN_INTERNET","MSGFLAG_ORIGIN_MISC_EXT","PRIO_NONURGENT","PRIO_NORMAL","PRIO_URGENT","AttachmentType","NO_ATTACHMENT","ATTACH_BY_VALUE","ATTACH_BY_REFERENCE","ATTACH_BY_REF_RESOLVE","ATTACH_BY_REF_ONLY","ATTACH_EMBEDDED_MSG","ATTACH_OLE","AttachmentFlags","ATT_INVISIBLE_IN_HTML","ATT_INVISIBLE_IN_RTF","ATT_MHTML_REF","StoreSupportMask","STORE_ANSI_OK","STORE_ATTACH_OK","STORE_CATEGORIZE_OK","STORE_CREATE_OK","STORE_ENTRYID_UNIQUE","STORE_HTML_OK","STORE_ITEMPROC","STORE_LOCALSTORE","STORE_MODIFY_OK","STORE_MV_PROPS_OK","STORE_NOTIFY_OK","STORE_OLE_OK","STORE_PUBLIC_FOLDERS","STORE_PUSHER_OK","STORE_READONLY","STORE_RESTRICTION_OK","STORE_RTF_OK","STORE_SEARCH_OK","STORE_SORT_OK","STORE_SUBMIT_OK","STORE_UNCOMPRESSED_RTF","STORE_UNICODE_OK","StoreSupportMaskConst","MessageFlags","High","Low","Normal","SevenBit","EightBit","QuotedPrintable","Binary","MapiAccess","MAPI_ACCESS_MODIFY","MAPI_ACCESS_READ","MAPI_ACCESS_DELETE","MAPI_ACCESS_CREATE_HIERARCHY","MAPI_ACCESS_CREATE_CONTENTS","MAPI_ACCESS_CREATE_ASSOCIATED","PropertyKind","Lid","Name","NotAssociated","PropertyTagLiterals","RecipientStoragePrefix","AttachmentStoragePrefix","SubStorageStreamPrefix","PropertiesStreamName","NameIdStorage","EntryStream","GuidStream","StringStream","PropertyTags","PR_ACKNOWLEDGEMENT_MODE","id","PR_ALTERNATE_RECIPIENT_ALLOWED","PR_AUTHORIZING_USERS","PR_AUTO_FORWARD_COMMENT_W","PR_AUTO_FORWARD_COMMENT_A","PR_AUTO_FORWARDED","PR_CONTENT_CONFIDENTIALITY_ALGORITHM_ID","PR_CONTENT_CORRELATOR","PR_CONTENT_IDENTIFIER_W","PR_CONTENT_IDENTIFIER_A","PR_CONTENT_LENGTH","PR_CONTENT_RETURN_REQUESTED","PR_CONVERSATION_KEY","PR_CONVERSION_EITS","PR_CONVERSION_WITH_LOSS_PROHIBITED","PR_CONVERTED_EITS","PR_DEFERRED_DELIVERY_TIME","PR_DELIVER_TIME","PR_DISCARD_REASON","PR_DISCLOSURE_OF_RECIPIENTS","PR_DL_EXPANSION_HISTORY","PR_DL_EXPANSION_PROHIBITED","PR_EXPIRY_TIME","PR_IMPLICIT_CONVERSION_PROHIBITED","PR_IMPORTANCE","PR_IPM_ID","PR_LATEST_DELIVERY_TIME","PR_MESSAGE_CLASS_W","PR_MESSAGE_CLASS_A","PR_MESSAGE_DELIVERY_ID","PR_MESSAGE_SECURITY_LABEL","PR_OBSOLETED_IPMS","PR_ORIGINALLY_INTENDED_RECIPIENT_NAME","PR_ORIGINAL_EITS","PR_ORIGINATOR_CERTIFICATE","PR_ORIGINATOR_DELIVERY_REPORT_REQUESTED","PR_ORIGINATOR_RETURN_ADDRESS","PR_PARENT_KEY","PR_PRIORITY","PR_ORIGIN_CHECK","PR_PROOF_OF_SUBMISSION_REQUESTED","PR_READ_RECEIPT_REQUESTED","PR_RECEIPT_TIME","PR_RECIPIENT_REASSIGNMENT_PROHIBITED","PR_REDIRECTION_HISTORY","PR_RELATED_IPMS","PR_ORIGINAL_SENSITIVITY","PR_LANGUAGES_W","PR_LANGUAGES_A","PR_REPLY_TIME","PR_REPORT_TAG","PR_REPORT_TIME","PR_RETURNED_IPM","PR_SECURITY","PR_INCOMPLETE_COPY","PR_SENSITIVITY","PR_SUBJECT_W","PR_SUBJECT_A","PR_SUBJECT_IPM","PR_CLIENT_SUBMIT_TIME","PR_REPORT_NAME_W","PR_REPORT_NAME_A","PR_SENT_REPRESENTING_SEARCH_KEY","PR_X400_CONTENT_TYPE","PR_SUBJECT_PREFIX_W","PR_SUBJECT_PREFIX_A","PR_NON_RECEIPT_REASON","PR_RECEIVED_BY_ENTRYID","PR_RECEIVED_BY_NAME_W","PR_RECEIVED_BY_NAME_A","PR_SENT_REPRESENTING_ENTRYID","PR_SENT_REPRESENTING_NAME_W","PR_SENT_REPRESENTING_NAME_A","PR_RCVD_REPRESENTING_NAME_W","PR_RCVD_REPRESENTING_NAME_A","PR_REPORT_ENTRYID","PR_READ_RECEIPT_ENTRYID","PR_MESSAGE_SUBMISSION_ID","PR_PROVIDER_SUBMIT_TIME","PR_ORIGINAL_SUBJECT_W","PR_ORIGINAL_SUBJECT_A","PR_DISC_VAL","PR_ORIG_MESSAGE_CLASS_W","PR_ORIG_MESSAGE_CLASS_A","PR_ORIGINAL_AUTHOR_ENTRYID","PR_ORIGINAL_AUTHOR_NAME_W","PR_ORIGINAL_AUTHOR_NAME_A","PR_ORIGINAL_SUBMIT_TIME","PR_REPLY_RECIPIENT_ENTRIES","PR_REPLY_RECIPIENT_NAMES_W","PR_REPLY_RECIPIENT_NAMES_A","PR_RECEIVED_BY_SEARCH_KEY","PR_RCVD_REPRESENTING_SEARCH_KEY","PR_READ_RECEIPT_SEARCH_KEY","PR_REPORT_SEARCH_KEY","PR_ORIGINAL_DELIVERY_TIME","PR_ORIGINAL_AUTHOR_SEARCH_KEY","PR_MESSAGE_TO_ME","PR_MESSAGE_CC_ME","PR_MESSAGE_RECIP_ME","PR_ORIGINAL_SENDER_NAME_W","PR_ORIGINAL_SENDER_NAME_A","PR_ORIGINAL_SENDER_ENTRYID","PR_ORIGINAL_SENDER_SEARCH_KEY","PR_ORIGINAL_SENT_REPRESENTING_NAME_W","PR_ORIGINAL_SENT_REPRESENTING_NAME_A","PR_ORIGINAL_SENT_REPRESENTING_ENTRYID","PR_ORIGINAL_SENT_REPRESENTING_SEARCH_KEY","PR_START_DATE","PR_END_DATE","PR_OWNER_APPT_ID","PR_RESPONSE_REQUESTED","PR_SENT_REPRESENTING_ADDRTYPE_W","PR_SENT_REPRESENTING_ADDRTYPE_A","PR_SENT_REPRESENTING_EMAIL_ADDRESS_W","PR_SENT_REPRESENTING_EMAIL_ADDRESS_A","PR_ORIGINAL_SENDER_ADDRTYPE_W","PR_ORIGINAL_SENDER_ADDRTYPE_A","PR_ORIGINAL_SENDER_EMAIL_ADDRESS_W","PR_ORIGINAL_SENDER_EMAIL_ADDRESS_A","PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE_W","PR_ORIGINAL_SENT_REPRESENTING_ADDRTYPE_A","PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS_W","PR_ORIGINAL_SENT_REPRESENTING_EMAIL_ADDRESS_A","PR_CONVERSATION_TOPIC_W","PR_CONVERSATION_TOPIC_A","PR_CONVERSATION_INDEX","PR_ORIGINAL_DISPLAY_BCC_W","PR_ORIGINAL_DISPLAY_BCC_A","PR_ORIGINAL_DISPLAY_CC_W","PR_ORIGINAL_DISPLAY_CC_A","PR_ORIGINAL_DISPLAY_TO_W","PR_ORIGINAL_DISPLAY_TO_A","PR_RECEIVED_BY_ADDRTYPE_W","PR_RECEIVED_BY_ADDRTYPE_A","PR_RECEIVED_BY_EMAIL_ADDRESS_W","PR_RECEIVED_BY_EMAIL_ADDRESS_A","PR_RCVD_REPRESENTING_ADDRTYPE_W","PR_RCVD_REPRESENTING_ADDRTYPE_A","PR_RCVD_REPRESENTING_EMAIL_ADDRESS_W","PR_RCVD_REPRESENTING_EMAIL_ADDRESS_A","PR_ORIGINAL_AUTHOR_ADDRTYPE_W","PR_ORIGINAL_AUTHOR_ADDRTYPE_A","PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS_W","PR_ORIGINAL_AUTHOR_EMAIL_ADDRESS_A","PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE_W","PR_ORIGINALLY_INTENDED_RECIP_ADDRTYPE_A","PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS_W","PR_ORIGINALLY_INTENDED_RECIP_EMAIL_ADDRESS_A","PR_TRANSPORT_MESSAGE_HEADERS_A","PR_TRANSPORT_MESSAGE_HEADERS_W","PR_DELEGATION","PR_TNEF_CORRELATION_KEY","PR_BODY_W","PR_BODY_A","PR_REPORT_TEXT_W","PR_REPORT_TEXT_A","PR_ORIGINATOR_AND_DL_EXPANSION_HISTORY","PR_REPORTING_DL_NAME","PR_REPORTING_MTA_CERTIFICATE","PR_RTF_SYNC_BODY_CRC","PR_RTF_SYNC_BODY_COUNT","PR_RTF_SYNC_BODY_TAG_W","PR_RTF_SYNC_BODY_TAG_A","PR_RTF_COMPRESSED","PR_RTF_SYNC_PREFIX_COUNT","PR_RTF_SYNC_TRAILING_COUNT","PR_ORIGINALLY_INTENDED_RECIP_ENTRYID","PR_BODY_HTML_A","PR_HTML","PR_BODY_CONTENT_LOCATION_A","PR_BODY_CONTENT_LOCATION_W","PR_INTERNET_MESSAGE_ID_A","PR_INTERNET_MESSAGE_ID_W","PR_IN_REPLY_TO_ID_A","PR_IN_REPLY_TO_ID_W","PR_INTERNET_REFERENCES_A","PR_INTERNET_REFERENCES_W","PR_CONTENT_INTEGRITY_CHECK","PR_EXPLICIT_CONVERSION","PR_IPM_RETURN_REQUESTED","PR_MESSAGE_TOKEN","PR_NDR_REASON_CODE","PR_NDR_DIAG_CODE","PR_NON_RECEIPT_NOTIFICATION_REQUESTED","PR_ORIGINATOR_NON_DELIVERY_REPORT_REQUESTED","PR_ORIGINATOR_REQUESTED_ALTERNATE_RECIPIENT","PR_PHYSICAL_DELIVERY_BUREAU_FAX_DELIVERY","PR_PHYSICAL_DELIVERY_MODE","PR_PHYSICAL_DELIVERY_REPORT_REQUEST","PR_PHYSICAL_FORWARDING_ADDRESS","PR_PHYSICAL_FORWARDING_ADDRESS_REQUESTED","PR_PHYSICAL_FORWARDING_PROHIBITED","PR_PHYSICAL_RENDITION_ATTRIBUTES","PR_PROOF_OF_DELIVERY","PR_PROOF_OF_DELIVERY_REQUESTED","PR_RECIPIENT_CERTIFICATE","PR_RECIPIENT_NUMBER_FOR_ADVICE_W","PR_RECIPIENT_NUMBER_FOR_ADVICE_A","PR_RECIPIENT_TYPE","PR_REGISTERED_MAIL_TYPE","PR_REPLY_REQUESTED","PR_REQUESTED_DELIVERY_METHOD","PR_SENDER_ENTRYID","PR_SENDER_NAME_W","PR_SENDER_NAME_A","PR_SUPPLEMENTARY_INFO_W","PR_SUPPLEMENTARY_INFO_A","PR_TYPE_OF_MTS_USER","PR_SENDER_SEARCH_KEY","PR_SENDER_ADDRTYPE_W","PR_SENDER_ADDRTYPE_A","PR_SENDER_EMAIL_ADDRESS_W","PR_SENDER_EMAIL_ADDRESS_A","PR_CURRENT_VERSION","PR_DELETE_AFTER_SUBMIT","PR_DISPLAY_BCC_W","PR_DISPLAY_BCC_A","PR_DISPLAY_CC_W","PR_DISPLAY_CC_A","PR_DISPLAY_TO_W","PR_DISPLAY_TO_A","PR_PARENT_DISPLAY_W","PR_PARENT_DISPLAY_A","PR_MESSAGE_DELIVERY_TIME","PR_MESSAGE_FLAGS","PR_MESSAGE_SIZE","PR_PARENT_ENTRYID","PR_SENTMAIL_ENTRYID","PR_CORRELATE","PR_CORRELATE_MTSID","PR_DISCRETE_VALUES","PR_RESPONSIBILITY","PR_SPOOLER_STATUS","PR_TRANSPORT_STATUS","PR_MESSAGE_RECIPIENTS","PR_MESSAGE_ATTACHMENTS","PR_SUBMIT_FLAGS","PR_RECIPIENT_STATUS","PR_TRANSPORT_KEY","PR_MSG_STATUS","PR_MESSAGE_DOWNLOAD_TIME","PR_CREATION_VERSION","PR_MODIFY_VERSION","PR_HASATTACH","PR_BODY_CRC","PR_NORMALIZED_SUBJECT_W","PR_NORMALIZED_SUBJECT_A","PR_RTF_IN_SYNC","PR_ATTACH_SIZE","PR_ATTACH_NUM","PR_ATTACH_FLAGS","PR_PREPROCESS","PR_ORIGINATING_MTA_CERTIFICATE","PR_PROOF_OF_SUBMISSION","PR_ENTRYID","PR_OBJECT_TYPE","PR_ICON","PR_MINI_ICON","PR_STORE_ENTRYID","PR_STORE_RECORD_KEY","PR_RECORD_KEY","PR_MAPPING_SIGNATURE","PR_ACCESS_LEVEL","PR_INSTANCE_KEY","PR_ROW_TYPE","PR_ACCESS","PR_ICON_INDEX","PR_LAST_VERB_EXECUTED","PR_LAST_VERB_EXECUTION_TIME","PR_ROWID","PR_DISPLAY_NAME_W","PR_RECIPIENT_DISPLAY_NAME_A","PR_RECIPIENT_DISPLAY_NAME_W","PR_RECIPIENT_FLAGS","PR_DISPLAY_NAME_A","PR_ADDRTYPE_W","PR_ADDRTYPE_A","PR_EMAIL_ADDRESS_W","PR_SMTP_ADDRESS_A","PR_SMTP_ADDRESS_W","PR_7BIT_DISPLAY_NAME_A","PR_7BIT_DISPLAY_NAME_W","PR_EMAIL_ADDRESS_A","PR_COMMENT_W","PR_COMMENT_A","PR_DEPTH","PR_PROVIDER_DISPLAY_W","PR_PROVIDER_DISPLAY_A","PR_CREATION_TIME","PR_LAST_MODIFICATION_TIME","PR_RESOURCE_FLAGS","PR_PROVIDER_DLL_NAME_W","PR_PROVIDER_DLL_NAME_A","PR_SEARCH_KEY","PR_PROVIDER_UID","PR_PROVIDER_ORDINAL","PR_FORM_VERSION_W","PR_FORM_VERSION_A","PR_FORM_CONTACT_NAME_W","PR_FORM_CONTACT_NAME_A","PR_FORM_CATEGORY_W","PR_FORM_CATEGORY_A","PR_FORM_CATEGORY_SUB_W","PR_FORM_CATEGORY_SUB_A","PR_FORM_HOST_MAP","PR_FORM_HIDDEN","PR_FORM_DESIGNER_NAME_W","PR_FORM_DESIGNER_NAME_A","PR_FORM_MESSAGE_BEHAVIOR","PR_DEFAULT_STORE","PR_STORE_SUPPORT_MASK","PR_STORE_STATE","PR_STORE_UNICODE_MASK","PR_IPM_SUBTREE_SEARCH_KEY","PR_IPM_OUTBOX_SEARCH_KEY","PR_IPM_WASTEBASKET_SEARCH_KEY","PR_IPM_SENTMAIL_SEARCH_KEY","PR_MDB_PROVIDER","PR_RECEIVE_FOLDER_SETTINGS","PR_VALID_FOLDER_MASK","PR_IPM_SUBTREE_ENTRYID","PR_IPM_OUTBOX_ENTRYID","PR_IPM_WASTEBASKET_ENTRYID","PR_IPM_SENTMAIL_ENTRYID","PR_VIEWS_ENTRYID","PR_COMMON_VIEWS_ENTRYID","PR_FINDER_ENTRYID","PR_CE_RECEIVE_BEFORE_SEND","PR_CONTAINER_FLAGS","PR_FOLDER_TYPE","PR_CONTENT_COUNT","PR_CONTENT_UNREAD","PR_CREATE_TEMPLATES","PR_DETAILS_TABLE","PR_SEARCH","PR_SELECTABLE","PR_SUBFOLDERS","PR_STATUS","PR_ANR_W","PR_ANR_A","PR_CONTENTS_SORT_ORDER","PR_CONTAINER_HIERARCHY","PR_CONTAINER_CONTENTS","PR_FOLDER_ASSOCIATED_CONTENTS","PR_DEF_CREATE_DL","PR_DEF_CREATE_MAILUSER","PR_CONTAINER_CLASS_W","PR_CONTAINER_CLASS_A","PR_CONTAINER_MODIFY_VERSION","PR_AB_PROVIDER_ID","PR_DEFAULT_VIEW_ENTRYID","PR_ASSOC_CONTENT_COUNT","PR_ATTACHMENT_X400_PARAMETERS","PR_ATTACH_CONTENT_ID_W","PR_ATTACH_CONTENT_ID_A","PR_ATTACH_CONTENT_LOCATION_W","PR_ATTACH_CONTENT_LOCATION_A","PR_ATTACH_DATA_OBJ","PR_ATTACH_DATA_BIN","PR_ATTACH_ENCODING","PR_ATTACH_EXTENSION_W","PR_ATTACH_EXTENSION_A","PR_ATTACH_FILENAME_W","PR_ATTACH_FILENAME_A","PR_ATTACH_METHOD","PR_ATTACH_LONG_FILENAME_W","PR_ATTACH_LONG_FILENAME_A","PR_ATTACH_PATHNAME_W","PR_ATTACH_PATHNAME_A","PR_ATTACH_RENDERING","PR_ATTACH_TAG","PR_RENDERING_POSITION","PR_ATTACH_TRANSPORT_NAME_W","PR_ATTACH_TRANSPORT_NAME_A","PR_ATTACH_LONG_PATHNAME_W","PR_ATTACH_LONG_PATHNAME_A","PR_ATTACH_MIME_TAG_W","PR_ATTACH_MIME_TAG_A","PR_ATTACH_ADDITIONAL_INFO","PR_DISPLAY_TYPE","PR_TEMPLATEID","PR_PRIMARY_CAPABILITY","PR_DISPLAY_TYPE_EX","PR_ACCOUNT_W","PR_ACCOUNT_A","PR_ALTERNATE_RECIPIENT","PR_CALLBACK_TELEPHONE_NUMBER_W","PR_CALLBACK_TELEPHONE_NUMBER_A","PR_CONVERSION_PROHIBITED","PR_DISCLOSE_RECIPIENTS","PR_GENERATION_W","PR_GENERATION_A","PR_GIVEN_NAME_W","PR_GIVEN_NAME_A","PR_GOVERNMENT_ID_NUMBER_W","PR_GOVERNMENT_ID_NUMBER_A","PR_BUSINESS_TELEPHONE_NUMBER_W","PR_BUSINESS_TELEPHONE_NUMBER_A","PR_HOME_TELEPHONE_NUMBER_W","PR_HOME_TELEPHONE_NUMBER_A","PR_INITIALS_W","PR_INITIALS_A","PR_KEYWORD_W","PR_KEYWORD_A","PR_LANGUAGE_W","PR_LANGUAGE_A","PR_LOCATION_W","PR_LOCATION_A","PR_MAIL_PERMISSION","PR_MHS_COMMON_NAME_W","PR_MHS_COMMON_NAME_A","PR_ORGANIZATIONAL_ID_NUMBER_W","PR_ORGANIZATIONAL_ID_NUMBER_A","PR_SURNAME_W","PR_SURNAME_A","PR_ORIGINAL_ENTRYID","PR_ORIGINAL_DISPLAY_NAME_W","PR_ORIGINAL_DISPLAY_NAME_A","PR_ORIGINAL_SEARCH_KEY","PR_POSTAL_ADDRESS_W","PR_POSTAL_ADDRESS_A","PR_COMPANY_NAME_W","PR_COMPANY_NAME_A","PR_TITLE_W","PR_TITLE_A","PR_DEPARTMENT_NAME_W","PR_DEPARTMENT_NAME_A","PR_OFFICE_LOCATION_W","PR_OFFICE_LOCATION_A","PR_PRIMARY_TELEPHONE_NUMBER_W","PR_PRIMARY_TELEPHONE_NUMBER_A","PR_BUSINESS2_TELEPHONE_NUMBER_W","PR_BUSINESS2_TELEPHONE_NUMBER_A","PR_MOBILE_TELEPHONE_NUMBER_W","PR_MOBILE_TELEPHONE_NUMBER_A","PR_RADIO_TELEPHONE_NUMBER_W","PR_RADIO_TELEPHONE_NUMBER_A","PR_CAR_TELEPHONE_NUMBER_W","PR_CAR_TELEPHONE_NUMBER_A","PR_OTHER_TELEPHONE_NUMBER_W","PR_OTHER_TELEPHONE_NUMBER_A","PR_TRANSMITABLE_DISPLAY_NAME_W","PR_TRANSMITABLE_DISPLAY_NAME_A","PR_PAGER_TELEPHONE_NUMBER_W","PR_PAGER_TELEPHONE_NUMBER_A","PR_USER_CERTIFICATE","PR_PRIMARY_FAX_NUMBER_W","PR_PRIMARY_FAX_NUMBER_A","PR_BUSINESS_FAX_NUMBER_W","PR_BUSINESS_FAX_NUMBER_A","PR_HOME_FAX_NUMBER_W","PR_HOME_FAX_NUMBER_A","PR_COUNTRY_W","PR_COUNTRY_A","PR_LOCALITY_W","PR_LOCALITY_A","PR_STATE_OR_PROVINCE_W","PR_STATE_OR_PROVINCE_A","PR_STREET_ADDRESS_W","PR_STREET_ADDRESS_A","PR_POSTAL_CODE_W","PR_POSTAL_CODE_A","PR_POST_OFFICE_BOX_W","PR_POST_OFFICE_BOX_A","PR_TELEX_NUMBER_W","PR_TELEX_NUMBER_A","PR_ISDN_NUMBER_W","PR_ISDN_NUMBER_A","PR_ASSISTANT_TELEPHONE_NUMBER_W","PR_ASSISTANT_TELEPHONE_NUMBER_A","PR_HOME2_TELEPHONE_NUMBER_W","PR_HOME2_TELEPHONE_NUMBER_A","PR_ASSISTANT_W","PR_ASSISTANT_A","PR_SEND_RICH_INFO","PR_STORE_PROVIDERS","PR_AB_PROVIDERS","PR_TRANSPORT_PROVIDERS","PR_DEFAULT_PROFILE","PR_AB_SEARCH_PATH","PR_AB_DEFAULT_DIR","PR_AB_DEFAULT_PAB","PR_FILTERING_HOOKS","PR_SERVICE_NAME_W","PR_SERVICE_NAME_A","PR_SERVICE_DLL_NAME_W","PR_SERVICE_DLL_NAME_A","PR_SERVICE_UID","PR_SERVICE_EXTRA_UIDS","PR_SERVICES","PR_SERVICE_SUPPORT_FILES_W","PR_SERVICE_SUPPORT_FILES_A","PR_SERVICE_DELETE_FILES_W","PR_SERVICE_DELETE_FILES_A","PR_AB_SEARCH_PATH_UPDATE","PR_PROFILE_NAME_A","PR_PROFILE_NAME_W","PR_IDENTITY_DISPLAY_W","PR_IDENTITY_DISPLAY_A","PR_IDENTITY_ENTRYID","PR_RESOURCE_METHODS","PR_RESOURCE_TYPE","PR_STATUS_CODE","PR_IDENTITY_SEARCH_KEY","PR_OWN_STORE_ENTRYID","PR_RESOURCE_PATH_W","PR_RESOURCE_PATH_A","PR_STATUS_STRING_W","PR_STATUS_STRING_A","PR_X400_DEFERRED_DELIVERY_CANCEL","PR_HEADER_FOLDER_ENTRYID","PR_REMOTE_PROGRESS","PR_REMOTE_PROGRESS_TEXT_W","PR_REMOTE_PROGRESS_TEXT_A","PR_REMOTE_VALIDATE_OK","PR_CONTROL_FLAGS","PR_CONTROL_STRUCTURE","PR_CONTROL_TYPE","PR_DELTAX","PR_DELTAY","PR_XPOS","PR_YPOS","PR_CONTROL_ID","PR_INITIAL_DETAILS_PANE","PR_MESSAGE_LOCALE_ID","PR_INTERNET_CPID","PR_CreatorAddrType_W","PR_CreatorEmailAddr_W","PR_CreatorSimpleDispName_W","PR_SenderSimpleDispName_W","PR_ATTACHMENT_LINKID","PR_ATTACHMENT_FLAGS","PR_ATTACHMENT_HIDDEN","PR_MSG_EDITOR_FORMAT","dateToFileTime","ns","getTime","fileTimeLower","Number","MAX_SAFE_INTEGER","fileTimeUpper","global","Long","low","high","unsigned","isLong","obj","prototype","__isLong__","defineProperty","value","enumerable","configurable","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","isFinite","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","RangeError","substring","radixToPower","result","power","mul","add","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","isPositive","isOdd","isEven","equals","other","notEquals","neq","lessThan","comp","lt","lessThanOrEqual","lte","greaterThan","gt","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","b00","divide","divisor","approx","res","toUnsigned","shru","shr","shl","max","log2","log","LN2","delta","approxRes","approxRem","modulo","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","toSigned","le","toBytesLE","toBytesBE","hi","lo","memcpy","ByteBuffer","capacity","littleEndian","noAssert","DEFAULT_CAPACITY","DEFAULT_ENDIAN","DEFAULT_NOASSERT","buffer","EMPTY_BUFFER","markedOffset","limit","VERSION","LITTLE_ENDIAN","BIG_ENDIAN","ByteBufferPrototype","__isByteBuffer__","stringFromCharCode","accessor","allocate","buffers","encoding","isByteBuffer","wrap","bi","bb","fromBase64","fromHex","fromBinary","fromUTF8","fromDebug","TypeError","clone","call","byteOffset","ArrayBuffer","byteLength","writeBitSet","relative","bytes","writeVarint32","writeByte","readBitSet","ret","readVarint32","readByte","readBytes","writeBytes","append","writeInt8","capacity0","resize","readInt8","writeUint8","capacity1","writeUInt8","readUint8","readUInt8","writeInt16","capacity2","writeShort","readInt16","readShort","writeUint16","capacity3","writeUInt16","readUint16","readUInt16","writeInt32","capacity4","writeInt","readInt32","readInt","writeUint32","capacity5","writeUInt32","readUint32","readUInt32","writeInt64","capacity6","writeLong","readInt64","readLong","writeUint64","capacity7","writeUInt64","readUint64","readUInt64","writeFloat32","capacity8","writeFloatLE","writeFloatBE","writeFloat","readFloat32","readFloatLE","readFloatBE","readFloat","writeFloat64","capacity9","writeDoubleLE","writeDoubleBE","writeDouble","readFloat64","readDoubleLE","readDoubleBE","readDouble","MAX_VARINT32_BYTES","calculateVarint32","zigZagEncode32","zigZagDecode32","capacity10","writeVarint32ZigZag","err","readVarint32ZigZag","MAX_VARINT64_BYTES","calculateVarint64","part0","part1","part2","zigZagEncode64","zigZagDecode64","writeVarint64","capacity11","writeVarint64ZigZag","readVarint64","readVarint64ZigZag","writeCString","capacity12","readCString","temp","writeIString","capacity13","readIString","readUTF8String","METRICS_BYTES","METRICS_CHARS","writeUTF8String","capacity14","writeString","calculateUTF8Chars","utfx","calculateUTF16asUTF8","stringSource","calculateUTF8Bytes","calculateString","metrics","sd","cs","ps","arguments","decodeUTF8","cp","UTF8toUTF16","readString","writeVString","capacity15","readVString","source","capacity16","appendTo","target","assert","clear","compact","begin","copyTo","targetOffset","sourceOffset","sourceLimit","targetRelative","ensureCapacity","current","fill","flip","mark","order","LE","BE","bigEndian","prepend","diff","prependTo","printDebug","toDebug","remaining","reset","reverse","skip","toBuffer","forceCopy","toArrayBuffer","ab","toUTF8","toBase64","toHex","toBinary","toColumns","btoa","atob","b64","columns","hex","asc","ch","rs","ho","hm","hl","fail","src","UTF16toUTF8","encodeUTF8","localeToLcid","entries","reduce","acc","assign","Xp","padStart","X4","X8","stringToUtf8Array","TextEncoder","stringToUtf16LeArray","u16","byteBufferAsUint8Array","makeByteBuffer","initCap","otherBuffer","isNullOrEmpty","isNullOrWhiteSpace","localeId","locale","lcid","navigator","language","languages","rnds8Pool","poolPtr","rng","crypto","randomFillSync","byteToHex","substr","stringify","arr","uuid","REGEX","validate","v4","rnds","random","Property","_data","_multiValue","multiValue","_flags","tag","shortName","flagsCollection","asInt","view","DataView","getInt16","getInt32","asSingle","getFloat32","asDouble","getFloat64","asDecimal","asDateTime","oaDate","days","ms","abs","oADateToDate","lower","upper","fileTimeToDate","getUint32","asBool","Boolean","asLong","asString","array","TextDecoder","asGuid","asBinary","Properties","addOrReplaceProperty","index","addProperty","setFloat64","setInt32","setInt16","setFloat32","codes","stringToAnsiArray","writeProperties","prefix","messageSize","forEach","property","TopLevelProperties","super","nextRecipientId","nextAttachmentId","recipientCount","attachmentCount","stream","entryStreamItem","EntryStreamItem","fromBuffer","streamName","nameIdentifierOrStringOffset","indexAndKindInformation","IndexAndKindInformation","nameIdentifierOrStringOffsetHex","packed","guidIndex","propertyKind","propertyIndex","packedValue","includes","guid","g","StringStreamItem","get4BytesBoundary","NamedProperties","topLevelProperties","_topLevelProperties","mapiTag","_namedPropertyIndex","nameIdentifier","kind","nameSize","entryStream","stringStream","guidStream","entryStream2","guids","np","filter","_generateStreamString","guidTarget","Address","email","displayName","addressType","makeUUIDBuffer","instanceKey","generateInstanceKey","generateEntryId","RecipientProperties","Recipients","addTo","objectType","displayType","Recipient","addCc","addBcc","writeToStorage","rootStorage","recipient","rowId","recipientType","_rowId","_displayType","_objectType","propertiesStream","emailAddress","key","parse5322","inStr","getPos","setPos","initialize","parseString","tokens","semantic","children","ast","parent","compareToken","fxnCompare","tok","literal","lit","args","opt","prod","invis","colwsp","star","minimum","count","isUTF8NonAscii","cr","crlf","lf","dquote","htab","sp","vchar","accept","rfc6532","wsp","quotedPair","obsQP","fws","obsFws","ctext","obsCtext","ccontent","comment","cfws","atext","atom","dotAtomText","maybeText","dotAtom","qtext","obsQtext","qcontent","quotedString","word","address","mailbox","group","nameAddr","addrSpec","angleAddr","obsAngleAddr","groupList","obsPhrase","mailboxList","obsMboxList","addressList","obsAddrList","obsGroupList","localPart","obsLocalPart","dtext","obsDtext","domainLiteral","domain","obsDomain","rejectTLD","obsNoWsCtl","strict","atInDisplayName","obsRoute","obsDomainList","findNode","stack","findAllNodesNoChildren","names","namesLookup","giveResult","addresses","groupsAndMailboxes","groupOrMailbox","giveResultGroup","giveResultMailbox","simple","simplifyResult","oneResult","partial","groupName","groupResultMailboxes","mailboxes","parts","grabSemantic","aspec","findAllNodes","comments","local","concatComments","parsed","startProduction","handleOpts","startAt","defs","isString","isNullUndef","defaults","isObject","parseOneAddress","parseAddressList","parseFrom","parseSender","parseReplyTo","map_addresses","adr","Group","ea_lib","display_name","phrase","format","_extract_name","host","exec","user","RegExp","_quote_no_esc","isAllUpper","isAllLower","nameCase","string","_","d1","safer","hasOwnProperty","Safer","encodingOrOffset","kStringMaxLength","binding","constants","MAX_LENGTH","kMaxLength","MAX_STRING_LENGTH","PrependBOMWrapper","encoder","addBOM","StripBOMWrapper","decoder","pass","stripBOM","utf8","bomAware","cesu8","unicode11utf8","ucs2","utf16le","binary","base64","_internal","InternalCodec","codecOptions","iconv","encodingName","InternalEncoderBase64","InternalEncoderCesu8","InternalDecoderCesu8","defaultCharUnicode","InternalEncoder","InternalDecoder","StringDecoder","codec","prevStr","contBytes","accBytes","completeQuads","bufIdx","charCode","curByte","Utf32Codec","isLE","Utf32Encoder","highSurrogate","Utf32Decoder","badChar","overflow","_writeCodepoint","codepoint","write32","writeUInt32LE","writeUInt32BE","readUInt16LE","isHighSurrogate","isLowSurrogate","Utf32AutoCodec","Utf32AutoEncoder","getEncoder","defaultEncoding","Utf32AutoDecoder","initialBufs","initialBufsLen","detectEncoding","charsProcessed","invalidLE","invalidBE","bmpCharsLE","bmpCharsBE","outer_loop","getDecoder","resStr","trail","Utf16BECodec","Utf16BEEncoder","Utf16BEDecoder","overflowByte","buf2","Utf16Codec","Utf16Encoder","Utf16Decoder","asciiCharsLE","asciiCharsBE","Utf7Codec","Utf7Encoder","Utf7Decoder","nonDirectChars","inBase64","base64Accum","chunk","base64Regex","base64Chars","plusChar","minusChar","andChar","lastI","b64str","canBeDecoded","Utf7IMAPCodec","Utf7IMAPEncoder","base64AccumIdx","Utf7IMAPDecoder","uChar","base64IMAPChars","SBCSCodec","chars","asciiString","decodeBuf","encodeBuf","defaultCharSingleByte","SBCSEncoder","SBCSDecoder","newBuf","idx1","idx2","DBCSCodec","UNASSIGNED_NODE","mappingTable","decodeTables","decodeTableSeq","_addDecodeChunk","gb18030","commonThirdByteNodeIdx","commonFourthByteNodeIdx","firstByteNode","secondByteNode","thirdByteNode","fourthByteNode","encodeTable","encodeTableSeq","skipEncodeChars","encodeSkipVals","to","_fillEncodeTable","encodeAdd","_setEncodeChar","defCharSB","DBCSEncoder","leadSurrogate","seqObj","DBCSDecoder","nodeIdx","prevBytes","findIdx","mid","_getDecodeTrieNode","curAddr","writeTable","part","codeTrail","seq","_getEncodeBucket","uCode","dbcsCode","bucket","_setEncodeSequence","oldVal","hasValues","subNodeEmpty","mbCode","subNodeIdx","newPrefix","nextChar","resCode","subtable","uChars","gbChars","prevOffset","seqStart","ptr","uCodeLead","bytesArr","modules","stream_module","encodings","skipDecodeWarning","encodingExists","getCodec","toEncoding","fromEncoding","_codecDataCache","_canonicalizeEncoding","codecDef","bomHandling","PrependBOM","StripBOM","enableStreamingAPI","supportsStreams","streams","Transform","IconvLiteEncoderStream","conv","decodeStrings","IconvLiteDecoderStream","create","_transform","done","_flush","collect","cb","chunks","on","encodeStream","decodeStream","qpTokenByOctet","safeAsciiChar","headerUnsafeAsciiChars","OneOffEntryId","messageFormat","canLookupEmailAddress","_messageFormat","_canLookupEmailAddress","toByteArray","Sender","senderIsCreator","_senderIsCreator","senderEntryId","AttachmentProperties","MimeTypes","Attachment","fileName","creationTime","lastModificationTime","renderingPosition","contentId","isContactPhoto","attachmentProperties","extension","fileNameToDosFileName","getPathExtension","aos","dot","getMimeType","Attachments","_checkAttachmentFileName","cid","some","attachment","isInline","ReportTag","ansiText","cookie","storeEntryIdSize","folderEntryIdSize","messageEntryIdSize","searchFolderEntryIdSize","messageSearchKeySize","CRC32_TABLE","findLongestMatch","dictionary","inputBuffer","positionData","dictionaryOffset","matchLength","dictionaryIndex","inputCharacter","compress","matchData","builder","initialDictionary","getInitialDict","tokenBuffer","resultBuffer","controlByte","controlBit","dictReference","origOffset","cur","calculate","subjectPrefixRegex","_storage","nameIdStorage","_namedProperties","_save","_messageClass","_messageSize","_saved","saveToBuffer","propertyTag","draft","readReceipt","recipients","replyToRecipients","attachments","priority","importance","iconIndex","_bodyHtml","_bodyText","_sentOn","_receivedOn","sender","_sender","bodyHtml","html","bodyText","txt","bodyFormat","fmt","messageEditorFormat","subject","_subject","_setSubject","bcc","replyTo","tos","ccs","bccs","replyTos","sentOn","when","receivedOn","attach","headers","transportMessageHeadersText","_writeToStorage","subjectPrefix","_subjectNormalized","startsWith","transportHeaders","transportMessageHeaders","messageId","refCount","references","replCount","inReplyTo","internetMessageId","internetReferences","inReplyToId","messageFlags","_bodyRtf","rtfEscaped","escapedChars","glyph","escapeRtf","bodyRtfCompressed","utcNow","reportTag","_receiving","_receivingRepresenting","_representing","displayTo","displayCc","displayBcc"],"mappings":"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CA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,aACA,cACA,aACA,aACA,aACA,eACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,WAGAC,QAAO,CAACC,GAAMv3C,EAAGwH,KAAOuI,OAAOynC,OAAOD,EAAK,EAAG/vC,GAAUxH,KAAK,IChNvE,SAASy3C,EAAG9hD,EAAW6F,UACf7F,EAAEyB,SAAS,IAAIsgD,SAASl8C,EAAG,KAAKqR,cAyBjC,SAAS8qC,EAAGhiD,UACX8hD,EAAG9hD,EAAG,GAQP,SAASiiD,EAAGjiD,UACX8hD,EAAG9hD,EAAG,GA0BP,SAASkiD,EAAkB58C,UAC1B,IAAI68C,eAAcpkD,OAAOuH,GAQ1B,SAAS88C,EAAqB98C,SAC9B+8C,EAAMzvC,YAAYlT,KAAK4F,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cACF,eACC,gBACC,gBAEA,cACF,gBACE,qBAEK,kBAEJ,iBACC,gBAED,cACN,6BAEe,0BACH,cACZ,sBAEQ,cACR,kBACI,mBACC,mBACA,eAEJ,wBACQ,gBC7KF,KACR,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,iBACA,aACC,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACC,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBACA,kBACA,kBACA,kBACA,kBACA,uBACK,MACJ,cACC,2IAED,mBACD,yBACM,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,0BACK,MACL,cACC,4IAEA,qBACD,uBACE,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,oBACC,MACF,cACC,4IAEA,qBACE,MACH,cACC,4IAEA,sBACE,MACH,cACC,4IAEA,sBACE,MACH,cACC,4IAEA,sBACE,MACH,cACC,4IAEA,sBACE,MACH,cACC,4IAEA,sBACE,MACH,cACC,4IAEA,kBACF,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,oRAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,cACH,MACC,cACC,2IAED,iBACE,eACF,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,gBACH,MACA,cACC,4IAEA,mBACE,qBACE,MACL,cACC,gJAEI,MACL,cACC,6IAEC,MACF,cACC,+IAEG,MACJ,cACC,6IAEC,MACF,cACC,+IAEG,MACJ,cACC,4IAEA,MACD,cACC,oJAEG,MACJ,cACC,+IAEG,MACJ,cACC,0IAEF,MACC,cACC,0IAEF,MACC,cACC,2IAED,MACA,cACC,0IAEF,MACC,cACC,6IAEC,MACF,cACC,2IAED,MACA,cACC,yIAEH,MACE,cACC,6RAEQ,MACT,cACC,+IAEG,MACJ,cACC,0IAEF,MACC,cACC,2IAED,MACA,cACC,sRAEC,MACF,cACC,sRAEC,MACF,cACC,qRAEC,MACF,cACC,8IAEE,MACH,cACC,0IAEF,MACC,cACC,2IAED,MACA,cACC,qIF/bTjE,GAAS+H,GAAwB/H,UAMrBu8D,GAMZC,GAAkB,IAAIx7D,MAAM,KAGvB3B,GAAI,EAAGA,GAAI,IAAOA,KACvBm9D,GAAgBn9D,KARH,EAYjB,SAASk9D,GAAU5F,EAAcC,WACxBC,aAAeF,EAAaE,cAC5BF,EACD,MAAM,IAAIhyD,MAAM,8CACfgyD,EAAarxD,MACd,MAAM,IAAIX,MAAM,aAAehB,KAAKkzD,aAAe,sBAGnD4F,EAAe9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ACjEtC,EAAOlB,YAAY18B,EAAaihB,qBAAsBhoC,KAAKknD,oBAGzD+X,EAAgB,IAAIT,GACtBx+D,KAAKgnD,MACLhnD,KAAKinD,YACLjnD,KAAKknD,YACLlnD,KAAK2+D,eACL3+D,KAAK4+D,wBAETja,EAAOlB,YAAY18B,EAAa6M,kBAAmBqrC,EAAcJ,eAEjEla,EAAOlB,YAAY18B,EAAasN,0BAA2Br0B,KAAKgnD,OAChErC,EAAOlB,YAAY18B,EAAa8M,iBAAkB7zB,KAAKinD,aACvDtC,EAAOlB,YAAY18B,EAAaoN,qBAAsBn0B,KAAKknD,cCzC5D,MAAMgY,WAA6B5b,GAatCU,gBAAgBn7C,EAAco7C,EAA2BC,UAO9CI,MAAMN,gBAAgBn7C,GANKhM,IAC9BonD,EAAOpnD,GAGPA,EAAI45C,YAAY,KAE4CyN,ICvBxE,MAAMib,GAAY9nD,OAAOC,OAAO,KACrB,mBACC,uBACD,uBACA,oBACA,kBACD,kCACC,mCACA,gBACA,mCACA,mCACA,oBACC,gBACD,2CACA,qBACD,6BACC,kBACC,kBACA,iBACD,wBACA,6BACA,mCACA,iEACK,kCACG,mCACR,uBACA,iBACA,qBACA,iBACA,eACA,qBACA,8BACC,0BACF,iBACC,gBACA,sBACA,4BACA,mBACE,0BACF,8BACD,gBACC,gBACA,wBACC,uBACD,0BACA,wBACA,yBACD,yBACC,qCACC,4BACD,yBACD,iBACC,sBACA,4BACA,0BACC,2BACC,gCACF,2BACA,kBACA,uBACG,2BACF,kBACA,yBACD,iBACA,wBACA,+BACA,2BACA,4BACA,wBACA,aACF,mBACE,iBACA,kBACC,uBACD,6BACA,0BACE,0BACF,oBACG,+BACH,iCACA,gBACA,iBACA,+BACE,eACF,8BACD,eACC,0BACC,wDACA,8EACD,0BACC,wDACA,6EACF,+BACC,2BACA,0BACA,uBACD,iBACC,0BACA,uBACA,sBACA,6BACA,uBACD,0BACC,qBACA,oCACA,4BACD,6BACC,oBACA,wBACA,+BACA,iBACA,iBACA,0BACA,iBACC,mBACD,gBACA,oBACA,qBACA,4BACA,+BACA,iBACA,oBACA,2BACF,kBACG,gBACF,kBACC,eACD,eACC,kBACA,kBACA,wBACA,yBACC,uBACH,gBACC,0BACE,yBACD,yBACC,6BACD,6BACD,iBACC,oBACA,6BACA,+BACC,8BACD,yBACA,sBACA,qBACF,mBACI,iBACD,gBACD,gBACA,uBACA,gBACA,8BACA,mBACA,oBACA,iBACA,iBACC,iBACA,uBACD,uBACA,2BACA,yBACC,+BACD,sBACA,oCACD,wBACC,oCACA,qBACD,cACA,6BACC,kBACA,qBACA,+BACA,kBACA,gCACC,iBACD,iBACA,mCACC,yBACK,kBACL,iBACD,iBACA,iBACA,iBACD,8BACE,uBACD,sBACA,iBACA,uBACD,qBACC,0BACE,2BACD,iBACD,qBACA,iBACA,yBACA,iBACA,oBACA,0BACA,gCACA,gCACA,iBACA,iBACA,iBACA,sBACA,gBACA,gBACA,mCACK,gCACL,4BACA,iBACA,0BACA,0CACA,uBACA,iBACA,wBACA,8BACC,gBACF,6BACC,kBACC,iBACD,wBACA,kDACC,yBACF,yBACC,yBACA,4BACA,gBACA,wBACE,wBACF,iBACA,iBACA,iBACC,iBACA,gBACD,iBACA,6BACC,iBACD,kBACC,iBACD,iBACA,iCACA,6BACC,iBACD,4BACA,4BACA,sBACD,6BACC,eACF,iBACE,+BACD,uBACA,iBACC,2CACA,sBACG,kBACJ,2BACC,mDACC,mBACD,mBACA,iCACA,+BACA,4BACA,qBACA,sBACA,4BACA,gBACA,gBACA,gBACA,sBACA,yBACC,kCACA,kCACA,iBACA,uBACD,yBACA,0BACA,oCACA,uCACA,6BACA,6BACA,sCACA,mCACC,0BACD,kBACA,8BACA,wBACA,mBACA,kBACA,qBACA,wBACE,iBACF,2BACA,+BACA,kBACC,iBACD,0CACA,gCACD,iBACC,gCACA,8BACA,8BACA,4BACA,2BACD,sBACC,4BACA,4BACA,4BACA,gBACA,oCACA,qCACC,8DACA,4EACD,kBACA,qCACC,0DACD,8BACA,qCACC,+DACA,6EACD,qCACC,kEACA,gFACD,+BACA,8BACA,6BACA,yBACD,2BACD,oBACE,gCACA,mBACA,oCACA,mCACD,2BACC,uBACC,qBACD,qBACA,wBACA,mBACC,wBACD,uBACD,qBACA,2BACC,2BACA,gCACC,wBACA,wBACF,6BACC,iBACD,mCACC,gBACA,2BACA,2BACA,gCACA,qCACC,yBACF,2BACC,kCACA,0BACA,mBACD,oBACC,mBACD,6BACC,gBACA,0BACA,+BACA,mCACA,sBACC,iBACD,sBACA,0BACA,sBACA,yBACG,4CACA,+CACF,gBACD,iBACC,uBACF,yBACG,gBACF,oBACC,iBACD,wBACA,yBACA,yBACA,yBACA,wBACD,4BACC,wBACC,uBACD,kBACA,yBACA,uCACA,+BACA,8BACG,2BACH,gBACA,gCACA,gCACA,iCACA,wCACC,qBACH,iBACE,sBACA,gBACA,2BACI,+BACD,2BACH,kBACA,oBACA,0BACA,qCACC,kBACH,0BACE,wBACA,2BACA,yBACC,yBACD,yBACC,gCACG,6BACH,iBACD,gCACC,iBACD,gBACD,0BACC,8BACD,wBACC,sBACA,qBACA,gCACA,gCACG,oBACH,iBACA,iBACA,iBACC,oBACD,oBACA,0BACC,oBACD,sBACE,wBACF,qBACD,sBACC,2BACA,mBACE,iBACF,uBACA,sBACA,gBACA,6BACC,iBACD,iBACA,sCACA,sCACA,gBACA,mBACA,oBACA,4BACA,qBACA,6BACC,yBACD,oBACA,0BACA,0BACA,0BACA,iCACA,iCACA,yBACA,gBACA,0BACC,yBACD,+BACA,+BACA,4BACC,iBACD,yBACA,wBACA,+BACA,wBACC,iCACC,sCACD,6BACD,uBACA,qBACA,qBACA,sBACC,0BACA,yBACD,8BACA,6BACD,8BACC,8BACA,+BACA,0BACA,0BACA,0BACA,iBACA,qBACC,gBACA,gCACD,4BACA,qBACA,qBACC,6BACA,qBACD,sBACC,2BACD,qCACC,4BACD,sBACA,0BACA,kBACA,8BACE,4BACF,qBACA,gCACC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,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,SAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,UAAY,WAAY,WAAY,WAChD,UAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAAY,WAAY,WAChD,WAAY,WAAY,WAAY,WAAY,WAChD,SAAY,WAAY,WAAY,WAAY,UAChD,WAAY,WAAY,WAAY,UAAY,WAChD,WAAY,WAAY,UAA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"}